// <auto-generated />
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof (OrleansGeneratedCode.OrleansCodeGen66f1de461eFeaturePopulator))]
[assembly: global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute(@"GrainImplementation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
namespace OrleansGeneratedCode55A989F1
{
    using global::Orleans;
    using global::System.Reflection;
}

namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
    internal sealed class OrleansCodeGen66f1de461eFeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::SystemImplementation.CountWordStatefulOperator)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::SystemImplementation.CountWordStatelessOperator)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::SystemImplementation.ErrorDetector)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::SystemImplementation.SentenceGenerator)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::SystemImplementation.TestStatelessOperator)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::SystemImplementation.TopologyManager)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::GrainImplementation.BatchCoodinator)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::GrainImplementation.BatchTracker)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::GrainImplementation.StreamSource)));
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddKnownType(@"MatchState,System", @"MatchState");
            feature.AddKnownType(@"Interop,System", @"Interop");
            feature.AddKnownType(@"FXAssembly,System", @"FXAssembly");
            feature.AddKnownType(@"ThisAssembly,System", @"ThisAssembly");
            feature.AddKnownType(@"AssemblyRef,System", @"AssemblyRef");
            feature.AddKnownType(@"Microsoft.VisualBasic.VBCodeProvider,System", @"Microsoft.VisualBasic.VBCodeProvider");
            feature.AddKnownType(@"System.CodeDom.Compiler.CodeDomProvider,System", @"CodeDomProvider");
            feature.AddKnownType(@"System.ComponentModel.Component,System", @"Component");
            feature.AddKnownType(@"System.ComponentModel.IComponent,System", @"IComponent");
            feature.AddKnownType(@"Microsoft.VisualBasic.VBCodeGenerator,System", @"Microsoft.VisualBasic.VBCodeGenerator");
            feature.AddKnownType(@"System.CodeDom.Compiler.CodeCompiler,System", @"CodeCompiler");
            feature.AddKnownType(@"System.CodeDom.Compiler.CodeGenerator,System", @"CodeGenerator");
            feature.AddKnownType(@"System.CodeDom.Compiler.ICodeGenerator,System", @"ICodeGenerator");
            feature.AddKnownType(@"System.CodeDom.Compiler.ICodeCompiler,System", @"ICodeCompiler");
            feature.AddKnownType(@"Microsoft.VisualBasic.VBMemberAttributeConverter,System", @"Microsoft.VisualBasic.VBMemberAttributeConverter");
            feature.AddKnownType(@"Microsoft.VisualBasic.VBModifierAttributeConverter,System", @"Microsoft.VisualBasic.VBModifierAttributeConverter");
            feature.AddKnownType(@"System.ComponentModel.TypeConverter,System", @"TypeConverter");
            feature.AddKnownType(@"Microsoft.VisualBasic.VBTypeAttributeConverter,System", @"Microsoft.VisualBasic.VBTypeAttributeConverter");
            feature.AddKnownType(@"Microsoft.CSharp.CSharpCodeProvider,System", @"Microsoft.CSharp.CSharpCodeProvider");
            feature.AddKnownType(@"Microsoft.CSharp.CSharpCodeGenerator,System", @"Microsoft.CSharp.CSharpCodeGenerator");
            feature.AddKnownType(@"Microsoft.CSharp.CSharpTypeAttributeConverter,System", @"Microsoft.CSharp.CSharpTypeAttributeConverter");
            feature.AddKnownType(@"Microsoft.CSharp.CSharpModifierAttributeConverter,System", @"Microsoft.CSharp.CSharpModifierAttributeConverter");
            feature.AddKnownType(@"Microsoft.CSharp.CSharpMemberAttributeConverter,System", @"Microsoft.CSharp.CSharpMemberAttributeConverter");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods,System", @"Microsoft.Win32.NativeMethods");
            feature.AddKnownType(@"Microsoft.Win32.PowerModeChangedEventArgs,System", @"Microsoft.Win32.PowerModeChangedEventArgs");
            feature.AddKnownType(@"Microsoft.Win32.PowerModeChangedEventHandler,System", @"Microsoft.Win32.PowerModeChangedEventHandler");
            feature.AddKnownType(@"Microsoft.Win32.PowerModes,System", @"Microsoft.Win32.PowerModes");
            feature.AddKnownType(@"Microsoft.Win32.SafeNativeMethods,System", @"Microsoft.Win32.SafeNativeMethods");
            feature.AddKnownType(@"Microsoft.Win32.SessionEndedEventArgs,System", @"Microsoft.Win32.SessionEndedEventArgs");
            feature.AddKnownType(@"Microsoft.Win32.SessionEndedEventHandler,System", @"Microsoft.Win32.SessionEndedEventHandler");
            feature.AddKnownType(@"Microsoft.Win32.SessionEndingEventArgs,System", @"Microsoft.Win32.SessionEndingEventArgs");
            feature.AddKnownType(@"Microsoft.Win32.SessionEndingEventHandler,System", @"Microsoft.Win32.SessionEndingEventHandler");
            feature.AddKnownType(@"Microsoft.Win32.SessionEndReasons,System", @"Microsoft.Win32.SessionEndReasons");
            feature.AddKnownType(@"Microsoft.Win32.SessionSwitchEventArgs,System", @"Microsoft.Win32.SessionSwitchEventArgs");
            feature.AddKnownType(@"Microsoft.Win32.SessionSwitchEventHandler,System", @"Microsoft.Win32.SessionSwitchEventHandler");
            feature.AddKnownType(@"Microsoft.Win32.SessionSwitchReason,System", @"Microsoft.Win32.SessionSwitchReason");
            feature.AddKnownType(@"Microsoft.Win32.SystemEvents,System", @"Microsoft.Win32.SystemEvents");
            feature.AddKnownType(@"Microsoft.Win32.TimerElapsedEventArgs,System", @"Microsoft.Win32.TimerElapsedEventArgs");
            feature.AddKnownType(@"Microsoft.Win32.TimerElapsedEventHandler,System", @"Microsoft.Win32.TimerElapsedEventHandler");
            feature.AddKnownType(@"Microsoft.Win32.UnsafeNativeMethods,System", @"Microsoft.Win32.UnsafeNativeMethods");
            feature.AddKnownType(@"Microsoft.Win32.UserPreferenceCategory,System", @"Microsoft.Win32.UserPreferenceCategory");
            feature.AddKnownType(@"Microsoft.Win32.UserPreferenceChangedEventArgs,System", @"Microsoft.Win32.UserPreferenceChangedEventArgs");
            feature.AddKnownType(@"Microsoft.Win32.UserPreferenceChangedEventHandler,System", @"Microsoft.Win32.UserPreferenceChangedEventHandler");
            feature.AddKnownType(@"Microsoft.Win32.UserPreferenceChangingEventArgs,System", @"Microsoft.Win32.UserPreferenceChangingEventArgs");
            feature.AddKnownType(@"Microsoft.Win32.UserPreferenceChangingEventHandler,System", @"Microsoft.Win32.UserPreferenceChangingEventHandler");
            feature.AddKnownType(@"Microsoft.Win32.InternetSecurityManager,System", @"Microsoft.Win32.InternetSecurityManager");
            feature.AddKnownType(@"Microsoft.Win32.IInternetSecurityManager,System", @"Microsoft.Win32.IInternetSecurityManager");
            feature.AddKnownType(@"Microsoft.Win32.IntranetZoneCredentialPolicy,System", @"Microsoft.Win32.IntranetZoneCredentialPolicy");
            feature.AddKnownType(@"System.Net.ICredentialPolicy,System", @"ICredentialPolicy");
            feature.AddKnownType(@"Microsoft.Win32.WinInetCache,System", @"Microsoft.Win32.WinInetCache");
            feature.AddKnownType(@"System.Net.Cache.RequestCache,System", @"RequestCache");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeEventLogReadHandle,System", @"Microsoft.Win32.SafeHandles.SafeEventLogReadHandle");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeEventLogWriteHandle,System", @"Microsoft.Win32.SafeHandles.SafeEventLogWriteHandle");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeFileMappingHandle,System", @"Microsoft.Win32.SafeHandles.SafeFileMappingHandle");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeFileMapViewHandle,System", @"Microsoft.Win32.SafeHandles.SafeFileMapViewHandle");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeLibraryHandle,System", @"Microsoft.Win32.SafeHandles.SafeLibraryHandle");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeLocalMemHandle,System", @"Microsoft.Win32.SafeHandles.SafeLocalMemHandle");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeProcessHandle,System", @"Microsoft.Win32.SafeHandles.SafeProcessHandle");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeTimerHandle,System", @"Microsoft.Win32.SafeHandles.SafeTimerHandle");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeThreadHandle,System", @"Microsoft.Win32.SafeHandles.SafeThreadHandle");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeUserTokenHandle,System", @"Microsoft.Win32.SafeHandles.SafeUserTokenHandle");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeX509ChainHandle,System", @"Microsoft.Win32.SafeHandles.SafeX509ChainHandle");
            feature.AddKnownType(@"System.AppContextDefaultValues,System", @"AppContextDefaultValues");
            feature.AddKnownType(@"System.LocalAppContextSwitches,System", @"LocalAppContextSwitches");
            feature.AddKnownType(@"System.StringNormalizationExtensions,System", @"StringNormalizationExtensions");
            feature.AddKnownType(@"System.ThrowHelper,System", @"ThrowHelper");
            feature.AddKnownType(@"System.ExceptionArgument,System", @"ExceptionArgument");
            feature.AddKnownType(@"System.ExceptionResource,System", @"ExceptionResource");
            feature.AddKnownType(@"System.UriParser,System", @"UriParser");
            feature.AddKnownType(@"System.UriBuilder,System", @"UriBuilder");
            feature.AddKnownType(@"System.UriFormatException,System", @"UriFormatException");
            feature.AddKnownType(@"System.UriHostNameType,System", @"UriHostNameType");
            feature.AddKnownType(@"System.UriPartial,System", @"UriPartial");
            feature.AddKnownType(@"System.DomainNameHelper,System", @"DomainNameHelper");
            feature.AddKnownType(@"System.IPv4AddressHelper,System", @"IPv4AddressHelper");
            feature.AddKnownType(@"System.IPv6AddressHelper,System", @"IPv6AddressHelper");
            feature.AddKnownType(@"System.UncNameHelper,System", @"UncNameHelper");
            feature.AddKnownType(@"System.UriSyntaxFlags,System", @"UriSyntaxFlags");
            feature.AddKnownType(@"System.UriTypeConverter,System", @"UriTypeConverter");
            feature.AddKnownType(@"System.UriKind,System", @"UriKind");
            feature.AddKnownType(@"System.UriComponents,System", @"UriComponents");
            feature.AddKnownType(@"System.UriFormat,System", @"UriFormat");
            feature.AddKnownType(@"System.UriIdnScope,System", @"UriIdnScope");
            feature.AddKnownType(@"System.ParsingError,System", @"ParsingError");
            feature.AddKnownType(@"System.UnescapeMode,System", @"UnescapeMode");
            feature.AddKnownType(@"System.IriHelper,System", @"IriHelper");
            feature.AddKnownType(@"System.UriHelper,System", @"UriHelper");
            feature.AddKnownType(@"System.GenericUriParserOptions,System", @"GenericUriParserOptions");
            feature.AddKnownType(@"System.GenericUriParser,System", @"GenericUriParser");
            feature.AddKnownType(@"System.HttpStyleUriParser,System", @"HttpStyleUriParser");
            feature.AddKnownType(@"System.FtpStyleUriParser,System", @"FtpStyleUriParser");
            feature.AddKnownType(@"System.FileStyleUriParser,System", @"FileStyleUriParser");
            feature.AddKnownType(@"System.NewsStyleUriParser,System", @"NewsStyleUriParser");
            feature.AddKnownType(@"System.GopherStyleUriParser,System", @"GopherStyleUriParser");
            feature.AddKnownType(@"System.LdapStyleUriParser,System", @"LdapStyleUriParser");
            feature.AddKnownType(@"System.NetPipeStyleUriParser,System", @"NetPipeStyleUriParser");
            feature.AddKnownType(@"System.NetTcpStyleUriParser,System", @"NetTcpStyleUriParser");
            feature.AddKnownType(@"System.ExternDll,System", @"ExternDll");
            feature.AddKnownType(@"System.ClientUtils,System", @"ClientUtils");
            feature.AddKnownType(@"System.SecurityUtils,System", @"SecurityUtils");
            feature.AddKnownType(@"System.HResults,System", @"HResults");
            feature.AddKnownType(@"System.InvariantComparer,System", @"InvariantComparer");
            feature.AddKnownType(@"System.EnvironmentHelpers,System", @"EnvironmentHelpers");
            feature.AddKnownType(@"System.PinnableBufferCache,System", @"PinnableBufferCache");
            feature.AddKnownType(@"System.Gen2GcCallback,System", @"Gen2GcCallback");
            feature.AddKnownType(@"System.PinnableBufferCacheEventSource,System", @"PinnableBufferCacheEventSource");
            feature.AddKnownType(@"System.LocalAppContext,System", @"LocalAppContext");
            feature.AddKnownType(@"System.SRDescriptionAttribute,System", @"SRDescriptionAttribute");
            feature.AddKnownType(@"System.ComponentModel.DescriptionAttribute,System", @"DescriptionAttribute");
            feature.AddKnownType(@"System.SRCategoryAttribute,System", @"SRCategoryAttribute");
            feature.AddKnownType(@"System.ComponentModel.CategoryAttribute,System", @"CategoryAttribute");
            feature.AddKnownType(@"System.SR,System", @"SR");
            feature.AddKnownType(@"System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute,System", @"BitmapSuffixInSatelliteAssemblyAttribute");
            feature.AddKnownType(@"System.Web.AspNetHostingPermissionLevel,System", @"AspNetHostingPermissionLevel");
            feature.AddKnownType(@"System.Web.AspNetHostingPermissionAttribute,System", @"AspNetHostingPermissionAttribute");
            feature.AddKnownType(@"System.Web.AspNetHostingPermission,System", @"AspNetHostingPermission");
            feature.AddKnownType(@"System.Timers.ElapsedEventArgs,System", @"ElapsedEventArgs");
            feature.AddKnownType(@"System.Timers.ElapsedEventHandler,System", @"ElapsedEventHandler");
            feature.AddKnownType(@"System.Timers.Timer,System", @"Timer");
            feature.AddKnownType(@"System.ComponentModel.ISupportInitialize,System", @"ISupportInitialize");
            feature.AddKnownType(@"System.Timers.TimersDescriptionAttribute,System", @"TimersDescriptionAttribute");
            feature.AddKnownType(@"System.Configuration.CommonConfigurationStrings,System", @"CommonConfigurationStrings");
            feature.AddKnownType(@"System.Configuration.SchemeSettingElement,System", @"SchemeSettingElement");
            feature.AddKnownType(@"System.Configuration.SchemeSettingInternal,System", @"SchemeSettingInternal");
            feature.AddKnownType(@"System.Configuration.SchemeSettingElementCollection,System", @"SchemeSettingElementCollection");
            feature.AddKnownType(@"System.Configuration.UriSectionData,System", @"UriSectionData");
            feature.AddKnownType(@"System.Configuration.UriSectionReader,System", @"UriSectionReader");
            feature.AddKnownType(@"System.Configuration.UriSection,System", @"UriSection");
            feature.AddKnownType(@"System.Configuration.UriSectionInternal,System", @"UriSectionInternal");
            feature.AddKnownType(@"System.Configuration.IriParsingElement,System", @"IriParsingElement");
            feature.AddKnownType(@"System.Configuration.IdnElement,System", @"IdnElement");
            feature.AddKnownType(@"System.Configuration.ApplicationSettingsBase,System", @"ApplicationSettingsBase");
            feature.AddKnownType(@"System.Configuration.SettingsBase,System", @"SettingsBase");
            feature.AddKnownType(@"System.ComponentModel.INotifyPropertyChanged,System", @"INotifyPropertyChanged");
            feature.AddKnownType(@"System.Configuration.SettingsLoadedEventHandler,System", @"SettingsLoadedEventHandler");
            feature.AddKnownType(@"System.Configuration.SettingsSavingEventHandler,System", @"SettingsSavingEventHandler");
            feature.AddKnownType(@"System.Configuration.SettingChangingEventHandler,System", @"SettingChangingEventHandler");
            feature.AddKnownType(@"System.Configuration.SettingChangingEventArgs,System", @"SettingChangingEventArgs");
            feature.AddKnownType(@"System.ComponentModel.CancelEventArgs,System", @"CancelEventArgs");
            feature.AddKnownType(@"System.Configuration.SettingsLoadedEventArgs,System", @"SettingsLoadedEventArgs");
            feature.AddKnownType(@"System.Configuration.ClientSettingsStore,System", @"ClientSettingsStore");
            feature.AddKnownType(@"System.Configuration.StoredSetting,System", @"StoredSetting");
            feature.AddKnownType(@"System.Configuration.ConfigurationException,System", @"ConfigurationException");
            feature.AddKnownType(@"System.Configuration.ConfigurationManagerInternalFactory,System", @"ConfigurationManagerInternalFactory");
            feature.AddKnownType(@"System.Configuration.ConfigurationSettings,System", @"ConfigurationSettings");
            feature.AddKnownType(@"System.Configuration.ConfigXmlAttribute,System", @"ConfigXmlAttribute");
            feature.AddKnownType(@"System.Configuration.ConfigXmlCDataSection,System", @"ConfigXmlCDataSection");
            feature.AddKnownType(@"System.Configuration.ConfigXmlComment,System", @"ConfigXmlComment");
            feature.AddKnownType(@"System.Configuration.ConfigXmlDocument,System", @"ConfigXmlDocument");
            feature.AddKnownType(@"System.Configuration.ConfigXmlElement,System", @"ConfigXmlElement");
            feature.AddKnownType(@"System.Configuration.ConfigXmlSignificantWhitespace,System", @"ConfigXmlSignificantWhitespace");
            feature.AddKnownType(@"System.Configuration.ConfigXmlText,System", @"ConfigXmlText");
            feature.AddKnownType(@"System.Configuration.ConfigXmlWhitespace,System", @"ConfigXmlWhitespace");
            feature.AddKnownType(@"System.Configuration.DictionarySectionHandler,System", @"DictionarySectionHandler");
            feature.AddKnownType(@"System.Configuration.IConfigurationSectionHandler,System", @"IConfigurationSectionHandler");
            feature.AddKnownType(@"System.Configuration.HandlerBase,System", @"HandlerBase");
            feature.AddKnownType(@"System.Configuration.IApplicationSettingsProvider,System", @"IApplicationSettingsProvider");
            feature.AddKnownType(@"System.Configuration.IConfigurationSystem,System", @"IConfigurationSystem");
            feature.AddKnownType(@"System.Configuration.IgnoreSectionHandler,System", @"IgnoreSectionHandler");
            feature.AddKnownType(@"System.Configuration.IPersistComponentSettings,System", @"IPersistComponentSettings");
            feature.AddKnownType(@"System.Configuration.ISettingsProviderService,System", @"ISettingsProviderService");
            feature.AddKnownType(@"System.Configuration.LocalFileSettingsProvider,System", @"LocalFileSettingsProvider");
            feature.AddKnownType(@"System.Configuration.SettingsProvider,System", @"SettingsProvider");
            feature.AddKnownType(@"System.Configuration.NameValueFileSectionHandler,System", @"NameValueFileSectionHandler");
            feature.AddKnownType(@"System.Configuration.NameValueSectionHandler,System", @"NameValueSectionHandler");
            feature.AddKnownType(@"System.Configuration.ReadOnlyNameValueCollection,System", @"ReadOnlyNameValueCollection");
            feature.AddKnownType(@"System.Collections.Specialized.NameValueCollection,System", @"NameValueCollection");
            feature.AddKnownType(@"System.Collections.Specialized.NameObjectCollectionBase,System", @"NameObjectCollectionBase");
            feature.AddKnownType(@"System.Configuration.SettingsAttributeDictionary,System", @"SettingsAttributeDictionary");
            feature.AddKnownType(@"System.Configuration.ApplicationScopedSettingAttribute,System", @"ApplicationScopedSettingAttribute");
            feature.AddKnownType(@"System.Configuration.SettingAttribute,System", @"SettingAttribute");
            feature.AddKnownType(@"System.Configuration.DefaultSettingValueAttribute,System", @"DefaultSettingValueAttribute");
            feature.AddKnownType(@"System.Configuration.NoSettingsVersionUpgradeAttribute,System", @"NoSettingsVersionUpgradeAttribute");
            feature.AddKnownType(@"System.Configuration.SettingsDescriptionAttribute,System", @"SettingsDescriptionAttribute");
            feature.AddKnownType(@"System.Configuration.SettingsGroupDescriptionAttribute,System", @"SettingsGroupDescriptionAttribute");
            feature.AddKnownType(@"System.Configuration.SettingsGroupNameAttribute,System", @"SettingsGroupNameAttribute");
            feature.AddKnownType(@"System.Configuration.SettingsManageabilityAttribute,System", @"SettingsManageabilityAttribute");
            feature.AddKnownType(@"System.Configuration.SettingsProviderAttribute,System", @"SettingsProviderAttribute");
            feature.AddKnownType(@"System.Configuration.SettingsSerializeAsAttribute,System", @"SettingsSerializeAsAttribute");
            feature.AddKnownType(@"System.Configuration.SpecialSettingAttribute,System", @"SpecialSettingAttribute");
            feature.AddKnownType(@"System.Configuration.UserScopedSettingAttribute,System", @"UserScopedSettingAttribute");
            feature.AddKnownType(@"System.Configuration.SettingsManageability,System", @"SettingsManageability");
            feature.AddKnownType(@"System.Configuration.SpecialSetting,System", @"SpecialSetting");
            feature.AddKnownType(@"System.Configuration.SettingsContext,System", @"SettingsContext");
            feature.AddKnownType(@"System.Configuration.SettingsProperty,System", @"SettingsProperty");
            feature.AddKnownType(@"System.Configuration.SettingsPropertyCollection,System", @"SettingsPropertyCollection");
            feature.AddKnownType(@"System.Configuration.SettingsPropertyIsReadOnlyException,System", @"SettingsPropertyIsReadOnlyException");
            feature.AddKnownType(@"System.Configuration.SettingsPropertyNotFoundException,System", @"SettingsPropertyNotFoundException");
            feature.AddKnownType(@"System.Configuration.SettingsPropertyValue,System", @"SettingsPropertyValue");
            feature.AddKnownType(@"System.Configuration.SettingsPropertyValueCollection,System", @"SettingsPropertyValueCollection");
            feature.AddKnownType(@"System.Configuration.SettingsPropertyWrongTypeException,System", @"SettingsPropertyWrongTypeException");
            feature.AddKnownType(@"System.Configuration.SettingsProviderCollection,System", @"SettingsProviderCollection");
            feature.AddKnownType(@"System.Configuration.SettingsSerializeAs,System", @"SettingsSerializeAs");
            feature.AddKnownType(@"System.Configuration.SingleTagSectionHandler,System", @"SingleTagSectionHandler");
            feature.AddKnownType(@"System.Configuration.TypeUtil,System", @"TypeUtil");
            feature.AddKnownType(@"System.Configuration.ApplicationSettingsGroup,System", @"ApplicationSettingsGroup");
            feature.AddKnownType(@"System.Configuration.UserSettingsGroup,System", @"UserSettingsGroup");
            feature.AddKnownType(@"System.Configuration.ClientSettingsSection,System", @"ClientSettingsSection");
            feature.AddKnownType(@"System.Configuration.SettingElementCollection,System", @"SettingElementCollection");
            feature.AddKnownType(@"System.Configuration.SettingElement,System", @"SettingElement");
            feature.AddKnownType(@"System.Configuration.SettingValueElement,System", @"SettingValueElement");
            feature.AddKnownType(@"System.Configuration.AppSettingsReader,System", @"AppSettingsReader");
            feature.AddKnownType(@"System.Configuration.PrivilegedConfigurationManager,System", @"PrivilegedConfigurationManager");
            feature.AddKnownType(@"System.Configuration.Internal.ConfigurationManagerHelper,System", @"ConfigurationManagerHelper");
            feature.AddKnownType(@"System.Net.IAuthenticationManager,System", @"IAuthenticationManager");
            feature.AddKnownType(@"System.Net.AuthenticationManager,System", @"AuthenticationManager");
            feature.AddKnownType(@"System.Net.AuthenticationManagerBase,System", @"AuthenticationManagerBase");
            feature.AddKnownType(@"System.Net.AuthenticationManagerDefault,System", @"AuthenticationManagerDefault");
            feature.AddKnownType(@"System.Net.AuthenticationManager2,System", @"AuthenticationManager2");
            feature.AddKnownType(@"System.Net.AuthenticationSchemes,System", @"AuthenticationSchemes");
            feature.AddKnownType(@"System.Net.AuthenticationSchemeSelector,System", @"AuthenticationSchemeSelector");
            feature.AddKnownType(@"System.Net.Authorization,System", @"Authorization");
            feature.AddKnownType(@"System.Net.BaseWebProxyFinder,System", @"BaseWebProxyFinder");
            feature.AddKnownType(@"System.Net.IWebProxyFinder,System", @"IWebProxyFinder");
            feature.AddKnownType(@"System.Net.CertPolicyValidationCallback,System", @"CertPolicyValidationCallback");
            feature.AddKnownType(@"System.Net.ServerCertValidationCallback,System", @"ServerCertValidationCallback");
            feature.AddKnownType(@"System.Net.ConnectionModes,System", @"ConnectionModes");
            feature.AddKnownType(@"System.Net.GeneralAsyncDelegate,System", @"GeneralAsyncDelegate");
            feature.AddKnownType(@"System.Net.CreateConnectionDelegate,System", @"CreateConnectionDelegate");
            feature.AddKnownType(@"System.Net.ConnectionPool,System", @"ConnectionPool");
            feature.AddKnownType(@"System.Net.InterlockedStack,System", @"InterlockedStack");
            feature.AddKnownType(@"System.Net.ConnectionPoolManager,System", @"ConnectionPoolManager");
            feature.AddKnownType(@"System.Net.CookieVariant,System", @"CookieVariant");
            feature.AddKnownType(@"System.Net.Cookie,System", @"Cookie");
            feature.AddKnownType(@"System.Net.CookieToken,System", @"CookieToken");
            feature.AddKnownType(@"System.Net.CookieTokenizer,System", @"CookieTokenizer");
            feature.AddKnownType(@"System.Net.CookieParser,System", @"CookieParser");
            feature.AddKnownType(@"System.Net.Comparer,System", @"Comparer");
            feature.AddKnownType(@"System.Net.CookieCollection,System", @"CookieCollection");
            feature.AddKnownType(@"System.Net.HeaderVariantInfo,System", @"HeaderVariantInfo");
            feature.AddKnownType(@"System.Net.CookieContainer,System", @"CookieContainer");
            feature.AddKnownType(@"System.Net.PathList,System", @"PathList");
            feature.AddKnownType(@"System.Net.CookieException,System", @"CookieException");
            feature.AddKnownType(@"System.Net.CredentialCache,System", @"CredentialCache");
            feature.AddKnownType(@"System.Net.ICredentials,System", @"ICredentials");
            feature.AddKnownType(@"System.Net.ICredentialsByHost,System", @"ICredentialsByHost");
            feature.AddKnownType(@"System.Net.SystemNetworkCredential,System", @"SystemNetworkCredential");
            feature.AddKnownType(@"System.Net.NetworkCredential,System", @"NetworkCredential");
            feature.AddKnownType(@"System.Net.CredentialHostKey,System", @"CredentialHostKey");
            feature.AddKnownType(@"System.Net.CredentialKey,System", @"CredentialKey");
            feature.AddKnownType(@"System.Net.Dns,System", @"Dns");
            feature.AddKnownType(@"System.Net.DnsEndPoint,System", @"DnsEndPoint");
            feature.AddKnownType(@"System.Net.EndPoint,System", @"EndPoint");
            feature.AddKnownType(@"System.Net.DnsPermissionAttribute,System", @"DnsPermissionAttribute");
            feature.AddKnownType(@"System.Net.DnsPermission,System", @"DnsPermission");
            feature.AddKnownType(@"System.Net.EntitySendFormat,System", @"EntitySendFormat");
            feature.AddKnownType(@"System.Net.BoundaryType,System", @"BoundaryType");
            feature.AddKnownType(@"System.Net.FileWebRequest,System", @"FileWebRequest");
            feature.AddKnownType(@"System.Net.WebRequest,System", @"WebRequest");
            feature.AddKnownType(@"System.Net.FileWebRequestCreator,System", @"FileWebRequestCreator");
            feature.AddKnownType(@"System.Net.IWebRequestCreate,System", @"IWebRequestCreate");
            feature.AddKnownType(@"System.Net.FileWebStream,System", @"FileWebStream");
            feature.AddKnownType(@"System.Net.ICloseEx,System", @"ICloseEx");
            feature.AddKnownType(@"System.Net.FileWebResponse,System", @"FileWebResponse");
            feature.AddKnownType(@"System.Net.WebResponse,System", @"WebResponse");
            feature.AddKnownType(@"System.Net.FtpStatusCode,System", @"FtpStatusCode");
            feature.AddKnownType(@"System.Net.WebRequestMethods,System", @"WebRequestMethods");
            feature.AddKnownType(@"System.Net.FtpOperation,System", @"FtpOperation");
            feature.AddKnownType(@"System.Net.FtpMethodFlags,System", @"FtpMethodFlags");
            feature.AddKnownType(@"System.Net.FtpMethodInfo,System", @"FtpMethodInfo");
            feature.AddKnownType(@"System.Net.FtpWebRequest,System", @"FtpWebRequest");
            feature.AddKnownType(@"System.Net.FtpWebRequestCreator,System", @"FtpWebRequestCreator");
            feature.AddKnownType(@"System.Net.FtpWebResponse,System", @"FtpWebResponse");
            feature.AddKnownType(@"System.Net.GlobalProxySelection,System", @"GlobalProxySelection");
            feature.AddKnownType(@"System.Net.HttpListenerBasicIdentity,System", @"HttpListenerBasicIdentity");
            feature.AddKnownType(@"System.Net.RequestContextBase,System", @"RequestContextBase");
            feature.AddKnownType(@"System.Net.AsyncRequestContext,System", @"AsyncRequestContext");
            feature.AddKnownType(@"System.Net.SyncRequestContext,System", @"SyncRequestContext");
            feature.AddKnownType(@"System.Net.HttpListener,System", @"HttpListener");
            feature.AddKnownType(@"System.Net.HttpListenerContext,System", @"HttpListenerContext");
            feature.AddKnownType(@"System.Net.HttpListenerException,System", @"HttpListenerException");
            feature.AddKnownType(@"System.ComponentModel.Win32Exception,System", @"Win32Exception");
            feature.AddKnownType(@"System.Net.ListenerPrefixEnumerator,System", @"ListenerPrefixEnumerator");
            feature.AddKnownType(@"System.Net.HttpListenerPrefixCollection,System", @"HttpListenerPrefixCollection");
            feature.AddKnownType(@"System.Net.ListenerClientCertState,System", @"ListenerClientCertState");
            feature.AddKnownType(@"System.Net.ListenerClientCertAsyncResult,System", @"ListenerClientCertAsyncResult");
            feature.AddKnownType(@"System.Net.LazyAsyncResult,System", @"LazyAsyncResult");
            feature.AddKnownType(@"System.Net.HttpListenerRequest,System", @"HttpListenerRequest");
            feature.AddKnownType(@"System.Net.HttpListenerRequestUriBuilder,System", @"HttpListenerRequestUriBuilder");
            feature.AddKnownType(@"System.Net.HttpListenerResponse,System", @"HttpListenerResponse");
            feature.AddKnownType(@"System.Net.HttpListenerTimeoutManager,System", @"HttpListenerTimeoutManager");
            feature.AddKnownType(@"System.Net.HttpRequestHeader,System", @"HttpRequestHeader");
            feature.AddKnownType(@"System.Net.HttpResponseHeader,System", @"HttpResponseHeader");
            feature.AddKnownType(@"System.Net.HttpStatusCode,System", @"HttpStatusCode");
            feature.AddKnownType(@"System.Net.HttpStatusDescription,System", @"HttpStatusDescription");
            feature.AddKnownType(@"System.Net.HttpSysSettings,System", @"HttpSysSettings");
            feature.AddKnownType(@"System.Net.HttpVersion,System", @"HttpVersion");
            feature.AddKnownType(@"System.Net.DecompressionMethods,System", @"DecompressionMethods");
            feature.AddKnownType(@"System.Net.HttpWebRequest,System", @"HttpWebRequest");
            feature.AddKnownType(@"System.Net.RtcState,System", @"RtcState");
            feature.AddKnownType(@"System.Net.HttpWebResponse,System", @"HttpWebResponse");
            feature.AddKnownType(@"System.Net.GZipWrapperStream,System", @"GZipWrapperStream");
            feature.AddKnownType(@"System.IO.Compression.GZipStream,System", @"GZipStream");
            feature.AddKnownType(@"System.Net.IRequestLifetimeTracker,System", @"IRequestLifetimeTracker");
            feature.AddKnownType(@"System.Net.DeflateWrapperStream,System", @"DeflateWrapperStream");
            feature.AddKnownType(@"System.IO.Compression.DeflateStream,System", @"DeflateStream");
            feature.AddKnownType(@"System.Net.HybridWebProxyFinder,System", @"HybridWebProxyFinder");
            feature.AddKnownType(@"System.Net.IAuthenticationModule,System", @"IAuthenticationModule");
            feature.AddKnownType(@"System.Net.ICertificatePolicy,System", @"ICertificatePolicy");
            feature.AddKnownType(@"System.Net.IntPtrHelper,System", @"IntPtrHelper");
            feature.AddKnownType(@"System.Net.InternalException,System", @"InternalException");
            feature.AddKnownType(@"System.Net.NclUtilities,System", @"NclUtilities");
            feature.AddKnownType(@"System.Net.NclConstants,System", @"NclConstants");
            feature.AddKnownType(@"System.Net.InterlockedGate,System", @"InterlockedGate");
            feature.AddKnownType(@"System.Net.NetworkAddressChangePolled,System", @"NetworkAddressChangePolled");
            feature.AddKnownType(@"System.Net.ComNetOS,System", @"ComNetOS");
            feature.AddKnownType(@"System.Net.ValidationHelper,System", @"ValidationHelper");
            feature.AddKnownType(@"System.Net.ExceptionHelper,System", @"ExceptionHelper");
            feature.AddKnownType(@"System.Net.WindowsInstallationType,System", @"WindowsInstallationType");
            feature.AddKnownType(@"System.Net.SecurityStatus,System", @"SecurityStatus");
            feature.AddKnownType(@"System.Net.ContentTypeValues,System", @"ContentTypeValues");
            feature.AddKnownType(@"System.Net.ContextAttribute,System", @"ContextAttribute");
            feature.AddKnownType(@"System.Net.Endianness,System", @"Endianness");
            feature.AddKnownType(@"System.Net.CredentialUse,System", @"CredentialUse");
            feature.AddKnownType(@"System.Net.BufferType,System", @"BufferType");
            feature.AddKnownType(@"System.Net.ChainPolicyType,System", @"ChainPolicyType");
            feature.AddKnownType(@"System.Net.IgnoreCertProblem,System", @"IgnoreCertProblem");
            feature.AddKnownType(@"System.Net.CertUsage,System", @"CertUsage");
            feature.AddKnownType(@"System.Net.ChainPolicyParameter,System", @"ChainPolicyParameter");
            feature.AddKnownType(@"System.Net.SSL_EXTRA_CERT_CHAIN_POLICY_PARA,System", @"SSL_EXTRA_CERT_CHAIN_POLICY_PARA");
            feature.AddKnownType(@"System.Net.ChainPolicyStatus,System", @"ChainPolicyStatus");
            feature.AddKnownType(@"System.Net.CertEnhKeyUse,System", @"CertEnhKeyUse");
            feature.AddKnownType(@"System.Net.CertUsageMatch,System", @"CertUsageMatch");
            feature.AddKnownType(@"System.Net.ChainParameters,System", @"ChainParameters");
            feature.AddKnownType(@"System.Net._CERT_CHAIN_ELEMENT,System", @"_CERT_CHAIN_ELEMENT");
            feature.AddKnownType(@"System.Net.IssuerListInfoEx,System", @"IssuerListInfoEx");
            feature.AddKnownType(@"System.Net.SecureCredential,System", @"SecureCredential");
            feature.AddKnownType(@"System.Net.SecurityBufferStruct,System", @"SecurityBufferStruct");
            feature.AddKnownType(@"System.Net.SecurityBuffer,System", @"SecurityBuffer");
            feature.AddKnownType(@"System.Net.SecurityBufferDescriptor,System", @"SecurityBufferDescriptor");
            feature.AddKnownType(@"System.Net.CertificateEncoding,System", @"CertificateEncoding");
            feature.AddKnownType(@"System.Net.CertificateProblem,System", @"CertificateProblem");
            feature.AddKnownType(@"System.Net.SecChannelBindings,System", @"SecChannelBindings");
            feature.AddKnownType(@"System.Net.WebRequestPrefixElement,System", @"WebRequestPrefixElement");
            feature.AddKnownType(@"System.Net.HttpRequestCreator,System", @"HttpRequestCreator");
            feature.AddKnownType(@"System.Net.WebSocketHttpRequestCreator,System", @"WebSocketHttpRequestCreator");
            feature.AddKnownType(@"System.Net.CoreResponseData,System", @"CoreResponseData");
            feature.AddKnownType(@"System.Net.HttpAbortDelegate,System", @"HttpAbortDelegate");
            feature.AddKnownType(@"System.Net.HttpKnownHeaderNames,System", @"HttpKnownHeaderNames");
            feature.AddKnownType(@"System.Net.HttpContinueDelegate,System", @"HttpContinueDelegate");
            feature.AddKnownType(@"System.Net.HttpWriteMode,System", @"HttpWriteMode");
            feature.AddKnownType(@"System.Net.UnlockConnectionDelegate,System", @"UnlockConnectionDelegate");
            feature.AddKnownType(@"System.Net.HttpBehaviour,System", @"HttpBehaviour");
            feature.AddKnownType(@"System.Net.HttpProcessingResult,System", @"HttpProcessingResult");
            feature.AddKnownType(@"System.Net.KnownHttpVerb,System", @"KnownHttpVerb");
            feature.AddKnownType(@"System.Net.HttpProtocolUtils,System", @"HttpProtocolUtils");
            feature.AddKnownType(@"System.Net.PolicyWrapper,System", @"PolicyWrapper");
            feature.AddKnownType(@"System.Net.DefaultCertPolicy,System", @"DefaultCertPolicy");
            feature.AddKnownType(@"System.Net.TriState,System", @"TriState");
            feature.AddKnownType(@"System.Net.DefaultPorts,System", @"DefaultPorts");
            feature.AddKnownType(@"System.Net.hostent,System", @"hostent");
            feature.AddKnownType(@"System.Net.Blob,System", @"Blob");
            feature.AddKnownType(@"System.Net.SplitWritesState,System", @"SplitWritesState");
            feature.AddKnownType(@"System.Net.IPHostEntry,System", @"IPHostEntry");
            feature.AddKnownType(@"System.Net.IWebProxy,System", @"IWebProxy");
            feature.AddKnownType(@"System.Net.Logging,System", @"Logging");
            feature.AddKnownType(@"System.Net.RegistryConfiguration,System", @"RegistryConfiguration");
            feature.AddKnownType(@"System.Net.NetWebProxyFinder,System", @"NetWebProxyFinder");
            feature.AddKnownType(@"System.Net.NetworkAccess,System", @"NetworkAccess");
            feature.AddKnownType(@"System.Net.ProtocolViolationException,System", @"ProtocolViolationException");
            feature.AddKnownType(@"System.Net.TransportContext,System", @"TransportContext");
            feature.AddKnownType(@"System.Net.ConnectStreamContext,System", @"ConnectStreamContext");
            feature.AddKnownType(@"System.Net.SslStreamContext,System", @"SslStreamContext");
            feature.AddKnownType(@"System.Net.HttpListenerRequestContext,System", @"HttpListenerRequestContext");
            feature.AddKnownType(@"System.Net.CachedTransportContext,System", @"CachedTransportContext");
            feature.AddKnownType(@"System.Net.SafeNclNativeMethods,System", @"SafeNclNativeMethods");
            feature.AddKnownType(@"System.Net.SecurityProtocolType,System", @"SecurityProtocolType");
            feature.AddKnownType(@"System.Net.BindIPEndPoint,System", @"BindIPEndPoint");
            feature.AddKnownType(@"System.Net.ServicePoint,System", @"ServicePoint");
            feature.AddKnownType(@"System.Net.ServicePointManager,System", @"ServicePointManager");
            feature.AddKnownType(@"System.Net.SocketAddress,System", @"SocketAddress");
            feature.AddKnownType(@"System.Net.SocketPermissionAttribute,System", @"SocketPermissionAttribute");
            feature.AddKnownType(@"System.Net.SocketPermission,System", @"SocketPermission");
            feature.AddKnownType(@"System.Net.EndpointPermission,System", @"EndpointPermission");
            feature.AddKnownType(@"System.Net.TransportType,System", @"TransportType");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods,System", @"UnsafeNclNativeMethods");
            feature.AddKnownType(@"System.Net.WebClient,System", @"WebClient");
            feature.AddKnownType(@"System.Net.CompletionDelegate,System", @"CompletionDelegate");
            feature.AddKnownType(@"System.Net.OpenReadCompletedEventHandler,System", @"OpenReadCompletedEventHandler");
            feature.AddKnownType(@"System.Net.OpenReadCompletedEventArgs,System", @"OpenReadCompletedEventArgs");
            feature.AddKnownType(@"System.ComponentModel.AsyncCompletedEventArgs,System", @"AsyncCompletedEventArgs");
            feature.AddKnownType(@"System.Net.OpenWriteCompletedEventHandler,System", @"OpenWriteCompletedEventHandler");
            feature.AddKnownType(@"System.Net.OpenWriteCompletedEventArgs,System", @"OpenWriteCompletedEventArgs");
            feature.AddKnownType(@"System.Net.DownloadStringCompletedEventHandler,System", @"DownloadStringCompletedEventHandler");
            feature.AddKnownType(@"System.Net.DownloadStringCompletedEventArgs,System", @"DownloadStringCompletedEventArgs");
            feature.AddKnownType(@"System.Net.DownloadDataCompletedEventHandler,System", @"DownloadDataCompletedEventHandler");
            feature.AddKnownType(@"System.Net.DownloadDataCompletedEventArgs,System", @"DownloadDataCompletedEventArgs");
            feature.AddKnownType(@"System.Net.UploadStringCompletedEventHandler,System", @"UploadStringCompletedEventHandler");
            feature.AddKnownType(@"System.Net.UploadStringCompletedEventArgs,System", @"UploadStringCompletedEventArgs");
            feature.AddKnownType(@"System.Net.UploadDataCompletedEventHandler,System", @"UploadDataCompletedEventHandler");
            feature.AddKnownType(@"System.Net.UploadDataCompletedEventArgs,System", @"UploadDataCompletedEventArgs");
            feature.AddKnownType(@"System.Net.UploadFileCompletedEventHandler,System", @"UploadFileCompletedEventHandler");
            feature.AddKnownType(@"System.Net.UploadFileCompletedEventArgs,System", @"UploadFileCompletedEventArgs");
            feature.AddKnownType(@"System.Net.UploadValuesCompletedEventHandler,System", @"UploadValuesCompletedEventHandler");
            feature.AddKnownType(@"System.Net.UploadValuesCompletedEventArgs,System", @"UploadValuesCompletedEventArgs");
            feature.AddKnownType(@"System.Net.DownloadProgressChangedEventHandler,System", @"DownloadProgressChangedEventHandler");
            feature.AddKnownType(@"System.Net.DownloadProgressChangedEventArgs,System", @"DownloadProgressChangedEventArgs");
            feature.AddKnownType(@"System.ComponentModel.ProgressChangedEventArgs,System", @"ProgressChangedEventArgs");
            feature.AddKnownType(@"System.Net.UploadProgressChangedEventHandler,System", @"UploadProgressChangedEventHandler");
            feature.AddKnownType(@"System.Net.UploadProgressChangedEventArgs,System", @"UploadProgressChangedEventArgs");
            feature.AddKnownType(@"System.Net.WebException,System", @"WebException");
            feature.AddKnownType(@"System.Net.WebExceptionInternalStatus,System", @"WebExceptionInternalStatus");
            feature.AddKnownType(@"System.Net.WebExceptionStatus,System", @"WebExceptionStatus");
            feature.AddKnownType(@"System.Net.WebExceptionMapping,System", @"WebExceptionMapping");
            feature.AddKnownType(@"System.Net.WebHeaderCollectionType,System", @"WebHeaderCollectionType");
            feature.AddKnownType(@"System.Net.WebHeaderCollection,System", @"WebHeaderCollection");
            feature.AddKnownType(@"System.Net.CaseInsensitiveAscii,System", @"CaseInsensitiveAscii");
            feature.AddKnownType(@"System.Net.HostHeaderString,System", @"HostHeaderString");
            feature.AddKnownType(@"System.Net.WebPermissionAttribute,System", @"WebPermissionAttribute");
            feature.AddKnownType(@"System.Net.DelayedRegex,System", @"DelayedRegex");
            feature.AddKnownType(@"System.Net.WebPermission,System", @"WebPermission");
            feature.AddKnownType(@"System.Net.WebProxyData,System", @"WebProxyData");
            feature.AddKnownType(@"System.Net.WebProxy,System", @"WebProxy");
            feature.AddKnownType(@"System.Net.IAutoWebProxy,System", @"IAutoWebProxy");
            feature.AddKnownType(@"System.Net.WebUtility,System", @"WebUtility");
            feature.AddKnownType(@"System.Net.WinHttpWebProxyFinder,System", @"WinHttpWebProxyFinder");
            feature.AddKnownType(@"System.Net.WriteStreamClosedEventArgs,System", @"WriteStreamClosedEventArgs");
            feature.AddKnownType(@"System.Net.WriteStreamClosedEventHandler,System", @"WriteStreamClosedEventHandler");
            feature.AddKnownType(@"System.Net.AuthenticationState,System", @"AuthenticationState");
            feature.AddKnownType(@"System.Net.AutoWebProxyScriptEngine,System", @"AutoWebProxyScriptEngine");
            feature.AddKnownType(@"System.Net.WebProxyScriptHelper,System", @"WebProxyScriptHelper");
            feature.AddKnownType(@"System.Net.IWebProxyScript,System", @"IWebProxyScript");
            feature.AddKnownType(@"System.Net.AutoWebProxyScriptWrapper,System", @"AutoWebProxyScriptWrapper");
            feature.AddKnownType(@"System.Net.BasicClient,System", @"BasicClient");
            feature.AddKnownType(@"System.Net.BufferOffsetSize,System", @"BufferOffsetSize");
            feature.AddKnownType(@"System.Net.ChunkParser,System", @"ChunkParser");
            feature.AddKnownType(@"System.Net.CommandStream,System", @"CommandStream");
            feature.AddKnownType(@"System.Net.PooledStream,System", @"PooledStream");
            feature.AddKnownType(@"System.Net.ResponseDescription,System", @"ResponseDescription");
            feature.AddKnownType(@"System.Net.ReceiveState,System", @"ReceiveState");
            feature.AddKnownType(@"System.Net.ReadState,System", @"ReadState");
            feature.AddKnownType(@"System.Net.DataParseStatus,System", @"DataParseStatus");
            feature.AddKnownType(@"System.Net.WriteBufferState,System", @"WriteBufferState");
            feature.AddKnownType(@"System.Net.WebParseErrorSection,System", @"WebParseErrorSection");
            feature.AddKnownType(@"System.Net.WebParseErrorCode,System", @"WebParseErrorCode");
            feature.AddKnownType(@"System.Net.WebParseError,System", @"WebParseError");
            feature.AddKnownType(@"System.Net.TunnelStateObject,System", @"TunnelStateObject");
            feature.AddKnownType(@"System.Net.ConnectionReturnResult,System", @"ConnectionReturnResult");
            feature.AddKnownType(@"System.Net.Connection,System", @"Connection");
            feature.AddKnownType(@"System.Net.ConnectionGroup,System", @"ConnectionGroup");
            feature.AddKnownType(@"System.Net.WriteHeadersCallbackState,System", @"WriteHeadersCallbackState");
            feature.AddKnownType(@"System.Net.ConnectStream,System", @"ConnectStream");
            feature.AddKnownType(@"System.Net.SyncMemoryStream,System", @"SyncMemoryStream");
            feature.AddKnownType(@"System.Net.CallbackClosure,System", @"CallbackClosure");
            feature.AddKnownType(@"System.Net.ContextAwareResult,System", @"ContextAwareResult");
            feature.AddKnownType(@"System.Net.CookieModule,System", @"CookieModule");
            feature.AddKnownType(@"System.Net.DigestClient,System", @"DigestClient");
            feature.AddKnownType(@"System.Net.ISessionAuthenticationModule,System", @"ISessionAuthenticationModule");
            feature.AddKnownType(@"System.Net.HttpDigestChallenge,System", @"HttpDigestChallenge");
            feature.AddKnownType(@"System.Net.HttpDigest,System", @"HttpDigest");
            feature.AddKnownType(@"System.Net.EmptyWebProxy,System", @"EmptyWebProxy");
            feature.AddKnownType(@"System.Net.FtpPrimitive,System", @"FtpPrimitive");
            feature.AddKnownType(@"System.Net.FtpLoginState,System", @"FtpLoginState");
            feature.AddKnownType(@"System.Net.FtpControlStream,System", @"FtpControlStream");
            feature.AddKnownType(@"System.Net.FtpDataStream,System", @"FtpDataStream");
            feature.AddKnownType(@"System.Net.HeaderParser,System", @"HeaderParser");
            feature.AddKnownType(@"System.Net.HeaderInfo,System", @"HeaderInfo");
            feature.AddKnownType(@"System.Net.HeaderInfoTable,System", @"HeaderInfoTable");
            feature.AddKnownType(@"System.Net.HttpDateParse,System", @"HttpDateParse");
            feature.AddKnownType(@"System.Net.CloseExState,System", @"CloseExState");
            feature.AddKnownType(@"System.Net.KerberosClient,System", @"KerberosClient");
            feature.AddKnownType(@"System.Net.ListenerAsyncResult,System", @"ListenerAsyncResult");
            feature.AddKnownType(@"System.Net.HttpRequestStream,System", @"HttpRequestStream");
            feature.AddKnownType(@"System.Net.HttpResponseStream,System", @"HttpResponseStream");
            feature.AddKnownType(@"System.Net.HttpResponseStreamAsyncResult,System", @"HttpResponseStreamAsyncResult");
            feature.AddKnownType(@"System.Net.BaseLoggingObject,System", @"BaseLoggingObject");
            feature.AddKnownType(@"System.Net.ThreadKinds,System", @"ThreadKinds");
            feature.AddKnownType(@"System.Net.GlobalLog,System", @"GlobalLog");
            feature.AddKnownType(@"System.Net.GlobalSSPI,System", @"GlobalSSPI");
            feature.AddKnownType(@"System.Net.SSPIInterface,System", @"SSPIInterface");
            feature.AddKnownType(@"System.Net.SSPISecureChannelType,System", @"SSPISecureChannelType");
            feature.AddKnownType(@"System.Net.SSPIAuthType,System", @"SSPIAuthType");
            feature.AddKnownType(@"System.Net.NegotiateClient,System", @"NegotiateClient");
            feature.AddKnownType(@"System.Net.NestedMultipleAsyncResult,System", @"NestedMultipleAsyncResult");
            feature.AddKnownType(@"System.Net.NestedSingleAsyncResult,System", @"NestedSingleAsyncResult");
            feature.AddKnownType(@"System.Net.NetRes,System", @"NetRes");
            feature.AddKnownType(@"System.Net.NetworkingPerfCounterName,System", @"NetworkingPerfCounterName");
            feature.AddKnownType(@"System.Net.NetworkingPerfCounters,System", @"NetworkingPerfCounters");
            feature.AddKnownType(@"System.Net.ContextFlags,System", @"ContextFlags");
            feature.AddKnownType(@"System.Net.NTAuthentication,System", @"NTAuthentication");
            feature.AddKnownType(@"System.Net.AuthIdentity,System", @"AuthIdentity");
            feature.AddKnownType(@"System.Net.NtlmClient,System", @"NtlmClient");
            feature.AddKnownType(@"System.Net.IPMulticastRequest,System", @"IPMulticastRequest");
            feature.AddKnownType(@"System.Net.Linger,System", @"Linger");
            feature.AddKnownType(@"System.Net.WSABuffer,System", @"WSABuffer");
            feature.AddKnownType(@"System.Net.TransmitFileBuffers,System", @"TransmitFileBuffers");
            feature.AddKnownType(@"System.Net.WSAData,System", @"WSAData");
            feature.AddKnownType(@"System.Net.AddressInfo,System", @"AddressInfo");
            feature.AddKnownType(@"System.Net.AddressInfoHints,System", @"AddressInfoHints");
            feature.AddKnownType(@"System.Net.NameInfoFlags,System", @"NameInfoFlags");
            feature.AddKnownType(@"System.Net.IPv6MulticastRequest,System", @"IPv6MulticastRequest");
            feature.AddKnownType(@"System.Net.SocketConstructorFlags,System", @"SocketConstructorFlags");
            feature.AddKnownType(@"System.Net.PrefixLookup,System", @"PrefixLookup");
            feature.AddKnownType(@"System.Net.ProxyChain,System", @"ProxyChain");
            feature.AddKnownType(@"System.Net.ProxyScriptChain,System", @"ProxyScriptChain");
            feature.AddKnownType(@"System.Net.DirectProxy,System", @"DirectProxy");
            feature.AddKnownType(@"System.Net.StaticProxy,System", @"StaticProxy");
            feature.AddKnownType(@"System.Net.WebProxyDataBuilder,System", @"WebProxyDataBuilder");
            feature.AddKnownType(@"System.Net.RegBlobWebProxyDataBuilder,System", @"RegBlobWebProxyDataBuilder");
            feature.AddKnownType(@"System.Net.RequestLifetimeSetter,System", @"RequestLifetimeSetter");
            feature.AddKnownType(@"System.Net.WinHttpWebProxyBuilder,System", @"WinHttpWebProxyBuilder");
            feature.AddKnownType(@"System.Net.SafeFreeAddrInfo,System", @"SafeFreeAddrInfo");
            feature.AddKnownType(@"System.Net.SafeCloseHandle,System", @"SafeCloseHandle");
            feature.AddKnownType(@"System.Net.HttpRequestQueueV2Handle,System", @"HttpRequestQueueV2Handle");
            feature.AddKnownType(@"System.Net.HttpServerSessionHandle,System", @"HttpServerSessionHandle");
            feature.AddKnownType(@"System.Net.SafeCloseIcmpHandle,System", @"SafeCloseIcmpHandle");
            feature.AddKnownType(@"System.Net.SafeInternetHandle,System", @"SafeInternetHandle");
            feature.AddKnownType(@"System.Net.SafeSspiAuthDataHandle,System", @"SafeSspiAuthDataHandle");
            feature.AddKnownType(@"System.Net.SecurDll,System", @"SecurDll");
            feature.AddKnownType(@"System.Net.SafeFreeContextBuffer,System", @"SafeFreeContextBuffer");
            feature.AddKnownType(@"System.Net.SafeFreeContextBuffer_SECURITY,System", @"SafeFreeContextBuffer_SECURITY");
            feature.AddKnownType(@"System.Net.SafeLocalFree,System", @"SafeLocalFree");
            feature.AddKnownType(@"System.Net.SafeGlobalFree,System", @"SafeGlobalFree");
            feature.AddKnownType(@"System.Net.SafeOverlappedFree,System", @"SafeOverlappedFree");
            feature.AddKnownType(@"System.Net.SafeLoadLibrary,System", @"SafeLoadLibrary");
            feature.AddKnownType(@"System.Net.SafeFreeCertChain,System", @"SafeFreeCertChain");
            feature.AddKnownType(@"System.Net.SafeFreeCertChainList,System", @"SafeFreeCertChainList");
            feature.AddKnownType(@"System.Net.SafeCertSelectCritera,System", @"SafeCertSelectCritera");
            feature.AddKnownType(@"System.Net.SafeFreeCertContext,System", @"SafeFreeCertContext");
            feature.AddKnownType(@"System.Net.SSPIHandle,System", @"SSPIHandle");
            feature.AddKnownType(@"System.Net.SafeFreeCredentials,System", @"SafeFreeCredentials");
            feature.AddKnownType(@"System.Net.SafeCredentialReference,System", @"SafeCredentialReference");
            feature.AddKnownType(@"System.Net.SafeFreeCredential_SECURITY,System", @"SafeFreeCredential_SECURITY");
            feature.AddKnownType(@"System.Net.SafeDeleteContext,System", @"SafeDeleteContext");
            feature.AddKnownType(@"System.Net.SafeDeleteContext_SECURITY,System", @"SafeDeleteContext_SECURITY");
            feature.AddKnownType(@"System.Net.SafeNativeOverlapped,System", @"SafeNativeOverlapped");
            feature.AddKnownType(@"System.Net.SafeCloseSocket,System", @"SafeCloseSocket");
            feature.AddKnownType(@"System.Net.SafeCloseSocketAndEvent,System", @"SafeCloseSocketAndEvent");
            feature.AddKnownType(@"System.Net.SafeLocalFreeChannelBinding,System", @"SafeLocalFreeChannelBinding");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ChannelBinding,System", @"ChannelBinding");
            feature.AddKnownType(@"System.Net.SafeFreeContextBufferChannelBinding,System", @"SafeFreeContextBufferChannelBinding");
            feature.AddKnownType(@"System.Net.SafeFreeContextBufferChannelBinding_SECURITY,System", @"SafeFreeContextBufferChannelBinding_SECURITY");
            feature.AddKnownType(@"System.Net.SafeUnlockUrlCacheEntryFile,System", @"SafeUnlockUrlCacheEntryFile");
            feature.AddKnownType(@"System.Net.SafeRegistryHandle,System", @"SafeRegistryHandle");
            feature.AddKnownType(@"System.Net.SafeWebSocketHandle,System", @"SafeWebSocketHandle");
            feature.AddKnownType(@"System.Net.ScatterGatherBuffers,System", @"ScatterGatherBuffers");
            feature.AddKnownType(@"System.Net.ServiceNameStore,System", @"ServiceNameStore");
            feature.AddKnownType(@"System.Net.Semaphore,System", @"Semaphore");
            feature.AddKnownType(@"System.Net.ShellExpression,System", @"ShellExpression");
            feature.AddKnownType(@"System.Net.SpnDictionary,System", @"SpnDictionary");
            feature.AddKnownType(@"System.Collections.Specialized.StringDictionary,System", @"StringDictionary");
            feature.AddKnownType(@"System.Net.SpnToken,System", @"SpnToken");
            feature.AddKnownType(@"System.Net.SSPIWrapper,System", @"SSPIWrapper");
            feature.AddKnownType(@"System.Net.StreamSizes,System", @"StreamSizes");
            feature.AddKnownType(@"System.Net.SecSizes,System", @"SecSizes");
            feature.AddKnownType(@"System.Net.SchProtocols,System", @"SchProtocols");
            feature.AddKnownType(@"System.Net.Alg,System", @"Alg");
            feature.AddKnownType(@"System.Net.SslConnectionInfo,System", @"SslConnectionInfo");
            feature.AddKnownType(@"System.Net.NegotiationInfo,System", @"NegotiationInfo");
            feature.AddKnownType(@"System.Net.NegotiationInfoClass,System", @"NegotiationInfoClass");
            feature.AddKnownType(@"System.Net.SecurityPackageInfo,System", @"SecurityPackageInfo");
            feature.AddKnownType(@"System.Net.SecurityPackageInfoClass,System", @"SecurityPackageInfoClass");
            feature.AddKnownType(@"System.Net.Bindings,System", @"Bindings");
            feature.AddKnownType(@"System.Net.StreamFramer,System", @"StreamFramer");
            feature.AddKnownType(@"System.Net.WorkerAsyncResult,System", @"WorkerAsyncResult");
            feature.AddKnownType(@"System.Net.FrameHeader,System", @"FrameHeader");
            feature.AddKnownType(@"System.Net.TimerThread,System", @"TimerThread");
            feature.AddKnownType(@"System.Net.TlsStream,System", @"TlsStream");
            feature.AddKnownType(@"System.Net.Sockets.NetworkStream,System", @"NetworkStream");
            feature.AddKnownType(@"System.Net.Win32,System", @"Win32");
            feature.AddKnownType(@"System.Net.FixedSizeReader,System", @"FixedSizeReader");
            feature.AddKnownType(@"System.Net.BufferAsyncResult,System", @"BufferAsyncResult");
            feature.AddKnownType(@"System.Net.AsyncProtocolCallback,System", @"AsyncProtocolCallback");
            feature.AddKnownType(@"System.Net.AsyncProtocolRequest,System", @"AsyncProtocolRequest");
            feature.AddKnownType(@"System.Net.TimeoutValidator,System", @"TimeoutValidator");
            feature.AddKnownType(@"System.Net.Base64Stream,System", @"Base64Stream");
            feature.AddKnownType(@"System.Net.DelegatedStream,System", @"DelegatedStream");
            feature.AddKnownType(@"System.Net.Mime.IEncodableStream,System", @"IEncodableStream");
            feature.AddKnownType(@"System.Net.BufferedReadStream,System", @"BufferedReadStream");
            feature.AddKnownType(@"System.Net.ClosableStream,System", @"ClosableStream");
            feature.AddKnownType(@"System.Net.TrackingStringDictionary,System", @"TrackingStringDictionary");
            feature.AddKnownType(@"System.Net.TrackingValidationObjectDictionary,System", @"TrackingValidationObjectDictionary");
            feature.AddKnownType(@"System.Net.WebSockets.ClientWebSocket,System", @"ClientWebSocket");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocket,System", @"WebSocket");
            feature.AddKnownType(@"System.Net.WebSockets.ClientWebSocketOptions,System", @"ClientWebSocketOptions");
            feature.AddKnownType(@"System.Net.WebSockets.InternalClientWebSocket,System", @"InternalClientWebSocket");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketBase,System", @"WebSocketBase");
            feature.AddKnownType(@"System.Net.WebSockets.HttpListenerWebSocketContext,System", @"HttpListenerWebSocketContext");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketContext,System", @"WebSocketContext");
            feature.AddKnownType(@"System.Net.WebSockets.ServerWebSocket,System", @"ServerWebSocket");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketBuffer,System", @"WebSocketBuffer");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketCloseStatus,System", @"WebSocketCloseStatus");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketConnectionStream,System", @"WebSocketConnectionStream");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketBase+IWebSocketStream,System", @"IWebSocketStream");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketError,System", @"WebSocketError");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketException,System", @"WebSocketException");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketHelpers,System", @"WebSocketHelpers");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketHttpListenerDuplexStream,System", @"WebSocketHttpListenerDuplexStream");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketMessageType,System", @"WebSocketMessageType");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent,System", @"WebSocketProtocolComponent");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketReceiveResult,System", @"WebSocketReceiveResult");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketState,System", @"WebSocketState");
            feature.AddKnownType(@"System.Net.Mime.Base64WriteStateInfo,System", @"Base64WriteStateInfo");
            feature.AddKnownType(@"System.Net.Mime.WriteStateInfoBase,System", @"WriteStateInfoBase");
            feature.AddKnownType(@"System.Net.Mime.BaseWriter,System", @"BaseWriter");
            feature.AddKnownType(@"System.Net.Mime.ContentDisposition,System", @"ContentDisposition");
            feature.AddKnownType(@"System.Net.Mime.ContentTransferEncoding,System", @"ContentTransferEncoding");
            feature.AddKnownType(@"System.Net.Mime.ContentType,System", @"ContentType");
            feature.AddKnownType(@"System.Net.Mime.DispositionTypeNames,System", @"DispositionTypeNames");
            feature.AddKnownType(@"System.Net.Mime.EightBitStream,System", @"EightBitStream");
            feature.AddKnownType(@"System.Net.Mime.EncodedStreamFactory,System", @"EncodedStreamFactory");
            feature.AddKnownType(@"System.Net.Mime.HeaderCollection,System", @"HeaderCollection");
            feature.AddKnownType(@"System.Net.Mime.MailBnfHelper,System", @"MailBnfHelper");
            feature.AddKnownType(@"System.Net.Mime.MediaTypeNames,System", @"MediaTypeNames");
            feature.AddKnownType(@"System.Net.Mime.MimeBasePart,System", @"MimeBasePart");
            feature.AddKnownType(@"System.Net.Mime.MimeMultiPart,System", @"MimeMultiPart");
            feature.AddKnownType(@"System.Net.Mime.MimeMultiPartType,System", @"MimeMultiPartType");
            feature.AddKnownType(@"System.Net.Mime.MimePart,System", @"MimePart");
            feature.AddKnownType(@"System.Net.Mime.MimeWriter,System", @"MimeWriter");
            feature.AddKnownType(@"System.Net.Mime.MultiAsyncResult,System", @"MultiAsyncResult");
            feature.AddKnownType(@"System.Net.Mime.QEncodedStream,System", @"QEncodedStream");
            feature.AddKnownType(@"System.Net.Mime.QuotedPrintableStream,System", @"QuotedPrintableStream");
            feature.AddKnownType(@"System.Net.Mime.SmtpDateTime,System", @"SmtpDateTime");
            feature.AddKnownType(@"System.Net.Mime.TransferEncoding,System", @"TransferEncoding");
            feature.AddKnownType(@"System.Net.Mail.AlternateView,System", @"AlternateView");
            feature.AddKnownType(@"System.Net.Mail.AttachmentBase,System", @"AttachmentBase");
            feature.AddKnownType(@"System.Net.Mail.AlternateViewCollection,System", @"AlternateViewCollection");
            feature.AddKnownType(@"System.Net.Mail.Attachment,System", @"Attachment");
            feature.AddKnownType(@"System.Net.Mail.AttachmentCollection,System", @"AttachmentCollection");
            feature.AddKnownType(@"System.Net.Mail.BufferBuilder,System", @"BufferBuilder");
            feature.AddKnownType(@"System.Net.Mail.DomainLiteralReader,System", @"DomainLiteralReader");
            feature.AddKnownType(@"System.Net.Mail.DotAtomReader,System", @"DotAtomReader");
            feature.AddKnownType(@"System.Net.Mail.PropertyName,System", @"PropertyName");
            feature.AddKnownType(@"System.Net.Mail.ServerState,System", @"ServerState");
            feature.AddKnownType(@"System.Net.Mail.MBErrors,System", @"MBErrors");
            feature.AddKnownType(@"System.Net.Mail.MBKeyAccess,System", @"MBKeyAccess");
            feature.AddKnownType(@"System.Net.Mail.MetadataRecord,System", @"MetadataRecord");
            feature.AddKnownType(@"System.Net.Mail._METADATA_HANDLE_INFO,System", @"_METADATA_HANDLE_INFO");
            feature.AddKnownType(@"System.Net.Mail.IMSAdminBase,System", @"IMSAdminBase");
            feature.AddKnownType(@"System.Net.Mail.MSAdminBase,System", @"MSAdminBase");
            feature.AddKnownType(@"System.Net.Mail.MBDataType,System", @"MBDataType");
            feature.AddKnownType(@"System.Net.Mail.MBUserType,System", @"MBUserType");
            feature.AddKnownType(@"System.Net.Mail.IisPickupDirectory,System", @"IisPickupDirectory");
            feature.AddKnownType(@"System.Net.Mail.ISmtpAuthenticationModule,System", @"ISmtpAuthenticationModule");
            feature.AddKnownType(@"System.Net.Mail.LinkedResource,System", @"LinkedResource");
            feature.AddKnownType(@"System.Net.Mail.LinkedResourceCollection,System", @"LinkedResourceCollection");
            feature.AddKnownType(@"System.Net.Mail.MailAddress,System", @"MailAddress");
            feature.AddKnownType(@"System.Net.Mail.MailAddressCollection,System", @"MailAddressCollection");
            feature.AddKnownType(@"System.Net.Mail.MailAddressParser,System", @"MailAddressParser");
            feature.AddKnownType(@"System.Net.Mail.MailHeaderID,System", @"MailHeaderID");
            feature.AddKnownType(@"System.Net.Mail.MailHeaderInfo,System", @"MailHeaderInfo");
            feature.AddKnownType(@"System.Net.Mail.DeliveryNotificationOptions,System", @"DeliveryNotificationOptions");
            feature.AddKnownType(@"System.Net.Mail.MailMessage,System", @"MailMessage");
            feature.AddKnownType(@"System.Net.Mail.MailWriter,System", @"MailWriter");
            feature.AddKnownType(@"System.Net.Mail.MailPriority,System", @"MailPriority");
            feature.AddKnownType(@"System.Net.Mail.Message,System", @"Message");
            feature.AddKnownType(@"System.Net.Mail.QuotedPairReader,System", @"QuotedPairReader");
            feature.AddKnownType(@"System.Net.Mail.QuotedStringFormatReader,System", @"QuotedStringFormatReader");
            feature.AddKnownType(@"System.Net.Mail.RecipientLocationType,System", @"RecipientLocationType");
            feature.AddKnownType(@"System.Net.Mail.SmtpAuthenticationManager,System", @"SmtpAuthenticationManager");
            feature.AddKnownType(@"System.Net.Mail.SendCompletedEventHandler,System", @"SendCompletedEventHandler");
            feature.AddKnownType(@"System.Net.Mail.SmtpDeliveryMethod,System", @"SmtpDeliveryMethod");
            feature.AddKnownType(@"System.Net.Mail.SmtpDeliveryFormat,System", @"SmtpDeliveryFormat");
            feature.AddKnownType(@"System.Net.Mail.SmtpClient,System", @"SmtpClient");
            feature.AddKnownType(@"System.Net.Mail.CheckCommand,System", @"CheckCommand");
            feature.AddKnownType(@"System.Net.Mail.ReadLinesCommand,System", @"ReadLinesCommand");
            feature.AddKnownType(@"System.Net.Mail.AuthCommand,System", @"AuthCommand");
            feature.AddKnownType(@"System.Net.Mail.DataCommand,System", @"DataCommand");
            feature.AddKnownType(@"System.Net.Mail.DataStopCommand,System", @"DataStopCommand");
            feature.AddKnownType(@"System.Net.Mail.EHelloCommand,System", @"EHelloCommand");
            feature.AddKnownType(@"System.Net.Mail.HelloCommand,System", @"HelloCommand");
            feature.AddKnownType(@"System.Net.Mail.StartTlsCommand,System", @"StartTlsCommand");
            feature.AddKnownType(@"System.Net.Mail.MailCommand,System", @"MailCommand");
            feature.AddKnownType(@"System.Net.Mail.RecipientCommand,System", @"RecipientCommand");
            feature.AddKnownType(@"System.Net.Mail.SmtpCommands,System", @"SmtpCommands");
            feature.AddKnownType(@"System.Net.Mail.LineInfo,System", @"LineInfo");
            feature.AddKnownType(@"System.Net.Mail.SmtpConnection,System", @"SmtpConnection");
            feature.AddKnownType(@"System.Net.Mail.SmtpDigestAuthenticationModule,System", @"SmtpDigestAuthenticationModule");
            feature.AddKnownType(@"System.Net.Mail.SmtpException,System", @"SmtpException");
            feature.AddKnownType(@"System.Net.Mail.SmtpFailedRecipientException,System", @"SmtpFailedRecipientException");
            feature.AddKnownType(@"System.Net.Mail.SmtpFailedRecipientsException,System", @"SmtpFailedRecipientsException");
            feature.AddKnownType(@"System.Net.Mail.SmtpLoginAuthenticationModule,System", @"SmtpLoginAuthenticationModule");
            feature.AddKnownType(@"System.Net.Mail.SmtpNegotiateAuthenticationModule,System", @"SmtpNegotiateAuthenticationModule");
            feature.AddKnownType(@"System.Net.Mail.SmtpNtlmAuthenticationModule,System", @"SmtpNtlmAuthenticationModule");
            feature.AddKnownType(@"System.Net.Mail.SmtpAccess,System", @"SmtpAccess");
            feature.AddKnownType(@"System.Net.Mail.SmtpPermissionAttribute,System", @"SmtpPermissionAttribute");
            feature.AddKnownType(@"System.Net.Mail.SmtpPermission,System", @"SmtpPermission");
            feature.AddKnownType(@"System.Net.Mail.SmtpReplyReader,System", @"SmtpReplyReader");
            feature.AddKnownType(@"System.Net.Mail.SmtpReplyReaderFactory,System", @"SmtpReplyReaderFactory");
            feature.AddKnownType(@"System.Net.Mail.SmtpStatusCode,System", @"SmtpStatusCode");
            feature.AddKnownType(@"System.Net.Mail.SupportedAuth,System", @"SupportedAuth");
            feature.AddKnownType(@"System.Net.Mail.SmtpPooledStream,System", @"SmtpPooledStream");
            feature.AddKnownType(@"System.Net.Mail.SmtpTransport,System", @"SmtpTransport");
            feature.AddKnownType(@"System.Net.Mail.SendMailAsyncResult,System", @"SendMailAsyncResult");
            feature.AddKnownType(@"System.Net.Mail.WhitespaceReader,System", @"WhitespaceReader");
            feature.AddKnownType(@"System.Net.NetworkInformation.DuplicateAddressDetectionState,System", @"DuplicateAddressDetectionState");
            feature.AddKnownType(@"System.Net.NetworkInformation.IcmpV4Statistics,System", @"IcmpV4Statistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.IcmpV6Statistics,System", @"IcmpV6Statistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkInterfaceType,System", @"NetworkInterfaceType");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPAddressInformation,System", @"IPAddressInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPAddressInformationCollection,System", @"IPAddressInformationCollection");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPGlobalProperties,System", @"IPGlobalProperties");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPGlobalStatistics,System", @"IPGlobalStatistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.ScopeLevel,System", @"ScopeLevel");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPInterfaceProperties,System", @"IPInterfaceProperties");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPInterfaceStatistics,System", @"IPInterfaceStatistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPv4InterfaceStatistics,System", @"IPv4InterfaceStatistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.IcmpV4Type,System", @"IcmpV4Type");
            feature.AddKnownType(@"System.Net.NetworkInformation.IcmpV4Code,System", @"IcmpV4Code");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPStatus,System", @"IPStatus");
            feature.AddKnownType(@"System.Net.NetworkInformation.UnicastIPAddressInformation,System", @"UnicastIPAddressInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.UnicastIPAddressInformationCollection,System", @"UnicastIPAddressInformationCollection");
            feature.AddKnownType(@"System.Net.NetworkInformation.MulticastIPAddressInformation,System", @"MulticastIPAddressInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.MulticastIPAddressInformationCollection,System", @"MulticastIPAddressInformationCollection");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPAddressCollection,System", @"IPAddressCollection");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemGatewayIPAddressInformation,System", @"SystemGatewayIPAddressInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.GatewayIPAddressInformation,System", @"GatewayIPAddressInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.GatewayIPAddressInformationCollection,System", @"GatewayIPAddressInformationCollection");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPv4InterfaceProperties,System", @"IPv4InterfaceProperties");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPv6InterfaceProperties,System", @"IPv6InterfaceProperties");
            feature.AddKnownType(@"System.Net.NetworkInformation.IpHelperErrors,System", @"IpHelperErrors");
            feature.AddKnownType(@"System.Net.NetworkInformation.AdapterFlags,System", @"AdapterFlags");
            feature.AddKnownType(@"System.Net.NetworkInformation.AdapterAddressFlags,System", @"AdapterAddressFlags");
            feature.AddKnownType(@"System.Net.NetworkInformation.OldOperationalStatus,System", @"OldOperationalStatus");
            feature.AddKnownType(@"System.Net.NetworkInformation.GetAdaptersAddressesFlags,System", @"GetAdaptersAddressesFlags");
            feature.AddKnownType(@"System.Net.NetworkInformation.IpAddrString,System", @"IpAddrString");
            feature.AddKnownType(@"System.Net.NetworkInformation.FIXED_INFO,System", @"FIXED_INFO");
            feature.AddKnownType(@"System.Net.NetworkInformation.IpSocketAddress,System", @"IpSocketAddress");
            feature.AddKnownType(@"System.Net.NetworkInformation.IpAdapterAddress,System", @"IpAdapterAddress");
            feature.AddKnownType(@"System.Net.NetworkInformation.IpAdapterUnicastAddress,System", @"IpAdapterUnicastAddress");
            feature.AddKnownType(@"System.Net.NetworkInformation.IpAdapterAddresses,System", @"IpAdapterAddresses");
            feature.AddKnownType(@"System.Net.NetworkInformation.InterfaceConnectionType,System", @"InterfaceConnectionType");
            feature.AddKnownType(@"System.Net.NetworkInformation.InterfaceTunnelType,System", @"InterfaceTunnelType");
            feature.AddKnownType(@"System.Net.NetworkInformation.IpPerAdapterInfo,System", @"IpPerAdapterInfo");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibIfRow2,System", @"MibIfRow2");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibUdpStats,System", @"MibUdpStats");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibTcpStats,System", @"MibTcpStats");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibIpStats,System", @"MibIpStats");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibIcmpInfo,System", @"MibIcmpInfo");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibIcmpStats,System", @"MibIcmpStats");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibIcmpInfoEx,System", @"MibIcmpInfoEx");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibIcmpStatsEx,System", @"MibIcmpStatsEx");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibTcpTable,System", @"MibTcpTable");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibTcpRow,System", @"MibTcpRow");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibTcp6TableOwnerPid,System", @"MibTcp6TableOwnerPid");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibTcp6RowOwnerPid,System", @"MibTcp6RowOwnerPid");
            feature.AddKnownType(@"System.Net.NetworkInformation.TcpTableClass,System", @"TcpTableClass");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibUdpTable,System", @"MibUdpTable");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibUdpRow,System", @"MibUdpRow");
            feature.AddKnownType(@"System.Net.NetworkInformation.UdpTableClass,System", @"UdpTableClass");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibUdp6TableOwnerPid,System", @"MibUdp6TableOwnerPid");
            feature.AddKnownType(@"System.Net.NetworkInformation.MibUdp6RowOwnerPid,System", @"MibUdp6RowOwnerPid");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPOptions,System", @"IPOptions");
            feature.AddKnownType(@"System.Net.NetworkInformation.IcmpEchoReply,System", @"IcmpEchoReply");
            feature.AddKnownType(@"System.Net.NetworkInformation.Ipv6Address,System", @"Ipv6Address");
            feature.AddKnownType(@"System.Net.NetworkInformation.Icmp6EchoReply,System", @"Icmp6EchoReply");
            feature.AddKnownType(@"System.Net.NetworkInformation.StableUnicastIpAddressTableDelegate,System", @"StableUnicastIpAddressTableDelegate");
            feature.AddKnownType(@"System.Net.NetworkInformation.UnsafeNetInfoNativeMethods,System", @"UnsafeNetInfoNativeMethods");
            feature.AddKnownType(@"System.Net.NetworkInformation.StartIPOptions,System", @"StartIPOptions");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkAvailabilityEventArgs,System", @"NetworkAvailabilityEventArgs");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkChange,System", @"NetworkChange");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkAddressChangedEventHandler,System", @"NetworkAddressChangedEventHandler");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkAvailabilityChangedEventHandler,System", @"NetworkAvailabilityChangedEventHandler");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkInformationException,System", @"NetworkInformationException");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkInformationAccess,System", @"NetworkInformationAccess");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkInformationPermissionAttribute,System", @"NetworkInformationPermissionAttribute");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkInformationPermission,System", @"NetworkInformationPermission");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkInterface,System", @"NetworkInterface");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkInterfaceComponent,System", @"NetworkInterfaceComponent");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetBiosNodeType,System", @"NetBiosNodeType");
            feature.AddKnownType(@"System.Net.NetworkInformation.OperationalStatus,System", @"OperationalStatus");
            feature.AddKnownType(@"System.Net.NetworkInformation.PhysicalAddress,System", @"PhysicalAddress");
            feature.AddKnownType(@"System.Net.NetworkInformation.PingCompletedEventHandler,System", @"PingCompletedEventHandler");
            feature.AddKnownType(@"System.Net.NetworkInformation.PingCompletedEventArgs,System", @"PingCompletedEventArgs");
            feature.AddKnownType(@"System.Net.NetworkInformation.Ping,System", @"Ping");
            feature.AddKnownType(@"System.Net.NetworkInformation.PingException,System", @"PingException");
            feature.AddKnownType(@"System.Net.NetworkInformation.PingOptions,System", @"PingOptions");
            feature.AddKnownType(@"System.Net.NetworkInformation.PingReply,System", @"PingReply");
            feature.AddKnownType(@"System.Net.NetworkInformation.PrefixOrigin,System", @"PrefixOrigin");
            feature.AddKnownType(@"System.Net.NetworkInformation.SafeCancelMibChangeNotify,System", @"SafeCancelMibChangeNotify");
            feature.AddKnownType(@"System.Net.NetworkInformation.SafeFreeMibTable,System", @"SafeFreeMibTable");
            feature.AddKnownType(@"System.Net.NetworkInformation.SuffixOrigin,System", @"SuffixOrigin");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemIcmpV4Statistics,System", @"SystemIcmpV4Statistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.IcmpV6StatType,System", @"IcmpV6StatType");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemIcmpV6Statistics,System", @"SystemIcmpV6Statistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemIPAddressInformation,System", @"SystemIPAddressInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemIPGlobalProperties,System", @"SystemIPGlobalProperties");
            feature.AddKnownType(@"System.Net.NetworkInformation.FixedInfo,System", @"FixedInfo");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemIPInterfaceProperties,System", @"SystemIPInterfaceProperties");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemIPInterfaceStatistics,System", @"SystemIPInterfaceStatistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemIPv4InterfaceStatistics,System", @"SystemIPv4InterfaceStatistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemIPGlobalStatistics,System", @"SystemIPGlobalStatistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemMulticastIPAddressInformation,System", @"SystemMulticastIPAddressInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemUnicastIPAddressInformation,System", @"SystemUnicastIPAddressInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemIPv4InterfaceProperties,System", @"SystemIPv4InterfaceProperties");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemIPv6InterfaceProperties,System", @"SystemIPv6InterfaceProperties");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemNetworkInterface,System", @"SystemNetworkInterface");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemTcpConnectionInformation,System", @"SystemTcpConnectionInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.TcpConnectionInformation,System", @"TcpConnectionInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemTcpStatistics,System", @"SystemTcpStatistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.TcpStatistics,System", @"TcpStatistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.SystemUdpStatistics,System", @"SystemUdpStatistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.UdpStatistics,System", @"UdpStatistics");
            feature.AddKnownType(@"System.Net.NetworkInformation.TeredoHelper,System", @"TeredoHelper");
            feature.AddKnownType(@"System.Net.NetworkInformation.TcpState,System", @"TcpState");
            feature.AddKnownType(@"System.Net.Cache.HttpRequestCacheValidator,System", @"HttpRequestCacheValidator");
            feature.AddKnownType(@"System.Net.Cache.RequestCacheValidator,System", @"RequestCacheValidator");
            feature.AddKnownType(@"System.Net.Cache.HttpMethod,System", @"HttpMethod");
            feature.AddKnownType(@"System.Net.Cache.ResponseCacheControl,System", @"ResponseCacheControl");
            feature.AddKnownType(@"System.Net.Cache.FtpRequestCacheValidator,System", @"FtpRequestCacheValidator");
            feature.AddKnownType(@"System.Net.Cache.RequestCacheEntry,System", @"RequestCacheEntry");
            feature.AddKnownType(@"System.Net.Cache.RequestCacheManager,System", @"RequestCacheManager");
            feature.AddKnownType(@"System.Net.Cache.RequestCacheBinding,System", @"RequestCacheBinding");
            feature.AddKnownType(@"System.Net.Cache.RequestCacheLevel,System", @"RequestCacheLevel");
            feature.AddKnownType(@"System.Net.Cache.RequestCachePolicy,System", @"RequestCachePolicy");
            feature.AddKnownType(@"System.Net.Cache.HttpRequestCacheLevel,System", @"HttpRequestCacheLevel");
            feature.AddKnownType(@"System.Net.Cache.HttpCacheAgeControl,System", @"HttpCacheAgeControl");
            feature.AddKnownType(@"System.Net.Cache.HttpRequestCachePolicy,System", @"HttpRequestCachePolicy");
            feature.AddKnownType(@"System.Net.Cache.CacheFreshnessStatus,System", @"CacheFreshnessStatus");
            feature.AddKnownType(@"System.Net.Cache.CacheValidationStatus,System", @"CacheValidationStatus");
            feature.AddKnownType(@"System.Net.Cache._WinInetCache,System", @"_WinInetCache");
            feature.AddKnownType(@"System.Net.Cache.BaseWrapperStream,System", @"BaseWrapperStream");
            feature.AddKnownType(@"System.Net.Cache.CombinedReadStream,System", @"CombinedReadStream");
            feature.AddKnownType(@"System.Net.Cache.ForwardingReadStream,System", @"ForwardingReadStream");
            feature.AddKnownType(@"System.Net.Cache.MetadataUpdateStream,System", @"MetadataUpdateStream");
            feature.AddKnownType(@"System.Net.Cache.RangeStream,System", @"RangeStream");
            feature.AddKnownType(@"System.Net.Cache.RequestCacheProtocol,System", @"RequestCacheProtocol");
            feature.AddKnownType(@"System.Net.Cache.Rfc2616,System", @"Rfc2616");
            feature.AddKnownType(@"System.Net.Cache.SingleItemRequestCache,System", @"SingleItemRequestCache");
            feature.AddKnownType(@"System.Net.Configuration.UnicodeDecodingConformance,System", @"UnicodeDecodingConformance");
            feature.AddKnownType(@"System.Net.Configuration.UnicodeEncodingConformance,System", @"UnicodeEncodingConformance");
            feature.AddKnownType(@"System.Net.Configuration.AuthenticationModuleElement,System", @"AuthenticationModuleElement");
            feature.AddKnownType(@"System.Net.Configuration.AuthenticationModuleElementCollection,System", @"AuthenticationModuleElementCollection");
            feature.AddKnownType(@"System.Net.Configuration.AuthenticationModulesSection,System", @"AuthenticationModulesSection");
            feature.AddKnownType(@"System.Net.Configuration.AuthenticationModulesSectionInternal,System", @"AuthenticationModulesSectionInternal");
            feature.AddKnownType(@"System.Net.Configuration.BypassElement,System", @"BypassElement");
            feature.AddKnownType(@"System.Net.Configuration.BypassElementCollection,System", @"BypassElementCollection");
            feature.AddKnownType(@"System.Net.Configuration.ConfigurationStrings,System", @"ConfigurationStrings");
            feature.AddKnownType(@"System.Net.Configuration.ConnectionManagementElement,System", @"ConnectionManagementElement");
            feature.AddKnownType(@"System.Net.Configuration.ConnectionManagementElementCollection,System", @"ConnectionManagementElementCollection");
            feature.AddKnownType(@"System.Net.Configuration.ConnectionManagementSection,System", @"ConnectionManagementSection");
            feature.AddKnownType(@"System.Net.Configuration.ConnectionManagementSectionInternal,System", @"ConnectionManagementSectionInternal");
            feature.AddKnownType(@"System.Net.Configuration.DefaultProxySection,System", @"DefaultProxySection");
            feature.AddKnownType(@"System.Net.Configuration.DefaultProxySectionInternal,System", @"DefaultProxySectionInternal");
            feature.AddKnownType(@"System.Net.Configuration.HttpWebRequestElement,System", @"HttpWebRequestElement");
            feature.AddKnownType(@"System.Net.Configuration.HttpListenerElement,System", @"HttpListenerElement");
            feature.AddKnownType(@"System.Net.Configuration.HttpListenerTimeoutsElement,System", @"HttpListenerTimeoutsElement");
            feature.AddKnownType(@"System.Net.Configuration.HttpCachePolicyElement,System", @"HttpCachePolicyElement");
            feature.AddKnownType(@"System.Net.Configuration.FtpCachePolicyElement,System", @"FtpCachePolicyElement");
            feature.AddKnownType(@"System.Net.Configuration.Ipv6Element,System", @"Ipv6Element");
            feature.AddKnownType(@"System.Net.Configuration.MailSettingsSectionGroup,System", @"MailSettingsSectionGroup");
            feature.AddKnownType(@"System.Net.Configuration.MailSettingsSectionGroupInternal,System", @"MailSettingsSectionGroupInternal");
            feature.AddKnownType(@"System.Net.Configuration.ModuleElement,System", @"ModuleElement");
            feature.AddKnownType(@"System.Net.Configuration.NetSectionGroup,System", @"NetSectionGroup");
            feature.AddKnownType(@"System.Net.Configuration.PerformanceCountersElement,System", @"PerformanceCountersElement");
            feature.AddKnownType(@"System.Net.Configuration.ProxyElement,System", @"ProxyElement");
            feature.AddKnownType(@"System.Net.Configuration.RequestCachingSection,System", @"RequestCachingSection");
            feature.AddKnownType(@"System.Net.Configuration.RequestCachingSectionInternal,System", @"RequestCachingSectionInternal");
            feature.AddKnownType(@"System.Net.Configuration.SettingsSection,System", @"SettingsSection");
            feature.AddKnownType(@"System.Net.Configuration.SettingsSectionInternal,System", @"SettingsSectionInternal");
            feature.AddKnownType(@"System.Net.Configuration.ServicePointManagerElement,System", @"ServicePointManagerElement");
            feature.AddKnownType(@"System.Net.Configuration.SmtpSection,System", @"SmtpSection");
            feature.AddKnownType(@"System.Net.Configuration.SmtpSectionInternal,System", @"SmtpSectionInternal");
            feature.AddKnownType(@"System.Net.Configuration.SmtpNetworkElement,System", @"SmtpNetworkElement");
            feature.AddKnownType(@"System.Net.Configuration.SmtpNetworkElementInternal,System", @"SmtpNetworkElementInternal");
            feature.AddKnownType(@"System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement,System", @"SmtpSpecifiedPickupDirectoryElement");
            feature.AddKnownType(@"System.Net.Configuration.SmtpSpecifiedPickupDirectoryElementInternal,System", @"SmtpSpecifiedPickupDirectoryElementInternal");
            feature.AddKnownType(@"System.Net.Configuration.SocketElement,System", @"SocketElement");
            feature.AddKnownType(@"System.Net.Configuration.WebProxyScriptElement,System", @"WebProxyScriptElement");
            feature.AddKnownType(@"System.Net.Configuration.WebRequestModuleElement,System", @"WebRequestModuleElement");
            feature.AddKnownType(@"System.Net.Configuration.WebRequestModuleElementCollection,System", @"WebRequestModuleElementCollection");
            feature.AddKnownType(@"System.Net.Configuration.WebRequestModulesSection,System", @"WebRequestModulesSection");
            feature.AddKnownType(@"System.Net.Configuration.WebRequestModulesSectionInternal,System", @"WebRequestModulesSectionInternal");
            feature.AddKnownType(@"System.Net.Configuration.WebUtilityElement,System", @"WebUtilityElement");
            feature.AddKnownType(@"System.Net.Security.SecureChannel,System", @"SecureChannel");
            feature.AddKnownType(@"System.Net.Security.ProtocolToken,System", @"ProtocolToken");
            feature.AddKnownType(@"System.Net.Security.SslSessionsCache,System", @"SslSessionsCache");
            feature.AddKnownType(@"System.Net.Security.SSPIHandleCache,System", @"SSPIHandleCache");
            feature.AddKnownType(@"System.Net.Security.AuthenticatedStream,System", @"AuthenticatedStream");
            feature.AddKnownType(@"System.Net.Security.AuthenticationLevel,System", @"AuthenticationLevel");
            feature.AddKnownType(@"System.Net.Security.ProtectionLevel,System", @"ProtectionLevel");
            feature.AddKnownType(@"System.Net.Security.NegotiateStream,System", @"NegotiateStream");
            feature.AddKnownType(@"System.Net.Security.SslPolicyErrors,System", @"SslPolicyErrors");
            feature.AddKnownType(@"System.Net.Security.EncryptionPolicy,System", @"EncryptionPolicy");
            feature.AddKnownType(@"System.Net.Security.RemoteCertificateValidationCallback,System", @"RemoteCertificateValidationCallback");
            feature.AddKnownType(@"System.Net.Security.LocalCertificateSelectionCallback,System", @"LocalCertificateSelectionCallback");
            feature.AddKnownType(@"System.Net.Security.RemoteCertValidationCallback,System", @"RemoteCertValidationCallback");
            feature.AddKnownType(@"System.Net.Security.LocalCertSelectionCallback,System", @"LocalCertSelectionCallback");
            feature.AddKnownType(@"System.Net.Security.SslStream,System", @"SslStream");
            feature.AddKnownType(@"System.Net.Security.NegoState,System", @"NegoState");
            feature.AddKnownType(@"System.Net.Security.SslState,System", @"SslState");
            feature.AddKnownType(@"System.Net.Security._SslStream,System", @"_SslStream");
            feature.AddKnownType(@"System.Net.Security.TlsAlertMessage,System", @"TlsAlertMessage");
            feature.AddKnownType(@"System.Net.Security.TlsAlertType,System", @"TlsAlertType");
            feature.AddKnownType(@"System.Net.Sockets.SocketException,System", @"SocketException");
            feature.AddKnownType(@"System.Net.Sockets.AddressFamily,System", @"AddressFamily");
            feature.AddKnownType(@"System.Net.Sockets.IoctlSocketConstants,System", @"IoctlSocketConstants");
            feature.AddKnownType(@"System.Net.Sockets.AsyncEventBits,System", @"AsyncEventBits");
            feature.AddKnownType(@"System.Net.Sockets.AsyncEventBitsPos,System", @"AsyncEventBitsPos");
            feature.AddKnownType(@"System.Net.Sockets.NetworkEvents,System", @"NetworkEvents");
            feature.AddKnownType(@"System.Net.Sockets.TimeValue,System", @"TimeValue");
            feature.AddKnownType(@"System.Net.Sockets.IOControlCode,System", @"IOControlCode");
            feature.AddKnownType(@"System.Net.Sockets.IPProtectionLevel,System", @"IPProtectionLevel");
            feature.AddKnownType(@"System.Net.Sockets.LingerOption,System", @"LingerOption");
            feature.AddKnownType(@"System.Net.Sockets.MulticastOption,System", @"MulticastOption");
            feature.AddKnownType(@"System.Net.Sockets.IPv6MulticastOption,System", @"IPv6MulticastOption");
            feature.AddKnownType(@"System.Net.Sockets.ProtocolFamily,System", @"ProtocolFamily");
            feature.AddKnownType(@"System.Net.Sockets.ProtocolType,System", @"ProtocolType");
            feature.AddKnownType(@"System.Net.Sockets.SelectMode,System", @"SelectMode");
            feature.AddKnownType(@"System.Net.Sockets.SocketInformationOptions,System", @"SocketInformationOptions");
            feature.AddKnownType(@"System.Net.Sockets.SocketInformation,System", @"SocketInformation");
            feature.AddKnownType(@"System.Net.Sockets.Socket,System", @"Socket");
            feature.AddKnownType(@"System.Net.Sockets.ConnectAsyncResult,System", @"ConnectAsyncResult");
            feature.AddKnownType(@"System.Net.Sockets.AcceptAsyncResult,System", @"AcceptAsyncResult");
            feature.AddKnownType(@"System.Net.Sockets.SocketAsyncOperation,System", @"SocketAsyncOperation");
            feature.AddKnownType(@"System.Net.Sockets.SendPacketsElement,System", @"SendPacketsElement");
            feature.AddKnownType(@"System.Net.Sockets.SocketClientAccessPolicyProtocol,System", @"SocketClientAccessPolicyProtocol");
            feature.AddKnownType(@"System.Net.Sockets.SocketAsyncEventArgs,System", @"SocketAsyncEventArgs");
            feature.AddKnownType(@"System.Net.Sockets.SocketError,System", @"SocketError");
            feature.AddKnownType(@"System.Net.Sockets.SocketFlags,System", @"SocketFlags");
            feature.AddKnownType(@"System.Net.Sockets.SocketOptionLevel,System", @"SocketOptionLevel");
            feature.AddKnownType(@"System.Net.Sockets.SocketOptionName,System", @"SocketOptionName");
            feature.AddKnownType(@"System.Net.Sockets.SocketShutdown,System", @"SocketShutdown");
            feature.AddKnownType(@"System.Net.Sockets.SocketReceiveFromResult,System", @"SocketReceiveFromResult");
            feature.AddKnownType(@"System.Net.Sockets.SocketReceiveMessageFromResult,System", @"SocketReceiveMessageFromResult");
            feature.AddKnownType(@"System.Net.Sockets.SocketTaskExtensions,System", @"SocketTaskExtensions");
            feature.AddKnownType(@"System.Net.Sockets.SocketType,System", @"SocketType");
            feature.AddKnownType(@"System.Net.Sockets.TcpClient,System", @"TcpClient");
            feature.AddKnownType(@"System.Net.Sockets.TcpListener,System", @"TcpListener");
            feature.AddKnownType(@"System.Net.Sockets.TransmitFileOptions,System", @"TransmitFileOptions");
            feature.AddKnownType(@"System.Net.Sockets.UdpClient,System", @"UdpClient");
            feature.AddKnownType(@"System.Net.Sockets.UdpReceiveResult,System", @"UdpReceiveResult");
            feature.AddKnownType(@"System.Net.Sockets.AcceptOverlappedAsyncResult,System", @"AcceptOverlappedAsyncResult");
            feature.AddKnownType(@"System.Net.Sockets.BaseOverlappedAsyncResult,System", @"BaseOverlappedAsyncResult");
            feature.AddKnownType(@"System.Net.Sockets.OverlappedCache,System", @"OverlappedCache");
            feature.AddKnownType(@"System.Net.Sockets.ConnectOverlappedAsyncResult,System", @"ConnectOverlappedAsyncResult");
            feature.AddKnownType(@"System.Net.Sockets.DisconnectOverlappedAsyncResult,System", @"DisconnectOverlappedAsyncResult");
            feature.AddKnownType(@"System.Net.Sockets.DynamicWinsockMethods,System", @"DynamicWinsockMethods");
            feature.AddKnownType(@"System.Net.Sockets.AcceptExDelegate,System", @"AcceptExDelegate");
            feature.AddKnownType(@"System.Net.Sockets.GetAcceptExSockaddrsDelegate,System", @"GetAcceptExSockaddrsDelegate");
            feature.AddKnownType(@"System.Net.Sockets.ConnectExDelegate,System", @"ConnectExDelegate");
            feature.AddKnownType(@"System.Net.Sockets.DisconnectExDelegate,System", @"DisconnectExDelegate");
            feature.AddKnownType(@"System.Net.Sockets.DisconnectExDelegate_Blocking,System", @"DisconnectExDelegate_Blocking");
            feature.AddKnownType(@"System.Net.Sockets.WSARecvMsgDelegate,System", @"WSARecvMsgDelegate");
            feature.AddKnownType(@"System.Net.Sockets.WSARecvMsgDelegate_Blocking,System", @"WSARecvMsgDelegate_Blocking");
            feature.AddKnownType(@"System.Net.Sockets.TransmitPacketsDelegate,System", @"TransmitPacketsDelegate");
            feature.AddKnownType(@"System.Net.Sockets.MultipleConnectAsync,System", @"MultipleConnectAsync");
            feature.AddKnownType(@"System.Net.Sockets.SingleSocketMultipleConnectAsync,System", @"SingleSocketMultipleConnectAsync");
            feature.AddKnownType(@"System.Net.Sockets.MultipleSocketMultipleConnectAsync,System", @"MultipleSocketMultipleConnectAsync");
            feature.AddKnownType(@"System.Net.Sockets.OverlappedAsyncResult,System", @"OverlappedAsyncResult");
            feature.AddKnownType(@"System.Net.Sockets.TransmitFileOverlappedAsyncResult,System", @"TransmitFileOverlappedAsyncResult");
            feature.AddKnownType(@"System.Net.Sockets.ReceiveMessageOverlappedAsyncResult,System", @"ReceiveMessageOverlappedAsyncResult");
            feature.AddKnownType(@"System.Net.Sockets.IPPacketInformation,System", @"IPPacketInformation");
            feature.AddKnownType(@"System.Windows.Input.BuildInfo,System", @"BuildInfo");
            feature.AddKnownType(@"System.Windows.Input.ICommand,System", @"ICommand");
            feature.AddKnownType(@"System.Windows.Markup.ValueSerializerAttribute,System", @"ValueSerializerAttribute");
            feature.AddKnownType(@"System.Media.SoundPlayer,System", @"SoundPlayer");
            feature.AddKnownType(@"System.Media.SystemSounds,System", @"SystemSounds");
            feature.AddKnownType(@"System.Media.SystemSound,System", @"SystemSound");
            feature.AddKnownType(@"System.Collections.Specialized.BitVector32,System", @"BitVector32");
            feature.AddKnownType(@"System.Collections.Specialized.CollectionsUtil,System", @"CollectionsUtil");
            feature.AddKnownType(@"System.Collections.Specialized.FixedStringLookup,System", @"FixedStringLookup");
            feature.AddKnownType(@"System.Collections.Specialized.HybridDictionary,System", @"HybridDictionary");
            feature.AddKnownType(@"System.Collections.Specialized.INotifyCollectionChanged,System", @"INotifyCollectionChanged");
            feature.AddKnownType(@"System.Collections.Specialized.IOrderedDictionary,System", @"IOrderedDictionary");
            feature.AddKnownType(@"System.Collections.Specialized.ListDictionary,System", @"ListDictionary");
            feature.AddKnownType(@"System.Collections.Specialized.CompatibleComparer,System", @"CompatibleComparer");
            feature.AddKnownType(@"System.Collections.Specialized.NotifyCollectionChangedAction,System", @"NotifyCollectionChangedAction");
            feature.AddKnownType(@"System.Collections.Specialized.NotifyCollectionChangedEventArgs,System", @"NotifyCollectionChangedEventArgs");
            feature.AddKnownType(@"System.Collections.Specialized.NotifyCollectionChangedEventHandler,System", @"NotifyCollectionChangedEventHandler");
            feature.AddKnownType(@"System.Collections.Specialized.OrderedDictionary,System", @"OrderedDictionary");
            feature.AddKnownType(@"System.Collections.Specialized.StringCollection,System", @"StringCollection");
            feature.AddKnownType(@"System.Collections.Specialized.StringEnumerator,System", @"StringEnumerator");
            feature.AddKnownType(@"System.Collections.Specialized.StringDictionaryWithComparer,System", @"StringDictionaryWithComparer");
            feature.AddKnownType(@"System.Collections.Specialized.BackCompatibleStringComparer,System", @"BackCompatibleStringComparer");
            feature.AddKnownType(@"System.Collections.ObjectModel.ObservableCollection`1,System", @"ObservableCollection`1'1");
            feature.AddKnownType(@"System.Collections.ObjectModel.ReadOnlyObservableCollection`1,System", @"ReadOnlyObservableCollection`1'1");
            feature.AddKnownType(@"System.Collections.Generic.System_CollectionDebugView`1,System", @"System_CollectionDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Generic.System_QueueDebugView`1,System", @"System_QueueDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Generic.System_StackDebugView`1,System", @"System_StackDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Generic.System_DictionaryDebugView`2,System", @"System_DictionaryDebugView`2'2");
            feature.AddKnownType(@"System.Collections.Generic.System_DictionaryKeyCollectionDebugView`2,System", @"System_DictionaryKeyCollectionDebugView`2'2");
            feature.AddKnownType(@"System.Collections.Generic.System_DictionaryValueCollectionDebugView`2,System", @"System_DictionaryValueCollectionDebugView`2'2");
            feature.AddKnownType(@"System.Collections.Generic.LinkedListNode`1,System", @"LinkedListNode`1'1");
            feature.AddKnownType(@"System.Collections.Generic.TreeSet`1,System", @"TreeSet`1'1");
            feature.AddKnownType(@"System.Collections.Generic.TreeWalkPredicate`1,System", @"TreeWalkPredicate`1'1");
            feature.AddKnownType(@"System.Collections.Generic.TreeRotation,System", @"TreeRotation");
            feature.AddKnownType(@"System.Collections.Generic.SortedSetEqualityComparer`1,System", @"SortedSetEqualityComparer`1'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSetDebugView`1,System", @"SortedSetDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Generic.BitHelper,System", @"BitHelper");
            feature.AddKnownType(@"System.Collections.Concurrent.BlockingCollection`1,System", @"BlockingCollection`1'1");
            feature.AddKnownType(@"System.Collections.Concurrent.SystemThreadingCollections_BlockingCollectionDebugView`1,System", @"SystemThreadingCollections_BlockingCollectionDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Concurrent.ConcurrentBag`1,System", @"ConcurrentBag`1'1");
            feature.AddKnownType(@"System.Collections.Concurrent.SystemThreadingCollection_IProducerConsumerCollectionDebugView`1,System", @"SystemThreadingCollection_IProducerConsumerCollectionDebugView`1'1");
            feature.AddKnownType(@"System.Threading.Semaphore,System", @"Semaphore");
            feature.AddKnownType(@"System.Threading.BarrierPostPhaseException,System", @"BarrierPostPhaseException");
            feature.AddKnownType(@"System.Threading.Barrier,System", @"Barrier");
            feature.AddKnownType(@"System.Threading.ThreadExceptionEventArgs,System", @"ThreadExceptionEventArgs");
            feature.AddKnownType(@"System.Threading.ThreadExceptionEventHandler,System", @"ThreadExceptionEventHandler");
            feature.AddKnownType(@"System.Runtime.Versioning.FrameworkName,System", @"FrameworkName");
            feature.AddKnownType(@"System.Runtime.InteropServices.HandleCollector,System", @"HandleCollector");
            feature.AddKnownType(@"System.Runtime.InteropServices.DefaultParameterValueAttribute,System", @"DefaultParameterValueAttribute");
            feature.AddKnownType(@"System.Runtime.InteropServices.StandardOleMarshalObject,System", @"StandardOleMarshalObject");
            feature.AddKnownType(@"Microsoft.Win32.UnsafeNativeMethods+IMarshal,System", @"Microsoft.Win32.IMarshal");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.ADVF,System", @"ADVF");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.DATADIR,System", @"DATADIR");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.DVASPECT,System", @"DVASPECT");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.FORMATETC,System", @"FORMATETC");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.IAdviseSink,System", @"IAdviseSink");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.IDataObject,System", @"IDataObject");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.IEnumFORMATETC,System", @"IEnumFORMATETC");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.IEnumSTATDATA,System", @"IEnumSTATDATA");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.STATDATA,System", @"STATDATA");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.STGMEDIUM,System", @"STGMEDIUM");
            feature.AddKnownType(@"System.Runtime.InteropServices.ComTypes.TYMED,System", @"TYMED");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.INotifyCollectionChangedEventArgs,System", @"INotifyCollectionChangedEventArgs");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.IPropertyChangedEventArgs,System", @"IPropertyChangedEventArgs");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.INotifyCollectionChanged_WinRT,System", @"INotifyCollectionChanged_WinRT");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.INotifyPropertyChanged_WinRT,System", @"INotifyPropertyChanged_WinRT");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.ICommand_WinRT,System", @"ICommand_WinRT");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.NotifyCollectionChangedEventHandler_WinRT,System", @"NotifyCollectionChangedEventHandler_WinRT");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.PropertyChangedEventHandler_WinRT,System", @"PropertyChangedEventHandler_WinRT");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.NotifyCollectionChangedEventArgsMarshaler,System", @"NotifyCollectionChangedEventArgsMarshaler");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.PropertyChangedEventArgsMarshaler,System", @"PropertyChangedEventArgsMarshaler");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.NotifyCollectionChangedToManagedAdapter,System", @"NotifyCollectionChangedToManagedAdapter");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.NotifyCollectionChangedToWinRTAdapter,System", @"NotifyCollectionChangedToWinRTAdapter");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.NotifyPropertyChangedToManagedAdapter,System", @"NotifyPropertyChangedToManagedAdapter");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.NotifyPropertyChangedToWinRTAdapter,System", @"NotifyPropertyChangedToWinRTAdapter");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.ICommandToManagedAdapter,System", @"ICommandToManagedAdapter");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.ICommandToWinRTAdapter,System", @"ICommandToWinRTAdapter");
            feature.AddKnownType(@"System.Runtime.InteropServices.WindowsRuntime.ICommandAdapterHelpers,System", @"ICommandAdapterHelpers");
            feature.AddKnownType(@"System.Reflection.ICustomTypeProvider,System", @"ICustomTypeProvider");
            feature.AddKnownType(@"System.IO.InvalidDataException,System", @"InvalidDataException");
            feature.AddKnownType(@"System.IO.NotifyFilters,System", @"NotifyFilters");
            feature.AddKnownType(@"System.IO.ErrorEventArgs,System", @"ErrorEventArgs");
            feature.AddKnownType(@"System.IO.ErrorEventHandler,System", @"ErrorEventHandler");
            feature.AddKnownType(@"System.IO.FileSystemEventArgs,System", @"FileSystemEventArgs");
            feature.AddKnownType(@"System.IO.FileSystemEventHandler,System", @"FileSystemEventHandler");
            feature.AddKnownType(@"System.IO.FileSystemWatcher,System", @"FileSystemWatcher");
            feature.AddKnownType(@"System.IO.Direct,System", @"Direct");
            feature.AddKnownType(@"System.IO.InternalBufferOverflowException,System", @"InternalBufferOverflowException");
            feature.AddKnownType(@"System.IO.IODescriptionAttribute,System", @"IODescriptionAttribute");
            feature.AddKnownType(@"System.IO.PatternMatcher,System", @"PatternMatcher");
            feature.AddKnownType(@"System.IO.RenamedEventArgs,System", @"RenamedEventArgs");
            feature.AddKnownType(@"System.IO.RenamedEventHandler,System", @"RenamedEventHandler");
            feature.AddKnownType(@"System.IO.WaitForChangedResult,System", @"WaitForChangedResult");
            feature.AddKnownType(@"System.IO.WatcherChangeTypes,System", @"WatcherChangeTypes");
            feature.AddKnownType(@"System.IO.Ports.Handshake,System", @"Handshake");
            feature.AddKnownType(@"System.IO.Ports.InternalResources,System", @"InternalResources");
            feature.AddKnownType(@"System.IO.Ports.Parity,System", @"Parity");
            feature.AddKnownType(@"System.IO.Ports.SerialError,System", @"SerialError");
            feature.AddKnownType(@"System.IO.Ports.SerialErrorReceivedEventArgs,System", @"SerialErrorReceivedEventArgs");
            feature.AddKnownType(@"System.IO.Ports.SerialErrorReceivedEventHandler,System", @"SerialErrorReceivedEventHandler");
            feature.AddKnownType(@"System.IO.Ports.SerialPinChange,System", @"SerialPinChange");
            feature.AddKnownType(@"System.IO.Ports.SerialPinChangedEventArgs,System", @"SerialPinChangedEventArgs");
            feature.AddKnownType(@"System.IO.Ports.SerialPinChangedEventHandler,System", @"SerialPinChangedEventHandler");
            feature.AddKnownType(@"System.IO.Ports.SerialPort,System", @"SerialPort");
            feature.AddKnownType(@"System.IO.Ports.SerialData,System", @"SerialData");
            feature.AddKnownType(@"System.IO.Ports.SerialDataReceivedEventArgs,System", @"SerialDataReceivedEventArgs");
            feature.AddKnownType(@"System.IO.Ports.SerialDataReceivedEventHandler,System", @"SerialDataReceivedEventHandler");
            feature.AddKnownType(@"System.IO.Ports.SerialStream,System", @"SerialStream");
            feature.AddKnownType(@"System.IO.Ports.StopBits,System", @"StopBits");
            feature.AddKnownType(@"System.IO.Compression.BlockType,System", @"BlockType");
            feature.AddKnownType(@"System.IO.Compression.CompressionMode,System", @"CompressionMode");
            feature.AddKnownType(@"System.IO.Compression.CompressionTracingSwitchLevel,System", @"CompressionTracingSwitchLevel");
            feature.AddKnownType(@"System.IO.Compression.CompressionTracingSwitch,System", @"CompressionTracingSwitch");
            feature.AddKnownType(@"System.Diagnostics.Switch,System", @"Switch");
            feature.AddKnownType(@"System.IO.Compression.CompressionLevel,System", @"CompressionLevel");
            feature.AddKnownType(@"System.IO.Compression.CopyEncoder,System", @"CopyEncoder");
            feature.AddKnownType(@"System.IO.Compression.Crc32Helper,System", @"Crc32Helper");
            feature.AddKnownType(@"System.IO.Compression.DeflateInput,System", @"DeflateInput");
            feature.AddKnownType(@"System.IO.Compression.IDeflater,System", @"IDeflater");
            feature.AddKnownType(@"System.IO.Compression.IInflater,System", @"IInflater");
            feature.AddKnownType(@"System.IO.Compression.DeflaterManaged,System", @"DeflaterManaged");
            feature.AddKnownType(@"System.IO.Compression.DeflaterZLib,System", @"DeflaterZLib");
            feature.AddKnownType(@"System.IO.Compression.InflaterZlib,System", @"InflaterZlib");
            feature.AddKnownType(@"System.IO.Compression.ZLibNative,System", @"ZLibNative");
            feature.AddKnownType(@"System.IO.Compression.ZLibException,System", @"ZLibException");
            feature.AddKnownType(@"System.IO.Compression.DeflateStreamAsyncResult,System", @"DeflateStreamAsyncResult");
            feature.AddKnownType(@"System.IO.Compression.FastEncoder,System", @"FastEncoder");
            feature.AddKnownType(@"System.IO.Compression.FastEncoderStatics,System", @"FastEncoderStatics");
            feature.AddKnownType(@"System.IO.Compression.FastEncoderWindow,System", @"FastEncoderWindow");
            feature.AddKnownType(@"System.IO.Compression.IFileFormatWriter,System", @"IFileFormatWriter");
            feature.AddKnownType(@"System.IO.Compression.IFileFormatReader,System", @"IFileFormatReader");
            feature.AddKnownType(@"System.IO.Compression.GZipDecoder,System", @"GZipDecoder");
            feature.AddKnownType(@"System.IO.Compression.GZipConstants,System", @"GZipConstants");
            feature.AddKnownType(@"System.IO.Compression.GZipFormatter,System", @"GZipFormatter");
            feature.AddKnownType(@"System.IO.Compression.HuffmanTree,System", @"HuffmanTree");
            feature.AddKnownType(@"System.IO.Compression.Inflater,System", @"Inflater");
            feature.AddKnownType(@"System.IO.Compression.InflaterState,System", @"InflaterState");
            feature.AddKnownType(@"System.IO.Compression.InputBuffer,System", @"InputBuffer");
            feature.AddKnownType(@"System.IO.Compression.Match,System", @"Match");
            feature.AddKnownType(@"System.IO.Compression.OutputBuffer,System", @"OutputBuffer");
            feature.AddKnownType(@"System.IO.Compression.OutputWindow,System", @"OutputWindow");
            feature.AddKnownType(@"System.Security.SecureStringMarshal,System", @"SecureStringMarshal");
            feature.AddKnownType(@"System.Security.Claims.DynamicRoleClaimProvider,System", @"DynamicRoleClaimProvider");
            feature.AddKnownType(@"System.Security.Authentication.AuthenticationException,System", @"AuthenticationException");
            feature.AddKnownType(@"System.Security.Authentication.InvalidCredentialException,System", @"InvalidCredentialException");
            feature.AddKnownType(@"System.Security.Authentication.SslProtocols,System", @"SslProtocols");
            feature.AddKnownType(@"System.Security.Authentication.ExchangeAlgorithmType,System", @"ExchangeAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.CipherAlgorithmType,System", @"CipherAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.HashAlgorithmType,System", @"HashAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ChannelBindingKind,System", @"ChannelBindingKind");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System", @"ExtendedProtectionPolicy");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter,System", @"ExtendedProtectionPolicyTypeConverter");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System", @"PolicyEnforcement");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ProtectionScenario,System", @"ProtectionScenario");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ServiceNameCollection,System", @"ServiceNameCollection");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.TokenBindingType,System", @"TokenBindingType");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.TokenBinding,System", @"TokenBinding");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionConfigurationStrings,System", @"ExtendedProtectionConfigurationStrings");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement,System", @"ExtendedProtectionPolicyElement");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection,System", @"ServiceNameElementCollection");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement,System", @"ServiceNameElement");
            feature.AddKnownType(@"System.Security.Cryptography.AsnEncodedData,System", @"AsnEncodedData");
            feature.AddKnownType(@"System.Security.Cryptography.AsnEncodedDataCollection,System", @"AsnEncodedDataCollection");
            feature.AddKnownType(@"System.Security.Cryptography.AsnEncodedDataEnumerator,System", @"AsnEncodedDataEnumerator");
            feature.AddKnownType(@"System.Security.Cryptography.BigInt,System", @"BigInt");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase,System", @"CAPIBase");
            feature.AddKnownType(@"System.Security.Cryptography.CAPINative,System", @"CAPINative");
            feature.AddKnownType(@"System.Security.Cryptography.CAPISafe,System", @"CAPISafe");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIUnsafe,System", @"CAPIUnsafe");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIMethods,System", @"CAPIMethods");
            feature.AddKnownType(@"System.Security.Cryptography.CAPI,System", @"CAPI");
            feature.AddKnownType(@"System.Security.Cryptography.SafeLibraryHandle,System", @"SafeLibraryHandle");
            feature.AddKnownType(@"System.Security.Cryptography.SafeLocalAllocHandle,System", @"SafeLocalAllocHandle");
            feature.AddKnownType(@"System.Security.Cryptography.SafeCryptProvHandle,System", @"SafeCryptProvHandle");
            feature.AddKnownType(@"System.Security.Cryptography.SafeCertContextHandle,System", @"SafeCertContextHandle");
            feature.AddKnownType(@"System.Security.Cryptography.SafeCertStoreHandle,System", @"SafeCertStoreHandle");
            feature.AddKnownType(@"System.Security.Cryptography.SafeCryptMsgHandle,System", @"SafeCryptMsgHandle");
            feature.AddKnownType(@"System.Security.Cryptography.OidGroup,System", @"OidGroup");
            feature.AddKnownType(@"System.Security.Cryptography.Oid,System", @"Oid");
            feature.AddKnownType(@"System.Security.Cryptography.OidCollection,System", @"OidCollection");
            feature.AddKnownType(@"System.Security.Cryptography.OidEnumerator,System", @"OidEnumerator");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags,System", @"X500DistinguishedNameFlags");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X500DistinguishedName,System", @"X500DistinguishedName");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509NameType,System", @"X509NameType");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509IncludeOption,System", @"X509IncludeOption");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.PublicKey,System", @"PublicKey");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509Certificate2,System", @"X509Certificate2");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509FindType,System", @"X509FindType");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System", @"X509Certificate2Collection");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509CertificateCollection,System", @"X509CertificateCollection");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator,System", @"X509Certificate2Enumerator");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509ChainStatusFlags,System", @"X509ChainStatusFlags");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509ChainStatus,System", @"X509ChainStatus");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509Chain,System", @"X509Chain");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509ChainElement,System", @"X509ChainElement");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509ChainElementCollection,System", @"X509ChainElementCollection");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator,System", @"X509ChainElementEnumerator");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509RevocationMode,System", @"X509RevocationMode");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509RevocationFlag,System", @"X509RevocationFlag");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509VerificationFlags,System", @"X509VerificationFlags");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509ChainPolicy,System", @"X509ChainPolicy");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509Extension,System", @"X509Extension");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509KeyUsageFlags,System", @"X509KeyUsageFlags");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension,System", @"X509KeyUsageExtension");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension,System", @"X509BasicConstraintsExtension");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension,System", @"X509EnhancedKeyUsageExtension");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm,System", @"X509SubjectKeyIdentifierHashAlgorithm");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension,System", @"X509SubjectKeyIdentifierExtension");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509ExtensionCollection,System", @"X509ExtensionCollection");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator,System", @"X509ExtensionEnumerator");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.StoreLocation,System", @"StoreLocation");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.OpenFlags,System", @"OpenFlags");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.StoreName,System", @"StoreName");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509Store,System", @"X509Store");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509Utils,System", @"X509Utils");
            feature.AddKnownType(@"System.Security.Permissions.StorePermission,System", @"StorePermission");
            feature.AddKnownType(@"System.Security.Permissions.StorePermissionAttribute,System", @"StorePermissionAttribute");
            feature.AddKnownType(@"System.Security.Permissions.StorePermissionFlags,System", @"StorePermissionFlags");
            feature.AddKnownType(@"System.Security.Permissions.TypeDescriptorPermissionFlags,System", @"TypeDescriptorPermissionFlags");
            feature.AddKnownType(@"System.Security.Permissions.TypeDescriptorPermission,System", @"TypeDescriptorPermission");
            feature.AddKnownType(@"System.Security.Permissions.TypeDescriptorPermissionAttribute,System", @"TypeDescriptorPermissionAttribute");
            feature.AddKnownType(@"System.Security.Permissions.ResourcePermissionBase,System", @"ResourcePermissionBase");
            feature.AddKnownType(@"System.Security.Permissions.ResourcePermissionBaseEntry,System", @"ResourcePermissionBaseEntry");
            feature.AddKnownType(@"System.Security.AccessControl.SemaphoreRights,System", @"SemaphoreRights");
            feature.AddKnownType(@"System.Security.AccessControl.SemaphoreAccessRule,System", @"SemaphoreAccessRule");
            feature.AddKnownType(@"System.Security.AccessControl.SemaphoreAuditRule,System", @"SemaphoreAuditRule");
            feature.AddKnownType(@"System.Security.AccessControl.SemaphoreSecurity,System", @"SemaphoreSecurity");
            feature.AddKnownType(@"System.Diagnostics.AssertSection,System", @"AssertSection");
            feature.AddKnownType(@"System.Diagnostics.AssertWrapper,System", @"AssertWrapper");
            feature.AddKnownType(@"System.Diagnostics.MessageBoxPopup,System", @"MessageBoxPopup");
            feature.AddKnownType(@"System.Diagnostics.BooleanSwitch,System", @"BooleanSwitch");
            feature.AddKnownType(@"System.Diagnostics.ConsoleTraceListener,System", @"ConsoleTraceListener");
            feature.AddKnownType(@"System.Diagnostics.TextWriterTraceListener,System", @"TextWriterTraceListener");
            feature.AddKnownType(@"System.Diagnostics.TraceListener,System", @"TraceListener");
            feature.AddKnownType(@"System.Diagnostics.CorrelationManager,System", @"CorrelationManager");
            feature.AddKnownType(@"System.Diagnostics.Debug,System", @"Debug");
            feature.AddKnownType(@"System.Diagnostics.DefaultTraceListener,System", @"DefaultTraceListener");
            feature.AddKnownType(@"System.Diagnostics.DelimitedListTraceListener,System", @"DelimitedListTraceListener");
            feature.AddKnownType(@"System.Diagnostics.InitState,System", @"InitState");
            feature.AddKnownType(@"System.Diagnostics.DiagnosticsConfiguration,System", @"DiagnosticsConfiguration");
            feature.AddKnownType(@"System.Diagnostics.FilterElement,System", @"FilterElement");
            feature.AddKnownType(@"System.Diagnostics.TypedElement,System", @"TypedElement");
            feature.AddKnownType(@"System.Diagnostics.ListenerElementsCollection,System", @"ListenerElementsCollection");
            feature.AddKnownType(@"System.Diagnostics.SharedListenerElementsCollection,System", @"SharedListenerElementsCollection");
            feature.AddKnownType(@"System.Diagnostics.ListenerElement,System", @"ListenerElement");
            feature.AddKnownType(@"System.Diagnostics.PerfCounterSection,System", @"PerfCounterSection");
            feature.AddKnownType(@"System.Diagnostics.EventTypeFilter,System", @"EventTypeFilter");
            feature.AddKnownType(@"System.Diagnostics.TraceFilter,System", @"TraceFilter");
            feature.AddKnownType(@"System.Diagnostics.SourceElementsCollection,System", @"SourceElementsCollection");
            feature.AddKnownType(@"System.Diagnostics.SourceElement,System", @"SourceElement");
            feature.AddKnownType(@"System.Diagnostics.SourceFilter,System", @"SourceFilter");
            feature.AddKnownType(@"System.Diagnostics.SourceLevels,System", @"SourceLevels");
            feature.AddKnownType(@"System.Diagnostics.SourceSwitch,System", @"SourceSwitch");
            feature.AddKnownType(@"System.Diagnostics.SwitchAttribute,System", @"SwitchAttribute");
            feature.AddKnownType(@"System.Diagnostics.SwitchElementsCollection,System", @"SwitchElementsCollection");
            feature.AddKnownType(@"System.Diagnostics.SwitchElement,System", @"SwitchElement");
            feature.AddKnownType(@"System.Diagnostics.SwitchLevelAttribute,System", @"SwitchLevelAttribute");
            feature.AddKnownType(@"System.Diagnostics.SystemDiagnosticsSection,System", @"SystemDiagnosticsSection");
            feature.AddKnownType(@"System.Diagnostics.Trace,System", @"Trace");
            feature.AddKnownType(@"System.Diagnostics.TraceEventCache,System", @"TraceEventCache");
            feature.AddKnownType(@"System.Diagnostics.TraceEventType,System", @"TraceEventType");
            feature.AddKnownType(@"System.Diagnostics.TraceInternal,System", @"TraceInternal");
            feature.AddKnownType(@"System.Diagnostics.TraceLevel,System", @"TraceLevel");
            feature.AddKnownType(@"System.Diagnostics.TraceListenerCollection,System", @"TraceListenerCollection");
            feature.AddKnownType(@"System.Diagnostics.TraceOptions,System", @"TraceOptions");
            feature.AddKnownType(@"System.Diagnostics.TraceSection,System", @"TraceSection");
            feature.AddKnownType(@"System.Diagnostics.TraceSource,System", @"TraceSource");
            feature.AddKnownType(@"System.Diagnostics.TraceSwitch,System", @"TraceSwitch");
            feature.AddKnownType(@"System.Diagnostics.TraceUtils,System", @"TraceUtils");
            feature.AddKnownType(@"System.Diagnostics.XmlWriterTraceListener,System", @"XmlWriterTraceListener");
            feature.AddKnownType(@"System.Diagnostics.StackFrameExtensions,System", @"StackFrameExtensions");
            feature.AddKnownType(@"System.Diagnostics.AlphabeticalEnumConverter,System", @"AlphabeticalEnumConverter");
            feature.AddKnownType(@"System.ComponentModel.EnumConverter,System", @"EnumConverter");
            feature.AddKnownType(@"System.Diagnostics.UserCallBack,System", @"UserCallBack");
            feature.AddKnownType(@"System.Diagnostics.AsyncStreamReader,System", @"AsyncStreamReader");
            feature.AddKnownType(@"System.Diagnostics.CounterCreationData,System", @"CounterCreationData");
            feature.AddKnownType(@"System.Diagnostics.CounterCreationDataCollection,System", @"CounterCreationDataCollection");
            feature.AddKnownType(@"System.Diagnostics.CounterSample,System", @"CounterSample");
            feature.AddKnownType(@"System.Diagnostics.CounterSampleCalculator,System", @"CounterSampleCalculator");
            feature.AddKnownType(@"System.Diagnostics.DataReceivedEventHandler,System", @"DataReceivedEventHandler");
            feature.AddKnownType(@"System.Diagnostics.DataReceivedEventArgs,System", @"DataReceivedEventArgs");
            feature.AddKnownType(@"System.Diagnostics.DiagnosticsConfigurationHandler,System", @"DiagnosticsConfigurationHandler");
            feature.AddKnownType(@"System.Diagnostics.SwitchesDictionarySectionHandler,System", @"SwitchesDictionarySectionHandler");
            feature.AddKnownType(@"System.Diagnostics.EntryWrittenEventArgs,System", @"EntryWrittenEventArgs");
            feature.AddKnownType(@"System.Diagnostics.EntryWrittenEventHandler,System", @"EntryWrittenEventHandler");
            feature.AddKnownType(@"System.Diagnostics.EventInstance,System", @"EventInstance");
            feature.AddKnownType(@"System.Diagnostics.EventLog,System", @"EventLog");
            feature.AddKnownType(@"System.Diagnostics.EventLogInternal,System", @"EventLogInternal");
            feature.AddKnownType(@"System.Diagnostics.EventLogEntry,System", @"EventLogEntry");
            feature.AddKnownType(@"System.Diagnostics.EventLogEntryCollection,System", @"EventLogEntryCollection");
            feature.AddKnownType(@"System.Diagnostics.EventLogEntryType,System", @"EventLogEntryType");
            feature.AddKnownType(@"System.Diagnostics.EventLogPermission,System", @"EventLogPermission");
            feature.AddKnownType(@"System.Diagnostics.EventLogPermissionAccess,System", @"EventLogPermissionAccess");
            feature.AddKnownType(@"System.Diagnostics.EventLogPermissionAttribute,System", @"EventLogPermissionAttribute");
            feature.AddKnownType(@"System.Diagnostics.EventLogPermissionEntry,System", @"EventLogPermissionEntry");
            feature.AddKnownType(@"System.Diagnostics.EventLogPermissionEntryCollection,System", @"EventLogPermissionEntryCollection");
            feature.AddKnownType(@"System.Diagnostics.EventLogTraceListener,System", @"EventLogTraceListener");
            feature.AddKnownType(@"System.Diagnostics.EventSourceCreationData,System", @"EventSourceCreationData");
            feature.AddKnownType(@"System.Diagnostics.FileVersionInfo,System", @"FileVersionInfo");
            feature.AddKnownType(@"System.Diagnostics.ICollectData,System", @"ICollectData");
            feature.AddKnownType(@"System.Diagnostics.InstanceData,System", @"InstanceData");
            feature.AddKnownType(@"System.Diagnostics.InstanceDataCollection,System", @"InstanceDataCollection");
            feature.AddKnownType(@"System.Diagnostics.InstanceDataCollectionCollection,System", @"InstanceDataCollectionCollection");
            feature.AddKnownType(@"System.Diagnostics.MonitoringDescriptionAttribute,System", @"MonitoringDescriptionAttribute");
            feature.AddKnownType(@"System.Diagnostics.OverflowAction,System", @"OverflowAction");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounter,System", @"PerformanceCounter");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterCategory,System", @"PerformanceCounterCategory");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterCategoryOptions,System", @"PerformanceCounterCategoryOptions");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterCategoryType,System", @"PerformanceCounterCategoryType");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterInstanceLifetime,System", @"PerformanceCounterInstanceLifetime");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterLib,System", @"PerformanceCounterLib");
            feature.AddKnownType(@"System.Diagnostics.PerformanceMonitor,System", @"PerformanceMonitor");
            feature.AddKnownType(@"System.Diagnostics.CategoryEntry,System", @"CategoryEntry");
            feature.AddKnownType(@"System.Diagnostics.CategorySample,System", @"CategorySample");
            feature.AddKnownType(@"System.Diagnostics.CounterDefinitionSample,System", @"CounterDefinitionSample");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterManager,System", @"PerformanceCounterManager");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterPermission,System", @"PerformanceCounterPermission");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterPermissionAccess,System", @"PerformanceCounterPermissionAccess");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterPermissionAttribute,System", @"PerformanceCounterPermissionAttribute");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterPermissionEntry,System", @"PerformanceCounterPermissionEntry");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterPermissionEntryCollection,System", @"PerformanceCounterPermissionEntryCollection");
            feature.AddKnownType(@"System.Diagnostics.PerformanceCounterType,System", @"PerformanceCounterType");
            feature.AddKnownType(@"System.Diagnostics.Process,System", @"Process");
            feature.AddKnownType(@"System.Diagnostics.ProcessInfo,System", @"ProcessInfo");
            feature.AddKnownType(@"System.Diagnostics.ThreadInfo,System", @"ThreadInfo");
            feature.AddKnownType(@"System.Diagnostics.ModuleInfo,System", @"ModuleInfo");
            feature.AddKnownType(@"System.Diagnostics.EnvironmentBlock,System", @"EnvironmentBlock");
            feature.AddKnownType(@"System.Diagnostics.OrdinalCaseInsensitiveComparer,System", @"OrdinalCaseInsensitiveComparer");
            feature.AddKnownType(@"System.Diagnostics.ProcessThreadTimes,System", @"ProcessThreadTimes");
            feature.AddKnownType(@"System.Diagnostics.ShellExecuteHelper,System", @"ShellExecuteHelper");
            feature.AddKnownType(@"System.Diagnostics.MainWindowFinder,System", @"MainWindowFinder");
            feature.AddKnownType(@"System.Diagnostics.ProcessManager,System", @"ProcessManager");
            feature.AddKnownType(@"System.Diagnostics.WinProcessManager,System", @"WinProcessManager");
            feature.AddKnownType(@"System.Diagnostics.NtProcessManager,System", @"NtProcessManager");
            feature.AddKnownType(@"System.Diagnostics.NtProcessInfoHelper,System", @"NtProcessInfoHelper");
            feature.AddKnownType(@"System.Diagnostics.ProcessModule,System", @"ProcessModule");
            feature.AddKnownType(@"System.Diagnostics.ProcessModuleCollection,System", @"ProcessModuleCollection");
            feature.AddKnownType(@"System.Diagnostics.ProcessPriorityClass,System", @"ProcessPriorityClass");
            feature.AddKnownType(@"System.Diagnostics.ProcessStartInfo,System", @"ProcessStartInfo");
            feature.AddKnownType(@"System.Diagnostics.ProcessThread,System", @"ProcessThread");
            feature.AddKnownType(@"System.Diagnostics.ProcessThreadCollection,System", @"ProcessThreadCollection");
            feature.AddKnownType(@"System.Diagnostics.ProcessWaitHandle,System", @"ProcessWaitHandle");
            feature.AddKnownType(@"System.Diagnostics.ProcessWindowStyle,System", @"ProcessWindowStyle");
            feature.AddKnownType(@"System.Diagnostics.SharedPerformanceCounter,System", @"SharedPerformanceCounter");
            feature.AddKnownType(@"System.Diagnostics.ProcessData,System", @"ProcessData");
            feature.AddKnownType(@"System.Diagnostics.SharedUtils,System", @"SharedUtils");
            feature.AddKnownType(@"System.Diagnostics.Stopwatch,System", @"Stopwatch");
            feature.AddKnownType(@"System.Diagnostics.ThreadPriorityLevel,System", @"ThreadPriorityLevel");
            feature.AddKnownType(@"System.Diagnostics.ThreadState,System", @"ThreadState");
            feature.AddKnownType(@"System.Diagnostics.ThreadWaitReason,System", @"ThreadWaitReason");
            feature.AddKnownType(@"System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute,System", @"ExcludeFromCodeCoverageAttribute");
            feature.AddKnownType(@"System.ComponentModel.AddingNewEventArgs,System", @"AddingNewEventArgs");
            feature.AddKnownType(@"System.ComponentModel.AddingNewEventHandler,System", @"AddingNewEventHandler");
            feature.AddKnownType(@"System.ComponentModel.AmbientValueAttribute,System", @"AmbientValueAttribute");
            feature.AddKnownType(@"System.ComponentModel.ArrayConverter,System", @"ArrayConverter");
            feature.AddKnownType(@"System.ComponentModel.CollectionConverter,System", @"CollectionConverter");
            feature.AddKnownType(@"System.ComponentModel.ArraySubsetEnumerator,System", @"ArraySubsetEnumerator");
            feature.AddKnownType(@"System.ComponentModel.AsyncCompletedEventHandler,System", @"AsyncCompletedEventHandler");
            feature.AddKnownType(@"System.ComponentModel.AsyncOperation,System", @"AsyncOperation");
            feature.AddKnownType(@"System.ComponentModel.AsyncOperationManager,System", @"AsyncOperationManager");
            feature.AddKnownType(@"System.ComponentModel.AttributeCollection,System", @"AttributeCollection");
            feature.AddKnownType(@"System.ComponentModel.AttributeProviderAttribute,System", @"AttributeProviderAttribute");
            feature.AddKnownType(@"System.ComponentModel.BackgroundWorker,System", @"BackgroundWorker");
            feature.AddKnownType(@"System.ComponentModel.ComponentEditor,System", @"ComponentEditor");
            feature.AddKnownType(@"System.ComponentModel.BaseNumberConverter,System", @"BaseNumberConverter");
            feature.AddKnownType(@"System.ComponentModel.BindableAttribute,System", @"BindableAttribute");
            feature.AddKnownType(@"System.ComponentModel.BindableSupport,System", @"BindableSupport");
            feature.AddKnownType(@"System.ComponentModel.BindingDirection,System", @"BindingDirection");
            feature.AddKnownType(@"System.ComponentModel.BindingList`1,System", @"BindingList`1'1");
            feature.AddKnownType(@"System.ComponentModel.IBindingList,System", @"IBindingList");
            feature.AddKnownType(@"System.ComponentModel.ICancelAddNew,System", @"ICancelAddNew");
            feature.AddKnownType(@"System.ComponentModel.IRaiseItemChangedEvents,System", @"IRaiseItemChangedEvents");
            feature.AddKnownType(@"System.ComponentModel.BooleanConverter,System", @"BooleanConverter");
            feature.AddKnownType(@"System.ComponentModel.BrowsableAttribute,System", @"BrowsableAttribute");
            feature.AddKnownType(@"System.ComponentModel.ByteConverter,System", @"ByteConverter");
            feature.AddKnownType(@"System.ComponentModel.CancelEventHandler,System", @"CancelEventHandler");
            feature.AddKnownType(@"System.ComponentModel.CharConverter,System", @"CharConverter");
            feature.AddKnownType(@"System.ComponentModel.CollectionChangeAction,System", @"CollectionChangeAction");
            feature.AddKnownType(@"System.ComponentModel.CollectionChangeEventArgs,System", @"CollectionChangeEventArgs");
            feature.AddKnownType(@"System.ComponentModel.CollectionChangeEventHandler,System", @"CollectionChangeEventHandler");
            feature.AddKnownType(@"System.ComponentModel.ComplexBindingPropertiesAttribute,System", @"ComplexBindingPropertiesAttribute");
            feature.AddKnownType(@"System.ComponentModel.CompModSwitches,System", @"CompModSwitches");
            feature.AddKnownType(@"System.ComponentModel.ComponentCollection,System", @"ComponentCollection");
            feature.AddKnownType(@"System.ComponentModel.ComponentConverter,System", @"ComponentConverter");
            feature.AddKnownType(@"System.ComponentModel.ReferenceConverter,System", @"ReferenceConverter");
            feature.AddKnownType(@"System.ComponentModel.ComponentResourceManager,System", @"ComponentResourceManager");
            feature.AddKnownType(@"System.ComponentModel.Container,System", @"Container");
            feature.AddKnownType(@"System.ComponentModel.IContainer,System", @"IContainer");
            feature.AddKnownType(@"System.ComponentModel.ContainerFilterService,System", @"ContainerFilterService");
            feature.AddKnownType(@"System.ComponentModel.CultureInfoConverter,System", @"CultureInfoConverter");
            feature.AddKnownType(@"System.ComponentModel.CustomTypeDescriptor,System", @"CustomTypeDescriptor");
            feature.AddKnownType(@"System.ComponentModel.ICustomTypeDescriptor,System", @"ICustomTypeDescriptor");
            feature.AddKnownType(@"System.ComponentModel.DataErrorsChangedEventArgs,System", @"DataErrorsChangedEventArgs");
            feature.AddKnownType(@"System.ComponentModel.DataObjectAttribute,System", @"DataObjectAttribute");
            feature.AddKnownType(@"System.ComponentModel.DataObjectFieldAttribute,System", @"DataObjectFieldAttribute");
            feature.AddKnownType(@"System.ComponentModel.DataObjectMethodAttribute,System", @"DataObjectMethodAttribute");
            feature.AddKnownType(@"System.ComponentModel.DataObjectMethodType,System", @"DataObjectMethodType");
            feature.AddKnownType(@"System.ComponentModel.DateTimeConverter,System", @"DateTimeConverter");
            feature.AddKnownType(@"System.ComponentModel.DateTimeOffsetConverter,System", @"DateTimeOffsetConverter");
            feature.AddKnownType(@"System.ComponentModel.DecimalConverter,System", @"DecimalConverter");
            feature.AddKnownType(@"System.ComponentModel.DefaultBindingPropertyAttribute,System", @"DefaultBindingPropertyAttribute");
            feature.AddKnownType(@"System.ComponentModel.DefaultEventAttribute,System", @"DefaultEventAttribute");
            feature.AddKnownType(@"System.ComponentModel.DefaultPropertyAttribute,System", @"DefaultPropertyAttribute");
            feature.AddKnownType(@"System.ComponentModel.DefaultValueAttribute,System", @"DefaultValueAttribute");
            feature.AddKnownType(@"System.ComponentModel.DelegatingTypeDescriptionProvider,System", @"DelegatingTypeDescriptionProvider");
            feature.AddKnownType(@"System.ComponentModel.TypeDescriptionProvider,System", @"TypeDescriptionProvider");
            feature.AddKnownType(@"System.ComponentModel.DesignerAttribute,System", @"DesignerAttribute");
            feature.AddKnownType(@"System.ComponentModel.DesignerCategoryAttribute,System", @"DesignerCategoryAttribute");
            feature.AddKnownType(@"System.ComponentModel.DesignerSerializationVisibility,System", @"DesignerSerializationVisibility");
            feature.AddKnownType(@"System.ComponentModel.DesignerSerializationVisibilityAttribute,System", @"DesignerSerializationVisibilityAttribute");
            feature.AddKnownType(@"System.ComponentModel.DesignOnlyAttribute,System", @"DesignOnlyAttribute");
            feature.AddKnownType(@"System.ComponentModel.DesignTimeVisibleAttribute,System", @"DesignTimeVisibleAttribute");
            feature.AddKnownType(@"System.ComponentModel.DisplayNameAttribute,System", @"DisplayNameAttribute");
            feature.AddKnownType(@"System.ComponentModel.DoubleConverter,System", @"DoubleConverter");
            feature.AddKnownType(@"System.ComponentModel.DoWorkEventArgs,System", @"DoWorkEventArgs");
            feature.AddKnownType(@"System.ComponentModel.DoWorkEventHandler,System", @"DoWorkEventHandler");
            feature.AddKnownType(@"System.ComponentModel.EditorAttribute,System", @"EditorAttribute");
            feature.AddKnownType(@"System.ComponentModel.EditorBrowsableAttribute,System", @"EditorBrowsableAttribute");
            feature.AddKnownType(@"System.ComponentModel.EditorBrowsableState,System", @"EditorBrowsableState");
            feature.AddKnownType(@"System.ComponentModel.EventDescriptor,System", @"EventDescriptor");
            feature.AddKnownType(@"System.ComponentModel.MemberDescriptor,System", @"MemberDescriptor");
            feature.AddKnownType(@"System.ComponentModel.EventDescriptorCollection,System", @"EventDescriptorCollection");
            feature.AddKnownType(@"System.ComponentModel.EventHandlerList,System", @"EventHandlerList");
            feature.AddKnownType(@"System.ComponentModel.ExpandableObjectConverter,System", @"ExpandableObjectConverter");
            feature.AddKnownType(@"System.ComponentModel.ExtendedPropertyDescriptor,System", @"ExtendedPropertyDescriptor");
            feature.AddKnownType(@"System.ComponentModel.PropertyDescriptor,System", @"PropertyDescriptor");
            feature.AddKnownType(@"System.ComponentModel.ExtenderProvidedPropertyAttribute,System", @"ExtenderProvidedPropertyAttribute");
            feature.AddKnownType(@"System.ComponentModel.GuidConverter,System", @"GuidConverter");
            feature.AddKnownType(@"System.ComponentModel.HandledEventArgs,System", @"HandledEventArgs");
            feature.AddKnownType(@"System.ComponentModel.HandledEventHandler,System", @"HandledEventHandler");
            feature.AddKnownType(@"System.ComponentModel.IBindingListView,System", @"IBindingListView");
            feature.AddKnownType(@"System.ComponentModel.IChangeTracking,System", @"IChangeTracking");
            feature.AddKnownType(@"System.ComponentModel.IComNativeDescriptorHandler,System", @"IComNativeDescriptorHandler");
            feature.AddKnownType(@"System.ComponentModel.IDataErrorInfo,System", @"IDataErrorInfo");
            feature.AddKnownType(@"System.ComponentModel.IEditableObject,System", @"IEditableObject");
            feature.AddKnownType(@"System.ComponentModel.IExtenderProvider,System", @"IExtenderProvider");
            feature.AddKnownType(@"System.ComponentModel.IIntellisenseBuilder,System", @"IIntellisenseBuilder");
            feature.AddKnownType(@"System.ComponentModel.IListSource,System", @"IListSource");
            feature.AddKnownType(@"System.ComponentModel.ImmutableObjectAttribute,System", @"ImmutableObjectAttribute");
            feature.AddKnownType(@"System.ComponentModel.INestedContainer,System", @"INestedContainer");
            feature.AddKnownType(@"System.ComponentModel.INestedSite,System", @"INestedSite");
            feature.AddKnownType(@"System.ComponentModel.ISite,System", @"ISite");
            feature.AddKnownType(@"System.ComponentModel.InitializationEventAttribute,System", @"InitializationEventAttribute");
            feature.AddKnownType(@"System.ComponentModel.INotifyDataErrorInfo,System", @"INotifyDataErrorInfo");
            feature.AddKnownType(@"System.ComponentModel.INotifyPropertyChanging,System", @"INotifyPropertyChanging");
            feature.AddKnownType(@"System.ComponentModel.InstallerTypeAttribute,System", @"InstallerTypeAttribute");
            feature.AddKnownType(@"System.ComponentModel.InstanceCreationEditor,System", @"InstanceCreationEditor");
            feature.AddKnownType(@"System.ComponentModel.Int16Converter,System", @"Int16Converter");
            feature.AddKnownType(@"System.ComponentModel.Int32Converter,System", @"Int32Converter");
            feature.AddKnownType(@"System.ComponentModel.Int64Converter,System", @"Int64Converter");
            feature.AddKnownType(@"System.ComponentModel.IntSecurity,System", @"IntSecurity");
            feature.AddKnownType(@"System.ComponentModel.InvalidAsynchronousStateException,System", @"InvalidAsynchronousStateException");
            feature.AddKnownType(@"System.ComponentModel.InvalidEnumArgumentException,System", @"InvalidEnumArgumentException");
            feature.AddKnownType(@"System.ComponentModel.IRevertibleChangeTracking,System", @"IRevertibleChangeTracking");
            feature.AddKnownType(@"System.ComponentModel.ISupportInitializeNotification,System", @"ISupportInitializeNotification");
            feature.AddKnownType(@"System.ComponentModel.ISynchronizeInvoke,System", @"ISynchronizeInvoke");
            feature.AddKnownType(@"System.ComponentModel.ITypeDescriptorContext,System", @"ITypeDescriptorContext");
            feature.AddKnownType(@"System.ComponentModel.ITypedList,System", @"ITypedList");
            feature.AddKnownType(@"System.ComponentModel.License,System", @"License");
            feature.AddKnownType(@"System.ComponentModel.LicenseContext,System", @"LicenseContext");
            feature.AddKnownType(@"System.ComponentModel.LicenseException,System", @"LicenseException");
            feature.AddKnownType(@"System.ComponentModel.LicenseManager,System", @"LicenseManager");
            feature.AddKnownType(@"System.ComponentModel.LicenseProvider,System", @"LicenseProvider");
            feature.AddKnownType(@"System.ComponentModel.LicenseProviderAttribute,System", @"LicenseProviderAttribute");
            feature.AddKnownType(@"System.ComponentModel.LicenseUsageMode,System", @"LicenseUsageMode");
            feature.AddKnownType(@"System.ComponentModel.LicFileLicenseProvider,System", @"LicFileLicenseProvider");
            feature.AddKnownType(@"System.ComponentModel.ListBindableAttribute,System", @"ListBindableAttribute");
            feature.AddKnownType(@"System.ComponentModel.ListChangedEventArgs,System", @"ListChangedEventArgs");
            feature.AddKnownType(@"System.ComponentModel.ListChangedEventHandler,System", @"ListChangedEventHandler");
            feature.AddKnownType(@"System.ComponentModel.ListChangedType,System", @"ListChangedType");
            feature.AddKnownType(@"System.ComponentModel.ListSortDescription,System", @"ListSortDescription");
            feature.AddKnownType(@"System.ComponentModel.ListSortDescriptionCollection,System", @"ListSortDescriptionCollection");
            feature.AddKnownType(@"System.ComponentModel.ListSortDirection,System", @"ListSortDirection");
            feature.AddKnownType(@"System.ComponentModel.LocalizableAttribute,System", @"LocalizableAttribute");
            feature.AddKnownType(@"System.ComponentModel.LookupBindingPropertiesAttribute,System", @"LookupBindingPropertiesAttribute");
            feature.AddKnownType(@"System.ComponentModel.MarshalByValueComponent,System", @"MarshalByValueComponent");
            feature.AddKnownType(@"System.ComponentModel.MaskedTextProvider,System", @"MaskedTextProvider");
            feature.AddKnownType(@"System.ComponentModel.MaskedTextResultHint,System", @"MaskedTextResultHint");
            feature.AddKnownType(@"System.ComponentModel.MergablePropertyAttribute,System", @"MergablePropertyAttribute");
            feature.AddKnownType(@"System.ComponentModel.MultilineStringConverter,System", @"MultilineStringConverter");
            feature.AddKnownType(@"System.ComponentModel.NestedContainer,System", @"NestedContainer");
            feature.AddKnownType(@"System.ComponentModel.NullableConverter,System", @"NullableConverter");
            feature.AddKnownType(@"System.ComponentModel.PasswordPropertyTextAttribute,System", @"PasswordPropertyTextAttribute");
            feature.AddKnownType(@"System.ComponentModel.ProgressChangedEventHandler,System", @"ProgressChangedEventHandler");
            feature.AddKnownType(@"System.ComponentModel.PropertyChangedEventArgs,System", @"PropertyChangedEventArgs");
            feature.AddKnownType(@"System.ComponentModel.PropertyChangedEventHandler,System", @"PropertyChangedEventHandler");
            feature.AddKnownType(@"System.ComponentModel.PropertyChangingEventArgs,System", @"PropertyChangingEventArgs");
            feature.AddKnownType(@"System.ComponentModel.PropertyChangingEventHandler,System", @"PropertyChangingEventHandler");
            feature.AddKnownType(@"System.ComponentModel.PropertyDescriptorCollection,System", @"PropertyDescriptorCollection");
            feature.AddKnownType(@"System.ComponentModel.ProvidePropertyAttribute,System", @"ProvidePropertyAttribute");
            feature.AddKnownType(@"System.ComponentModel.ReadOnlyAttribute,System", @"ReadOnlyAttribute");
            feature.AddKnownType(@"System.ComponentModel.RecommendedAsConfigurableAttribute,System", @"RecommendedAsConfigurableAttribute");
            feature.AddKnownType(@"System.ComponentModel.ReflectEventDescriptor,System", @"ReflectEventDescriptor");
            feature.AddKnownType(@"System.ComponentModel.ReflectPropertyDescriptor,System", @"ReflectPropertyDescriptor");
            feature.AddKnownType(@"System.ComponentModel.ReflectTypeDescriptionProvider,System", @"ReflectTypeDescriptionProvider");
            feature.AddKnownType(@"System.ComponentModel.RefreshEventArgs,System", @"RefreshEventArgs");
            feature.AddKnownType(@"System.ComponentModel.RefreshEventHandler,System", @"RefreshEventHandler");
            feature.AddKnownType(@"System.ComponentModel.RunInstallerAttribute,System", @"RunInstallerAttribute");
            feature.AddKnownType(@"System.ComponentModel.RunWorkerCompletedEventArgs,System", @"RunWorkerCompletedEventArgs");
            feature.AddKnownType(@"System.ComponentModel.RunWorkerCompletedEventHandler,System", @"RunWorkerCompletedEventHandler");
            feature.AddKnownType(@"System.ComponentModel.SByteConverter,System", @"SByteConverter");
            feature.AddKnownType(@"System.ComponentModel.SettingsBindableAttribute,System", @"SettingsBindableAttribute");
            feature.AddKnownType(@"System.ComponentModel.SingleConverter,System", @"SingleConverter");
            feature.AddKnownType(@"System.ComponentModel.StringConverter,System", @"StringConverter");
            feature.AddKnownType(@"System.ComponentModel.SyntaxCheck,System", @"SyntaxCheck");
            feature.AddKnownType(@"System.ComponentModel.TimeSpanConverter,System", @"TimeSpanConverter");
            feature.AddKnownType(@"System.ComponentModel.ToolboxItemFilterAttribute,System", @"ToolboxItemFilterAttribute");
            feature.AddKnownType(@"System.ComponentModel.ToolboxItemFilterType,System", @"ToolboxItemFilterType");
            feature.AddKnownType(@"System.ComponentModel.TypeConverterAttribute,System", @"TypeConverterAttribute");
            feature.AddKnownType(@"System.ComponentModel.TypeDescriptionProviderAttribute,System", @"TypeDescriptionProviderAttribute");
            feature.AddKnownType(@"System.ComponentModel.TypeDescriptor,System", @"TypeDescriptor");
            feature.AddKnownType(@"System.ComponentModel.TypeListConverter,System", @"TypeListConverter");
            feature.AddKnownType(@"System.ComponentModel.UInt16Converter,System", @"UInt16Converter");
            feature.AddKnownType(@"System.ComponentModel.UInt32Converter,System", @"UInt32Converter");
            feature.AddKnownType(@"System.ComponentModel.UInt64Converter,System", @"UInt64Converter");
            feature.AddKnownType(@"System.ComponentModel.WarningException,System", @"WarningException");
            feature.AddKnownType(@"System.ComponentModel.InheritanceAttribute,System", @"InheritanceAttribute");
            feature.AddKnownType(@"System.ComponentModel.InheritanceLevel,System", @"InheritanceLevel");
            feature.AddKnownType(@"System.ComponentModel.NotifyParentPropertyAttribute,System", @"NotifyParentPropertyAttribute");
            feature.AddKnownType(@"System.ComponentModel.ParenthesizePropertyNameAttribute,System", @"ParenthesizePropertyNameAttribute");
            feature.AddKnownType(@"System.ComponentModel.PropertyTabAttribute,System", @"PropertyTabAttribute");
            feature.AddKnownType(@"System.ComponentModel.PropertyTabScope,System", @"PropertyTabScope");
            feature.AddKnownType(@"System.ComponentModel.RefreshProperties,System", @"RefreshProperties");
            feature.AddKnownType(@"System.ComponentModel.RefreshPropertiesAttribute,System", @"RefreshPropertiesAttribute");
            feature.AddKnownType(@"System.ComponentModel.ToolboxItemAttribute,System", @"ToolboxItemAttribute");
            feature.AddKnownType(@"System.ComponentModel.WeakHashtable,System", @"WeakHashtable");
            feature.AddKnownType(@"System.ComponentModel.Design.TypeDescriptionProviderService,System", @"TypeDescriptionProviderService");
            feature.AddKnownType(@"System.ComponentModel.Design.ActiveDesignerEventArgs,System", @"ActiveDesignerEventArgs");
            feature.AddKnownType(@"System.ComponentModel.Design.ActiveDesignerEventHandler,System", @"ActiveDesignerEventHandler");
            feature.AddKnownType(@"System.ComponentModel.Design.CheckoutException,System", @"CheckoutException");
            feature.AddKnownType(@"System.ComponentModel.Design.CommandID,System", @"CommandID");
            feature.AddKnownType(@"System.ComponentModel.Design.ComponentChangedEventArgs,System", @"ComponentChangedEventArgs");
            feature.AddKnownType(@"System.ComponentModel.Design.ComponentChangedEventHandler,System", @"ComponentChangedEventHandler");
            feature.AddKnownType(@"System.ComponentModel.Design.ComponentChangingEventArgs,System", @"ComponentChangingEventArgs");
            feature.AddKnownType(@"System.ComponentModel.Design.ComponentChangingEventHandler,System", @"ComponentChangingEventHandler");
            feature.AddKnownType(@"System.ComponentModel.Design.ComponentEventArgs,System", @"ComponentEventArgs");
            feature.AddKnownType(@"System.ComponentModel.Design.ComponentEventHandler,System", @"ComponentEventHandler");
            feature.AddKnownType(@"System.ComponentModel.Design.ComponentRenameEventArgs,System", @"ComponentRenameEventArgs");
            feature.AddKnownType(@"System.ComponentModel.Design.ComponentRenameEventHandler,System", @"ComponentRenameEventHandler");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerOptionService,System", @"DesignerOptionService");
            feature.AddKnownType(@"System.ComponentModel.Design.IDesignerOptionService,System", @"IDesignerOptionService");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerTransaction,System", @"DesignerTransaction");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerTransactionCloseEventArgs,System", @"DesignerTransactionCloseEventArgs");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerTransactionCloseEventHandler,System", @"DesignerTransactionCloseEventHandler");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerVerb,System", @"DesignerVerb");
            feature.AddKnownType(@"System.ComponentModel.Design.MenuCommand,System", @"MenuCommand");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerVerbCollection,System", @"DesignerVerbCollection");
            feature.AddKnownType(@"System.ComponentModel.Design.DesigntimeLicenseContext,System", @"DesigntimeLicenseContext");
            feature.AddKnownType(@"System.ComponentModel.Design.RuntimeLicenseContext,System", @"RuntimeLicenseContext");
            feature.AddKnownType(@"System.ComponentModel.Design.DesigntimeLicenseContextSerializer,System", @"DesigntimeLicenseContextSerializer");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerCollection,System", @"DesignerCollection");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerEventArgs,System", @"DesignerEventArgs");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerEventHandler,System", @"DesignerEventHandler");
            feature.AddKnownType(@"System.ComponentModel.Design.HelpContextType,System", @"HelpContextType");
            feature.AddKnownType(@"System.ComponentModel.Design.HelpKeywordAttribute,System", @"HelpKeywordAttribute");
            feature.AddKnownType(@"System.ComponentModel.Design.HelpKeywordType,System", @"HelpKeywordType");
            feature.AddKnownType(@"System.ComponentModel.Design.IComponentChangeService,System", @"IComponentChangeService");
            feature.AddKnownType(@"System.ComponentModel.Design.IComponentDiscoveryService,System", @"IComponentDiscoveryService");
            feature.AddKnownType(@"System.ComponentModel.Design.IComponentInitializer,System", @"IComponentInitializer");
            feature.AddKnownType(@"System.ComponentModel.Design.IDesigner,System", @"IDesigner");
            feature.AddKnownType(@"System.ComponentModel.Design.IDesignerEventService,System", @"IDesignerEventService");
            feature.AddKnownType(@"System.ComponentModel.Design.IDesignerFilter,System", @"IDesignerFilter");
            feature.AddKnownType(@"System.ComponentModel.Design.IDesignerHost,System", @"IDesignerHost");
            feature.AddKnownType(@"System.ComponentModel.Design.IServiceContainer,System", @"IServiceContainer");
            feature.AddKnownType(@"System.ComponentModel.Design.IDesignerHostTransactionState,System", @"IDesignerHostTransactionState");
            feature.AddKnownType(@"System.ComponentModel.Design.IDictionaryService,System", @"IDictionaryService");
            feature.AddKnownType(@"System.ComponentModel.Design.IEventBindingService,System", @"IEventBindingService");
            feature.AddKnownType(@"System.ComponentModel.Design.IExtenderListService,System", @"IExtenderListService");
            feature.AddKnownType(@"System.ComponentModel.Design.IExtenderProviderService,System", @"IExtenderProviderService");
            feature.AddKnownType(@"System.ComponentModel.Design.IHelpService,System", @"IHelpService");
            feature.AddKnownType(@"System.ComponentModel.Design.IInheritanceService,System", @"IInheritanceService");
            feature.AddKnownType(@"System.ComponentModel.Design.IMenuCommandService,System", @"IMenuCommandService");
            feature.AddKnownType(@"System.ComponentModel.Design.IReferenceService,System", @"IReferenceService");
            feature.AddKnownType(@"System.ComponentModel.Design.IResourceService,System", @"IResourceService");
            feature.AddKnownType(@"System.ComponentModel.Design.IRootDesigner,System", @"IRootDesigner");
            feature.AddKnownType(@"System.ComponentModel.Design.ISelectionService,System", @"ISelectionService");
            feature.AddKnownType(@"System.ComponentModel.Design.ITreeDesigner,System", @"ITreeDesigner");
            feature.AddKnownType(@"System.ComponentModel.Design.ITypeDescriptorFilterService,System", @"ITypeDescriptorFilterService");
            feature.AddKnownType(@"System.ComponentModel.Design.ITypeDiscoveryService,System", @"ITypeDiscoveryService");
            feature.AddKnownType(@"System.ComponentModel.Design.ITypeResolutionService,System", @"ITypeResolutionService");
            feature.AddKnownType(@"System.ComponentModel.Design.SelectionTypes,System", @"SelectionTypes");
            feature.AddKnownType(@"System.ComponentModel.Design.ServiceCreatorCallback,System", @"ServiceCreatorCallback");
            feature.AddKnownType(@"System.ComponentModel.Design.ServiceContainer,System", @"ServiceContainer");
            feature.AddKnownType(@"System.ComponentModel.Design.StandardCommands,System", @"StandardCommands");
            feature.AddKnownType(@"System.ComponentModel.Design.StandardToolWindows,System", @"StandardToolWindows");
            feature.AddKnownType(@"System.ComponentModel.Design.ViewTechnology,System", @"ViewTechnology");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.ComponentSerializationService,System", @"ComponentSerializationService");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.ContextStack,System", @"ContextStack");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute,System", @"DefaultSerializationProviderAttribute");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.DesignerLoader,System", @"DesignerLoader");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.DesignerSerializerAttribute,System", @"DesignerSerializerAttribute");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.IDesignerLoaderHost,System", @"IDesignerLoaderHost");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.IDesignerLoaderHost2,System", @"IDesignerLoaderHost2");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.IDesignerLoaderService,System", @"IDesignerLoaderService");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System", @"IDesignerSerializationManager");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.IDesignerSerializationProvider,System", @"IDesignerSerializationProvider");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.IDesignerSerializationService,System", @"IDesignerSerializationService");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.INameCreationService,System", @"INameCreationService");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.InstanceDescriptor,System", @"InstanceDescriptor");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.MemberRelationshipService,System", @"MemberRelationshipService");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.MemberRelationship,System", @"MemberRelationship");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.ResolveNameEventArgs,System", @"ResolveNameEventArgs");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.ResolveNameEventHandler,System", @"ResolveNameEventHandler");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute,System", @"RootDesignerSerializerAttribute");
            feature.AddKnownType(@"System.ComponentModel.Design.Serialization.SerializationStore,System", @"SerializationStore");
            feature.AddKnownType(@"System.CodeDom.CodeArgumentReferenceExpression,System", @"CodeArgumentReferenceExpression");
            feature.AddKnownType(@"System.CodeDom.CodeExpression,System", @"CodeExpression");
            feature.AddKnownType(@"System.CodeDom.CodeObject,System", @"CodeObject");
            feature.AddKnownType(@"System.CodeDom.CodeArrayCreateExpression,System", @"CodeArrayCreateExpression");
            feature.AddKnownType(@"System.CodeDom.CodeArrayIndexerExpression,System", @"CodeArrayIndexerExpression");
            feature.AddKnownType(@"System.CodeDom.CodeAssignStatement,System", @"CodeAssignStatement");
            feature.AddKnownType(@"System.CodeDom.CodeStatement,System", @"CodeStatement");
            feature.AddKnownType(@"System.CodeDom.CodeAttachEventStatement,System", @"CodeAttachEventStatement");
            feature.AddKnownType(@"System.CodeDom.CodeAttributeArgument,System", @"CodeAttributeArgument");
            feature.AddKnownType(@"System.CodeDom.CodeAttributeArgumentCollection,System", @"CodeAttributeArgumentCollection");
            feature.AddKnownType(@"System.CodeDom.CodeAttributeDeclaration,System", @"CodeAttributeDeclaration");
            feature.AddKnownType(@"System.CodeDom.CodeAttributeDeclarationCollection,System", @"CodeAttributeDeclarationCollection");
            feature.AddKnownType(@"System.CodeDom.CodeBaseReferenceExpression,System", @"CodeBaseReferenceExpression");
            feature.AddKnownType(@"System.CodeDom.CodeBinaryOperatorExpression,System", @"CodeBinaryOperatorExpression");
            feature.AddKnownType(@"System.CodeDom.CodeBinaryOperatorType,System", @"CodeBinaryOperatorType");
            feature.AddKnownType(@"System.CodeDom.CodeCastExpression,System", @"CodeCastExpression");
            feature.AddKnownType(@"System.CodeDom.CodeCatchClause,System", @"CodeCatchClause");
            feature.AddKnownType(@"System.CodeDom.CodeCatchClauseCollection,System", @"CodeCatchClauseCollection");
            feature.AddKnownType(@"System.CodeDom.CodeChecksumPragma,System", @"CodeChecksumPragma");
            feature.AddKnownType(@"System.CodeDom.CodeDirective,System", @"CodeDirective");
            feature.AddKnownType(@"System.CodeDom.CodeComment,System", @"CodeComment");
            feature.AddKnownType(@"System.CodeDom.CodeCommentStatement,System", @"CodeCommentStatement");
            feature.AddKnownType(@"System.CodeDom.CodeCommentStatementCollection,System", @"CodeCommentStatementCollection");
            feature.AddKnownType(@"System.CodeDom.CodeCompileUnit,System", @"CodeCompileUnit");
            feature.AddKnownType(@"System.CodeDom.CodeConditionStatement,System", @"CodeConditionStatement");
            feature.AddKnownType(@"System.CodeDom.CodeConstructor,System", @"CodeConstructor");
            feature.AddKnownType(@"System.CodeDom.CodeMemberMethod,System", @"CodeMemberMethod");
            feature.AddKnownType(@"System.CodeDom.CodeTypeMember,System", @"CodeTypeMember");
            feature.AddKnownType(@"System.CodeDom.CodeDefaultValueExpression,System", @"CodeDefaultValueExpression");
            feature.AddKnownType(@"System.CodeDom.CodeDelegateCreateExpression,System", @"CodeDelegateCreateExpression");
            feature.AddKnownType(@"System.CodeDom.CodeDelegateInvokeExpression,System", @"CodeDelegateInvokeExpression");
            feature.AddKnownType(@"System.CodeDom.CodeDirectionExpression,System", @"CodeDirectionExpression");
            feature.AddKnownType(@"System.CodeDom.CodeDirectiveCollection,System", @"CodeDirectiveCollection");
            feature.AddKnownType(@"System.CodeDom.CodeEntryPointMethod,System", @"CodeEntryPointMethod");
            feature.AddKnownType(@"System.CodeDom.CodeEventReferenceExpression,System", @"CodeEventReferenceExpression");
            feature.AddKnownType(@"System.CodeDom.CodeExpressionCollection,System", @"CodeExpressionCollection");
            feature.AddKnownType(@"System.CodeDom.CodeExpressionStatement,System", @"CodeExpressionStatement");
            feature.AddKnownType(@"System.CodeDom.CodeFieldReferenceExpression,System", @"CodeFieldReferenceExpression");
            feature.AddKnownType(@"System.CodeDom.CodeGotoStatement,System", @"CodeGotoStatement");
            feature.AddKnownType(@"System.CodeDom.CodeIndexerExpression,System", @"CodeIndexerExpression");
            feature.AddKnownType(@"System.CodeDom.CodeIterationStatement,System", @"CodeIterationStatement");
            feature.AddKnownType(@"System.CodeDom.CodeLabeledStatement,System", @"CodeLabeledStatement");
            feature.AddKnownType(@"System.CodeDom.CodeLinePragma,System", @"CodeLinePragma");
            feature.AddKnownType(@"System.CodeDom.CodeMemberEvent,System", @"CodeMemberEvent");
            feature.AddKnownType(@"System.CodeDom.CodeMemberField,System", @"CodeMemberField");
            feature.AddKnownType(@"System.CodeDom.CodeMemberProperty,System", @"CodeMemberProperty");
            feature.AddKnownType(@"System.CodeDom.CodeMethodInvokeExpression,System", @"CodeMethodInvokeExpression");
            feature.AddKnownType(@"System.CodeDom.CodeMethodReferenceExpression,System", @"CodeMethodReferenceExpression");
            feature.AddKnownType(@"System.CodeDom.CodeMethodReturnStatement,System", @"CodeMethodReturnStatement");
            feature.AddKnownType(@"System.CodeDom.CodeNamespace,System", @"CodeNamespace");
            feature.AddKnownType(@"System.CodeDom.CodeNamespaceCollection,System", @"CodeNamespaceCollection");
            feature.AddKnownType(@"System.CodeDom.CodeNamespaceImport,System", @"CodeNamespaceImport");
            feature.AddKnownType(@"System.CodeDom.CodeNamespaceImportCollection,System", @"CodeNamespaceImportCollection");
            feature.AddKnownType(@"System.CodeDom.CodeObjectCreateExpression,System", @"CodeObjectCreateExpression");
            feature.AddKnownType(@"System.CodeDom.CodeParameterDeclarationExpression,System", @"CodeParameterDeclarationExpression");
            feature.AddKnownType(@"System.CodeDom.CodeParameterDeclarationExpressionCollection,System", @"CodeParameterDeclarationExpressionCollection");
            feature.AddKnownType(@"System.CodeDom.CodePrimitiveExpression,System", @"CodePrimitiveExpression");
            feature.AddKnownType(@"System.CodeDom.CodePropertyReferenceExpression,System", @"CodePropertyReferenceExpression");
            feature.AddKnownType(@"System.CodeDom.CodePropertySetValueReferenceExpression,System", @"CodePropertySetValueReferenceExpression");
            feature.AddKnownType(@"System.CodeDom.CodeRegionDirective,System", @"CodeRegionDirective");
            feature.AddKnownType(@"System.CodeDom.CodeRegionMode,System", @"CodeRegionMode");
            feature.AddKnownType(@"System.CodeDom.CodeRemoveEventStatement,System", @"CodeRemoveEventStatement");
            feature.AddKnownType(@"System.CodeDom.CodeSnippetCompileUnit,System", @"CodeSnippetCompileUnit");
            feature.AddKnownType(@"System.CodeDom.CodeSnippetExpression,System", @"CodeSnippetExpression");
            feature.AddKnownType(@"System.CodeDom.CodeSnippetStatement,System", @"CodeSnippetStatement");
            feature.AddKnownType(@"System.CodeDom.CodeSnippetTypeMember,System", @"CodeSnippetTypeMember");
            feature.AddKnownType(@"System.CodeDom.CodeStatementCollection,System", @"CodeStatementCollection");
            feature.AddKnownType(@"System.CodeDom.CodeThisReferenceExpression,System", @"CodeThisReferenceExpression");
            feature.AddKnownType(@"System.CodeDom.CodeThrowExceptionStatement,System", @"CodeThrowExceptionStatement");
            feature.AddKnownType(@"System.CodeDom.CodeTryCatchFinallyStatement,System", @"CodeTryCatchFinallyStatement");
            feature.AddKnownType(@"System.CodeDom.CodeTypeConstructor,System", @"CodeTypeConstructor");
            feature.AddKnownType(@"System.CodeDom.CodeTypeDeclaration,System", @"CodeTypeDeclaration");
            feature.AddKnownType(@"System.CodeDom.CodeTypeDeclarationCollection,System", @"CodeTypeDeclarationCollection");
            feature.AddKnownType(@"System.CodeDom.CodeTypeDelegate,System", @"CodeTypeDelegate");
            feature.AddKnownType(@"System.CodeDom.CodeTypeMemberCollection,System", @"CodeTypeMemberCollection");
            feature.AddKnownType(@"System.CodeDom.CodeTypeOfExpression,System", @"CodeTypeOfExpression");
            feature.AddKnownType(@"System.CodeDom.CodeTypeParameter,System", @"CodeTypeParameter");
            feature.AddKnownType(@"System.CodeDom.CodeTypeParameterCollection,System", @"CodeTypeParameterCollection");
            feature.AddKnownType(@"System.CodeDom.CodeTypeReferenceOptions,System", @"CodeTypeReferenceOptions");
            feature.AddKnownType(@"System.CodeDom.CodeTypeReference,System", @"CodeTypeReference");
            feature.AddKnownType(@"System.CodeDom.CodeTypeReferenceCollection,System", @"CodeTypeReferenceCollection");
            feature.AddKnownType(@"System.CodeDom.CodeTypeReferenceExpression,System", @"CodeTypeReferenceExpression");
            feature.AddKnownType(@"System.CodeDom.CodeVariableDeclarationStatement,System", @"CodeVariableDeclarationStatement");
            feature.AddKnownType(@"System.CodeDom.CodeVariableReferenceExpression,System", @"CodeVariableReferenceExpression");
            feature.AddKnownType(@"System.CodeDom.FieldDirection,System", @"FieldDirection");
            feature.AddKnownType(@"System.CodeDom.MemberAttributes,System", @"MemberAttributes");
            feature.AddKnownType(@"System.CodeDom.Compiler.CodeDomCompilationConfiguration,System", @"CodeDomCompilationConfiguration");
            feature.AddKnownType(@"System.CodeDom.Compiler.CodeDomConfigurationHandler,System", @"CodeDomConfigurationHandler");
            feature.AddKnownType(@"System.CodeDom.Compiler.HandlerBase,System", @"HandlerBase");
            feature.AddKnownType(@"System.CodeDom.Compiler.CodeGeneratorOptions,System", @"CodeGeneratorOptions");
            feature.AddKnownType(@"System.CodeDom.Compiler.CodeParser,System", @"CodeParser");
            feature.AddKnownType(@"System.CodeDom.Compiler.ICodeParser,System", @"ICodeParser");
            feature.AddKnownType(@"System.CodeDom.Compiler.CodeValidator,System", @"CodeValidator");
            feature.AddKnownType(@"System.CodeDom.Compiler.CompilerError,System", @"CompilerError");
            feature.AddKnownType(@"System.CodeDom.Compiler.CompilerErrorCollection,System", @"CompilerErrorCollection");
            feature.AddKnownType(@"System.CodeDom.Compiler.CompilerInfo,System", @"CompilerInfo");
            feature.AddKnownType(@"System.CodeDom.Compiler.CompilerParameters,System", @"CompilerParameters");
            feature.AddKnownType(@"System.CodeDom.Compiler.CompilerResults,System", @"CompilerResults");
            feature.AddKnownType(@"System.CodeDom.Compiler.Executor,System", @"Executor");
            feature.AddKnownType(@"System.CodeDom.Compiler.FileIntegrity,System", @"FileIntegrity");
            feature.AddKnownType(@"System.CodeDom.Compiler.GeneratedCodeAttribute,System", @"GeneratedCodeAttribute");
            feature.AddKnownType(@"System.CodeDom.Compiler.GeneratorSupport,System", @"GeneratorSupport");
            feature.AddKnownType(@"System.CodeDom.Compiler.IndentedTextWriter,System", @"IndentedTextWriter");
            feature.AddKnownType(@"System.CodeDom.Compiler.Indentation,System", @"Indentation");
            feature.AddKnownType(@"System.CodeDom.Compiler.LanguageOptions,System", @"LanguageOptions");
            feature.AddKnownType(@"System.CodeDom.Compiler.RedistVersionInfo,System", @"RedistVersionInfo");
            feature.AddKnownType(@"System.CodeDom.Compiler.TempFileCollection,System", @"TempFileCollection");
            feature.AddKnownType(@"System.Text.RegularExpressions.Regex,System", @"Regex");
            feature.AddKnownType(@"System.Text.RegularExpressions.MatchEvaluator,System", @"MatchEvaluator");
            feature.AddKnownType(@"System.Text.RegularExpressions.CachedCodeEntry,System", @"CachedCodeEntry");
            feature.AddKnownType(@"System.Text.RegularExpressions.ExclusiveReference,System", @"ExclusiveReference");
            feature.AddKnownType(@"System.Text.RegularExpressions.SharedReference,System", @"SharedReference");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexBoyerMoore,System", @"RegexBoyerMoore");
            feature.AddKnownType(@"System.Text.RegularExpressions.Capture,System", @"Capture");
            feature.AddKnownType(@"System.Text.RegularExpressions.CaptureCollection,System", @"CaptureCollection");
            feature.AddKnownType(@"System.Text.RegularExpressions.CaptureEnumerator,System", @"CaptureEnumerator");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexCharClass,System", @"RegexCharClass");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexCode,System", @"RegexCode");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexCompilationInfo,System", @"RegexCompilationInfo");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexCompiler,System", @"RegexCompiler");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexTypeCompiler,System", @"RegexTypeCompiler");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexLWCGCompiler,System", @"RegexLWCGCompiler");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexFCD,System", @"RegexFCD");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexFC,System", @"RegexFC");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexPrefix,System", @"RegexPrefix");
            feature.AddKnownType(@"System.Text.RegularExpressions.Group,System", @"Group");
            feature.AddKnownType(@"System.Text.RegularExpressions.GroupCollection,System", @"GroupCollection");
            feature.AddKnownType(@"System.Text.RegularExpressions.GroupEnumerator,System", @"GroupEnumerator");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexInterpreter,System", @"RegexInterpreter");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexRunner,System", @"RegexRunner");
            feature.AddKnownType(@"System.Text.RegularExpressions.Match,System", @"Match");
            feature.AddKnownType(@"System.Text.RegularExpressions.MatchSparse,System", @"MatchSparse");
            feature.AddKnownType(@"System.Text.RegularExpressions.MatchCollection,System", @"MatchCollection");
            feature.AddKnownType(@"System.Text.RegularExpressions.MatchEnumerator,System", @"MatchEnumerator");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexMatchTimeoutException,System", @"RegexMatchTimeoutException");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexNode,System", @"RegexNode");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexOptions,System", @"RegexOptions");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexParser,System", @"RegexParser");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexReplacement,System", @"RegexReplacement");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexRunnerFactory,System", @"RegexRunnerFactory");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexTree,System", @"RegexTree");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexWriter,System", @"RegexWriter");
            feature.AddKnownType(@"System.Text.RegularExpressions.CompiledRegexRunner,System", @"CompiledRegexRunner");
            feature.AddKnownType(@"System.Text.RegularExpressions.NoParamDelegate,System", @"NoParamDelegate");
            feature.AddKnownType(@"System.Text.RegularExpressions.FindFirstCharDelegate,System", @"FindFirstCharDelegate");
            feature.AddKnownType(@"System.Text.RegularExpressions.CompiledRegexRunnerFactory,System", @"CompiledRegexRunnerFactory");
            feature.AddKnownType(@"System.Text.RegularExpressions.CreateInstanceDelegate,System", @"CreateInstanceDelegate");
            feature.AddKnownType(@"Interop+SChannel,System", @"SChannel");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+TEXTMETRIC,System", @"Microsoft.Win32.TEXTMETRIC");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+STARTUPINFO,System", @"Microsoft.Win32.STARTUPINFO");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES,System", @"Microsoft.Win32.SECURITY_ATTRIBUTES");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+LogonFlags,System", @"Microsoft.Win32.LogonFlags");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+WNDCLASS_I,System", @"Microsoft.Win32.WNDCLASS_I");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+WNDCLASS,System", @"Microsoft.Win32.WNDCLASS");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+MSG,System", @"Microsoft.Win32.Microsoft.Win32.NativeMethods.MSG");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+StructFormatEnum,System", @"Microsoft.Win32.Microsoft.Win32.NativeMethods.StructFormatEnum");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+StructFormat,System", @"Microsoft.Win32.Microsoft.Win32.NativeMethods.StructFormat");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+WndProc,System", @"Microsoft.Win32.Microsoft.Win32.NativeMethods.WndProc");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+ConHndlr,System", @"Microsoft.Win32.Microsoft.Win32.NativeMethods.ConHndlr");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+PDH_RAW_COUNTER,System", @"Microsoft.Win32.Microsoft.Win32.NativeMethods.PDH_RAW_COUNTER");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+PDH_FMT_COUNTERVALUE,System", @"Microsoft.Win32.Microsoft.Win32.NativeMethods.PDH_FMT_COUNTERVALUE");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+PERF_COUNTER_BLOCK,System", @"Microsoft.Win32.PERF_COUNTER_BLOCK");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+PERF_COUNTER_DEFINITION,System", @"Microsoft.Win32.PERF_COUNTER_DEFINITION");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+PERF_DATA_BLOCK,System", @"Microsoft.Win32.PERF_DATA_BLOCK");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+PERF_INSTANCE_DEFINITION,System", @"Microsoft.Win32.PERF_INSTANCE_DEFINITION");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+PERF_OBJECT_TYPE,System", @"Microsoft.Win32.PERF_OBJECT_TYPE");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+NtModuleInfo,System", @"Microsoft.Win32.NtModuleInfo");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+WinProcessEntry,System", @"Microsoft.Win32.WinProcessEntry");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+WinThreadEntry,System", @"Microsoft.Win32.WinThreadEntry");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+WinModuleEntry,System", @"Microsoft.Win32.WinModuleEntry");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+ShellExecuteInfo,System", @"Microsoft.Win32.ShellExecuteInfo");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+NtProcessBasicInfo,System", @"Microsoft.Win32.NtProcessBasicInfo");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+LUID,System", @"Microsoft.Win32.LUID");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+TokenPrivileges,System", @"Microsoft.Win32.TokenPrivileges");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+EnumThreadWindowsCallback,System", @"Microsoft.Win32.EnumThreadWindowsCallback");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+SYSTEMTIME,System", @"Microsoft.Win32.SYSTEMTIME");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+VS_FIXEDFILEINFO,System", @"Microsoft.Win32.VS_FIXEDFILEINFO");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+USEROBJECTFLAGS,System", @"Microsoft.Win32.USEROBJECTFLAGS");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+Util,System", @"Microsoft.Win32.Util");
            feature.AddKnownType(@"Microsoft.Win32.NativeMethods+MEMORY_BASIC_INFORMATION,System", @"Microsoft.Win32.MEMORY_BASIC_INFORMATION");
            feature.AddKnownType(@"Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION,System", @"Microsoft.Win32.PROCESS_INFORMATION");
            feature.AddKnownType(@"Microsoft.Win32.UnsafeNativeMethods+WIN32_FILE_ATTRIBUTE_DATA,System", @"Microsoft.Win32.Microsoft.Win32.UnsafeNativeMethods.WIN32_FILE_ATTRIBUTE_DATA");
            feature.AddKnownType(@"Microsoft.Win32.UnsafeNativeMethods+DCB,System", @"Microsoft.Win32.DCB");
            feature.AddKnownType(@"Microsoft.Win32.UnsafeNativeMethods+COMSTAT,System", @"Microsoft.Win32.COMSTAT");
            feature.AddKnownType(@"Microsoft.Win32.UnsafeNativeMethods+COMMTIMEOUTS,System", @"Microsoft.Win32.COMMTIMEOUTS");
            feature.AddKnownType(@"Microsoft.Win32.UnsafeNativeMethods+COMMPROP,System", @"Microsoft.Win32.COMMPROP");
            feature.AddKnownType(@"System.Timers.Timer+FILE_TIME,System", @"FILE_TIME");
            feature.AddKnownType(@"System.Net.BaseWebProxyFinder+AutoWebProxyState,System", @"AutoWebProxyState");
            feature.AddKnownType(@"System.Net.CookieCollection+Stamp,System", @"Stamp");
            feature.AddKnownType(@"System.Net.WebRequestMethods+Ftp,System", @"WebRequestMethods.Ftp");
            feature.AddKnownType(@"System.Net.WebRequestMethods+Http,System", @"WebRequestMethods.Http");
            feature.AddKnownType(@"System.Net.WebRequestMethods+File,System", @"WebRequestMethods.File");
            feature.AddKnownType(@"System.Net.FtpWebResponse+EmptyStream,System", @"EmptyStream");
            feature.AddKnownType(@"System.Net.HttpListener+ExtendedProtectionSelector,System", @"HttpListener.ExtendedProtectionSelector");
            feature.AddKnownType(@"System.Net.RtcState+ControlChannelTriggerStatus,System", @"ControlChannelTriggerStatus");
            feature.AddKnownType(@"System.Net.SSL_EXTRA_CERT_CHAIN_POLICY_PARA+U,System", @"U");
            feature.AddKnownType(@"System.Net.SecureCredential+Flags,System", @"SecureCredential.Flags");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+ErrorCodes,System", @"ErrorCodes");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+NTStatus,System", @"NTStatus");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+FileCompletionNotificationModes,System", @"FileCompletionNotificationModes");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+RegistryHelper,System", @"RegistryHelper");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+RasHelper,System", @"RasHelper");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+SafeNetHandles_SECURITY,System", @"SafeNetHandles_SECURITY");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+SafeNetHandlesSafeOverlappedFree,System", @"SafeNetHandlesSafeOverlappedFree");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+SafeNetHandlesXPOrLater,System", @"SafeNetHandlesXPOrLater");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+SafeNetHandles,System", @"SafeNetHandles");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK,System", @"OSSOCK");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+NativePKI,System", @"NativePKI");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+NativeNTSSPI,System", @"NativeNTSSPI");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+WinHttp,System", @"WinHttp");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+UnsafeWinInetCache,System", @"UnsafeWinInetCache");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+SspiHelper,System", @"SspiHelper");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi,System", @"HttpApi");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+SecureStringHelper,System", @"SecureStringHelper");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+AppXHelper,System", @"AppXHelper");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+TokenBindingOSHelper,System", @"TokenBindingOSHelper");
            feature.AddKnownType(@"System.Net.WebHeaderCollection+HeaderEncoding,System", @"HeaderEncoding");
            feature.AddKnownType(@"System.Net.WebRequest+DesignerWebRequestCreate,System", @"DesignerWebRequestCreate");
            feature.AddKnownType(@"System.Net.WebRequest+WebProxyWrapperOpaque,System", @"WebProxyWrapperOpaque");
            feature.AddKnownType(@"System.Net.WebRequest+WebProxyWrapper,System", @"WebProxyWrapper");
            feature.AddKnownType(@"System.Net.CommandStream+PipelineInstruction,System", @"PipelineInstruction");
            feature.AddKnownType(@"System.Net.CommandStream+PipelineEntryFlags,System", @"PipelineEntryFlags");
            feature.AddKnownType(@"System.Net.CommandStream+PipelineEntry,System", @"PipelineEntry");
            feature.AddKnownType(@"System.Net.SafeCloseSocket+InnerSafeCloseSocket,System", @"InnerSafeCloseSocket");
            feature.AddKnownType(@"System.Net.TimerThread+Queue,System", @"Queue");
            feature.AddKnownType(@"System.Net.TimerThread+Timer,System", @"Timer");
            feature.AddKnownType(@"System.Net.TimerThread+Callback,System", @"Callback");
            feature.AddKnownType(@"System.Net.TrackingValidationObjectDictionary+ValidateAndParseValue,System", @"ValidateAndParseValue");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketBase+Methods,System", @"Methods");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketHelpers+MethodNames,System", @"MethodNames");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketHttpListenerDuplexStream+HttpListenerAsyncEventArgs,System", @"HttpListenerAsyncEventArgs");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent+Errors,System", @"Errors");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent+Action,System", @"Action");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent+BufferType,System", @"BufferType");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent+PropertyType,System", @"PropertyType");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent+ActionQueue,System", @"ActionQueue");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent+Property,System", @"Property");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent+Buffer,System", @"Buffer");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent+DataBuffer,System", @"DataBuffer");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent+CloseBuffer,System", @"CloseBuffer");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketProtocolComponent+HttpHeader,System", @"HttpHeader");
            feature.AddKnownType(@"System.Net.Mime.MediaTypeNames+Text,System", @"MediaTypeNames.Text");
            feature.AddKnownType(@"System.Net.Mime.MediaTypeNames+Application,System", @"MediaTypeNames.Application");
            feature.AddKnownType(@"System.Net.Mime.MediaTypeNames+Image,System", @"MediaTypeNames.Image");
            feature.AddKnownType(@"System.Net.Mime.MimeBasePart+MimePartAsyncResult,System", @"MimePartAsyncResult");
            feature.AddKnownType(@"System.Net.Mime.MimeMultiPart+MimePartContext,System", @"MimePartContext");
            feature.AddKnownType(@"System.Net.Mime.MimePart+MimePartContext,System", @"MimePartContext");
            feature.AddKnownType(@"System.Net.Mail.Message+EmptySendContext,System", @"EmptySendContext");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkChange+AvailabilityChangeListener,System", @"AvailabilityChangeListener");
            feature.AddKnownType(@"System.Net.NetworkInformation.NetworkChange+AddressChangeListener,System", @"AddressChangeListener");
            feature.AddKnownType(@"System.Net.NetworkInformation.Ping+AsyncStateObject,System", @"AsyncStateObject");
            feature.AddKnownType(@"System.Net.Cache.HttpRequestCacheValidator+ParseCallback,System", @"ParseCallback");
            feature.AddKnownType(@"System.Net.Cache._WinInetCache+EntryType,System", @"EntryType");
            feature.AddKnownType(@"System.Net.Cache._WinInetCache+Entry_FC,System", @"Entry_FC");
            feature.AddKnownType(@"System.Net.Cache._WinInetCache+Status,System", @"Status");
            feature.AddKnownType(@"System.Net.Cache._WinInetCache+FILETIME,System", @"FILETIME");
            feature.AddKnownType(@"System.Net.Cache._WinInetCache+EntryBuffer,System", @"EntryBuffer");
            feature.AddKnownType(@"System.Net.Cache._WinInetCache+Entry,System", @"Entry");
            feature.AddKnownType(@"System.Net.Cache.Rfc2616+TriState,System", @"TriState");
            feature.AddKnownType(@"System.Net.Cache.Rfc2616+Common,System", @"Common");
            feature.AddKnownType(@"System.Net.Cache.SingleItemRequestCache+ReadOnlyStream,System", @"ReadOnlyStream");
            feature.AddKnownType(@"System.Net.Configuration.ProxyElement+BypassOnLocalValues,System", @"ProxyElement.BypassOnLocalValues");
            feature.AddKnownType(@"System.Net.Configuration.ProxyElement+UseSystemDefaultValues,System", @"ProxyElement.UseSystemDefaultValues");
            feature.AddKnownType(@"System.Net.Configuration.ProxyElement+AutoDetectValues,System", @"ProxyElement.AutoDetectValues");
            feature.AddKnownType(@"System.Collections.Specialized.BitVector32+Section,System", @"BitVector32.Section");
            feature.AddKnownType(@"System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry,System", @"NameObjectEntry");
            feature.AddKnownType(@"System.Collections.Specialized.NameObjectCollectionBase+NameObjectKeysEnumerator,System", @"NameObjectKeysEnumerator");
            feature.AddKnownType(@"System.Collections.Specialized.NameObjectCollectionBase+KeysCollection,System", @"NameObjectCollectionBase.KeysCollection");
            feature.AddKnownType(@"System.Collections.Generic.LinkedList`1+Enumerator,System", @"LinkedList`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.Queue`1+Enumerator,System", @"Queue`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.Stack`1+Enumerator,System", @"Stack`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+Enumerator,System", @"SortedDictionary`2'2.Enumerator'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+KeyCollection,System", @"SortedDictionary`2'2.KeyCollection'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+ValueCollection,System", @"SortedDictionary`2'2.ValueCollection'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+KeyValuePairComparer,System", @"KeyValuePairComparer'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+TreeSubSet,System", @"TreeSubSet'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+Node,System", @"Node'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+Enumerator,System", @"SortedSet`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+ElementCount,System", @"ElementCount'1");
            feature.AddKnownType(@"System.Collections.Concurrent.ConcurrentBag`1+Node,System", @"Node'1");
            feature.AddKnownType(@"System.Collections.Concurrent.ConcurrentBag`1+ThreadLocalList,System", @"ThreadLocalList'1");
            feature.AddKnownType(@"System.Collections.Concurrent.ConcurrentBag`1+ListOperation,System", @"ListOperation'1");
            feature.AddKnownType(@"System.IO.Ports.SerialStream+EventLoopRunner,System", @"EventLoopRunner");
            feature.AddKnownType(@"System.IO.Ports.SerialStream+SerialStreamAsyncResult,System", @"SerialStreamAsyncResult");
            feature.AddKnownType(@"System.IO.Compression.DeflateInput+InputState,System", @"InputState");
            feature.AddKnownType(@"System.IO.Compression.ZLibNative+FlushCode,System", @"ZLibNative.FlushCode");
            feature.AddKnownType(@"System.IO.Compression.ZLibNative+ErrorCode,System", @"ZLibNative.ErrorCode");
            feature.AddKnownType(@"System.IO.Compression.ZLibNative+CompressionLevel,System", @"ZLibNative.CompressionLevel");
            feature.AddKnownType(@"System.IO.Compression.ZLibNative+CompressionStrategy,System", @"ZLibNative.CompressionStrategy");
            feature.AddKnownType(@"System.IO.Compression.ZLibNative+CompressionMethod,System", @"ZLibNative.CompressionMethod");
            feature.AddKnownType(@"System.IO.Compression.ZLibNative+ZStream,System", @"ZStream");
            feature.AddKnownType(@"System.IO.Compression.ZLibNative+ZLibStreamHandle,System", @"ZLibNative.ZLibStreamHandle");
            feature.AddKnownType(@"System.IO.Compression.DeflateStream+AsyncWriteDelegate,System", @"AsyncWriteDelegate");
            feature.AddKnownType(@"System.IO.Compression.GZipDecoder+GzipHeaderState,System", @"GzipHeaderState");
            feature.AddKnownType(@"System.IO.Compression.GZipDecoder+GZipOptionalHeaderFlags,System", @"GZipOptionalHeaderFlags");
            feature.AddKnownType(@"System.IO.Compression.OutputBuffer+BufferState,System", @"BufferState");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+BLOBHEADER,System", @"BLOBHEADER");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_INFO,System", @"CERT_ALT_NAME_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_ENTRY,System", @"CERT_ALT_NAME_ENTRY");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_ENTRY_UNION,System", @"CERT_ALT_NAME_ENTRY_UNION");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_BASIC_CONSTRAINTS_INFO,System", @"CERT_BASIC_CONSTRAINTS_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_BASIC_CONSTRAINTS2_INFO,System", @"CERT_BASIC_CONSTRAINTS2_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_CHAIN_CONTEXT,System", @"CERT_CHAIN_CONTEXT");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_CHAIN_ELEMENT,System", @"CERT_CHAIN_ELEMENT");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_CHAIN_PARA,System", @"CERT_CHAIN_PARA");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_CHAIN_POLICY_PARA,System", @"CERT_CHAIN_POLICY_PARA");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_CHAIN_POLICY_STATUS,System", @"CERT_CHAIN_POLICY_STATUS");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_CONTEXT,System", @"CERT_CONTEXT");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_DSS_PARAMETERS,System", @"CERT_DSS_PARAMETERS");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_ENHKEY_USAGE,System", @"CERT_ENHKEY_USAGE");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_EXTENSION,System", @"CERT_EXTENSION");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_ID,System", @"CERT_ID");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_ID_UNION,System", @"CERT_ID_UNION");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_ISSUER_SERIAL_NUMBER,System", @"CERT_ISSUER_SERIAL_NUMBER");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_INFO,System", @"CERT_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_KEY_USAGE_RESTRICTION_INFO,System", @"CERT_KEY_USAGE_RESTRICTION_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_NAME_INFO,System", @"CERT_NAME_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_NAME_VALUE,System", @"CERT_NAME_VALUE");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_OTHER_NAME,System", @"CERT_OTHER_NAME");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_POLICY_ID,System", @"CERT_POLICY_ID");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_POLICIES_INFO,System", @"CERT_POLICIES_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_POLICY_INFO,System", @"CERT_POLICY_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_POLICY_QUALIFIER_INFO,System", @"CERT_POLICY_QUALIFIER_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_PUBLIC_KEY_INFO,System", @"CERT_PUBLIC_KEY_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_PUBLIC_KEY_INFO2,System", @"CERT_PUBLIC_KEY_INFO2");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_RDN,System", @"CERT_RDN");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_RDN_ATTR,System", @"CERT_RDN_ATTR");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_SIMPLE_CHAIN,System", @"CERT_SIMPLE_CHAIN");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_TEMPLATE_EXT,System", @"CERT_TEMPLATE_EXT");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_TRUST_STATUS,System", @"CERT_TRUST_STATUS");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CERT_USAGE_MATCH,System", @"CERT_USAGE_MATCH");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_CMS_RECIPIENT_INFO,System", @"CMSG_CMS_RECIPIENT_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_CMS_SIGNER_INFO,System", @"CMSG_CMS_SIGNER_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA,System", @"CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_CTRL_DECRYPT_PARA,System", @"CMSG_CTRL_DECRYPT_PARA");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA,System", @"CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_CTRL_KEY_TRANS_DECRYPT_PARA,System", @"CMSG_CTRL_KEY_TRANS_DECRYPT_PARA");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO,System", @"CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO,System", @"CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_RC2_AUX_INFO,System", @"CMSG_RC2_AUX_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCODE_INFO,System", @"CMSG_RECIPIENT_ENCODE_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO,System", @"CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_ENVELOPED_ENCODE_INFO,System", @"CMSG_ENVELOPED_ENCODE_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_CTRL_KEY_AGREE_DECRYPT_PARA,System", @"CMSG_CTRL_KEY_AGREE_DECRYPT_PARA");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_RECIPIENT_INFO,System", @"CMSG_KEY_AGREE_RECIPIENT_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_CERT_ID_RECIPIENT_INFO,System", @"CMSG_KEY_AGREE_CERT_ID_RECIPIENT_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_PUBLIC_KEY_RECIPIENT_INFO,System", @"CMSG_KEY_AGREE_PUBLIC_KEY_RECIPIENT_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCRYPTED_KEY_INFO,System", @"CMSG_RECIPIENT_ENCRYPTED_KEY_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA,System", @"CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_KEY_TRANS_RECIPIENT_INFO,System", @"CMSG_KEY_TRANS_RECIPIENT_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_SIGNED_ENCODE_INFO,System", @"CMSG_SIGNED_ENCODE_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_SIGNER_ENCODE_INFO,System", @"CMSG_SIGNER_ENCODE_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_SIGNER_INFO,System", @"CMSG_SIGNER_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+PFN_CMSG_STREAM_OUTPUT,System", @"PFN_CMSG_STREAM_OUTPUT");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CMSG_STREAM_INFO,System", @"CMSG_STREAM_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CRYPT_ALGORITHM_IDENTIFIER,System", @"CRYPT_ALGORITHM_IDENTIFIER");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CRYPT_ALGORITHM_IDENTIFIER2,System", @"CRYPT_ALGORITHM_IDENTIFIER2");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTE,System", @"CRYPT_ATTRIBUTE");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTES,System", @"CRYPT_ATTRIBUTES");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTE_TYPE_VALUE,System", @"CRYPT_ATTRIBUTE_TYPE_VALUE");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CRYPT_BIT_BLOB,System", @"CRYPT_BIT_BLOB");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CRYPT_KEY_PROV_INFO,System", @"CRYPT_KEY_PROV_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CRYPT_OID_INFO,System", @"CRYPT_OID_INFO");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CRYPT_RC2_CBC_PARAMETERS,System", @"CRYPT_RC2_CBC_PARAMETERS");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+CRYPTOAPI_BLOB,System", @"CRYPTOAPI_BLOB");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+DSSPUBKEY,System", @"DSSPUBKEY");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+KEY_USAGE_STRUCT,System", @"KEY_USAGE_STRUCT");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+PROV_ENUMALGS_EX,System", @"PROV_ENUMALGS_EX");
            feature.AddKnownType(@"System.Security.Cryptography.CAPIBase+RSAPUBKEY,System", @"RSAPUBKEY");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509Certificate2Collection+FindProcDelegate,System", @"FindProcDelegate");
            feature.AddKnownType(@"System.Security.Cryptography.X509Certificates.X509CertificateCollection+X509CertificateEnumerator,System", @"X509CertificateCollection.X509CertificateEnumerator");
            feature.AddKnownType(@"System.Diagnostics.NtProcessInfoHelper+SystemProcessInformation,System", @"SystemProcessInformation");
            feature.AddKnownType(@"System.Diagnostics.NtProcessInfoHelper+SystemThreadInformation,System", @"SystemThreadInformation");
            feature.AddKnownType(@"System.ComponentModel.TypeConverter+SimplePropertyDescriptor,System", @"SimplePropertyDescriptor");
            feature.AddKnownType(@"System.ComponentModel.TypeConverter+StandardValuesCollection,System", @"TypeConverter.StandardValuesCollection");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection,System", @"DesignerOptionService.DesignerOptionCollection");
            feature.AddKnownType(@"System.ComponentModel.Design.DesignerOptionService+DesignerOptionConverter,System", @"DesignerOptionConverter");
            feature.AddKnownType(@"System.CodeDom.Compiler.CodeDomCompilationConfiguration+SectionHandler,System", @"SectionHandler");
            feature.AddKnownType(@"System.Text.RegularExpressions.RegexCompiler+BacktrackNote,System", @"BacktrackNote");
            feature.AddKnownType(@"Interop+SChannel+SCHANNEL_ALERT_TOKEN,System", @"SChannel.SCHANNEL_ALERT_TOKEN");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK+WSAPROTOCOLCHAIN,System", @"WSAPROTOCOLCHAIN");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK+WSAPROTOCOL_INFO,System", @"WSAPROTOCOL_INFO");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK+ControlData,System", @"ControlData");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK+ControlDataIPv6,System", @"ControlDataIPv6");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK+WSAMsg,System", @"WSAMsg");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitPacketsElementFlags,System", @"TransmitPacketsElementFlags");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitPacketsElement,System", @"TransmitPacketsElement");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK+SOCKET_ADDRESS,System", @"SOCKET_ADDRESS");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK+SOCKET_ADDRESS_LIST,System", @"SOCKET_ADDRESS_LIST");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitFileBuffersStruct,System", @"TransmitFileBuffersStruct");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+NativePKI+CRYPT_OBJID_BLOB,System", @"CRYPT_OBJID_BLOB");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+NativePKI+CERT_EXTENSION,System", @"CERT_EXTENSION");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+NativePKI+CERT_SELECT_CRITERIA,System", @"CERT_SELECT_CRITERIA");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_CURRENT_USER_IE_PROXY_CONFIG,System", @"WINHTTP_CURRENT_USER_IE_PROXY_CONFIG");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+WinHttp+AutoProxyFlags,System", @"AutoProxyFlags");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+WinHttp+AccessType,System", @"AccessType");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+WinHttp+AutoDetectType,System", @"AutoDetectType");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_AUTOPROXY_OPTIONS,System", @"WINHTTP_AUTOPROXY_OPTIONS");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_PROXY_INFO,System", @"WINHTTP_PROXY_INFO");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+WinHttp+ErrorCodes,System", @"ErrorCodes");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HeapAllocHandle,System", @"HeapAllocHandle");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_API_VERSION,System", @"HTTP_API_VERSION");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVER_PROPERTY,System", @"HTTP_SERVER_PROPERTY");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_INFO_TYPE,System", @"HTTP_REQUEST_INFO_TYPE");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_INFO_TYPE,System", @"HTTP_RESPONSE_INFO_TYPE");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TIMEOUT_TYPE,System", @"HTTP_TIMEOUT_TYPE");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_VERSION,System", @"HTTP_VERSION");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_KNOWN_HEADER,System", @"HTTP_KNOWN_HEADER");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_DATA_CHUNK,System", @"HTTP_DATA_CHUNK");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTPAPI_VERSION,System", @"HTTPAPI_VERSION");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_COOKED_URL,System", @"HTTP_COOKED_URL");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+SOCKADDR,System", @"SOCKADDR");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TRANSPORT_ADDRESS,System", @"HTTP_TRANSPORT_ADDRESS");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SSL_CLIENT_CERT_INFO,System", @"HTTP_SSL_CLIENT_CERT_INFO");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVICE_BINDING_TYPE,System", @"HTTP_SERVICE_BINDING_TYPE");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVICE_BINDING_BASE,System", @"HTTP_SERVICE_BINDING_BASE");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_CHANNEL_BIND_STATUS,System", @"HTTP_REQUEST_CHANNEL_BIND_STATUS");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_UNKNOWN_HEADER,System", @"HTTP_UNKNOWN_HEADER");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SSL_INFO,System", @"HTTP_SSL_INFO");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_HEADERS,System", @"HTTP_RESPONSE_HEADERS");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_HEADERS,System", @"HTTP_REQUEST_HEADERS");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_VERB,System", @"HTTP_VERB");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_DATA_CHUNK_TYPE,System", @"HTTP_DATA_CHUNK_TYPE");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_INFO,System", @"HTTP_RESPONSE_INFO");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE,System", @"HTTP_RESPONSE");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_INFO,System", @"HTTP_REQUEST_INFO");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST,System", @"HTTP_REQUEST");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_V2,System", @"HTTP_REQUEST_V2");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TIMEOUT_LIMIT_INFO,System", @"HTTP_TIMEOUT_LIMIT_INFO");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_BINDING_INFO,System", @"HTTP_BINDING_INFO");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_TOKEN_BINDING_INFO,System", @"HTTP_REQUEST_TOKEN_BINDING_INFO");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_TOKEN_BINDING_INFO_V1,System", @"HTTP_REQUEST_TOKEN_BINDING_INFO_V1");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_HASH_ALGORITHM_V1,System", @"TOKENBINDING_HASH_ALGORITHM_V1");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_SIGNATURE_ALGORITHM_V1,System", @"TOKENBINDING_SIGNATURE_ALGORITHM_V1");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_TYPE,System", @"TOKENBINDING_TYPE");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_EXTENSION_FORMAT,System", @"TOKENBINDING_EXTENSION_FORMAT");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_KEY_PARAMETERS_TYPE,System", @"TOKENBINDING_KEY_PARAMETERS_TYPE");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_IDENTIFIER,System", @"TOKENBINDING_IDENTIFIER");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_IDENTIFIER_V1,System", @"TOKENBINDING_IDENTIFIER_V1");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_DATA,System", @"TOKENBINDING_RESULT_DATA");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_DATA_V1,System", @"TOKENBINDING_RESULT_DATA_V1");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_LIST,System", @"TOKENBINDING_RESULT_LIST");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_LIST_V1,System", @"TOKENBINDING_RESULT_LIST_V1");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_FLAGS,System", @"HTTP_FLAGS");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_HEADER_ID,System", @"HTTP_REQUEST_HEADER_ID");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_HEADER_ID,System", @"HTTP_RESPONSE_HEADER_ID");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketBase+WebSocketOperation+ReceiveOperation,System", @"WebSocketOperation.ReceiveOperation");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketBase+WebSocketOperation+SendOperation,System", @"WebSocketOperation.SendOperation");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketBase+WebSocketOperation+CloseOutputOperation,System", @"WebSocketOperation.CloseOutputOperation");
            feature.AddKnownType(@"System.Net.WebSockets.WebSocketHttpListenerDuplexStream+HttpListenerAsyncEventArgs+HttpListenerAsyncOperation,System", @"HttpListenerAsyncEventArgs.HttpListenerAsyncOperation");
            feature.AddKnownType(@"System.Net.Cache._WinInetCache+EntryBuffer+Rsv,System", @"EntryBuffer.Rsv");
            feature.AddKnownType(@"System.Media.SoundPlayer+NativeMethods+MMCKINFO,System", @"MMCKINFO");
            feature.AddKnownType(@"System.Media.SoundPlayer+NativeMethods+WAVEFORMATEX,System", @"WAVEFORMATEX");
            feature.AddKnownType(@"System.Collections.Specialized.StringDictionary+GenericAdapter+KeyOrValue,System", @"KeyOrValue");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator,System", @"SortedDictionary`2'2.KeyCollection'2.Enumerator'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator,System", @"SortedDictionary`2'2.ValueCollection'2.Enumerator'2");
            feature.AddKnownType(@"System.IO.Compression.ZLibNative+ZLibStreamHandle+State,System", @"ZLibNative.ZLibStreamHandle.State");
            feature.AddKnownType(@"System.ComponentModel.LicenseManager+LicenseInteropHelper+CLRLicenseContext,System", @"CLRLicenseContext");
            feature.AddKnownType(@"System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_HEADER_ID+Enum,System", @"Enum");
            feature.AddKnownType(@"__DynamicallyInvokableAttribute,System", @"__DynamicallyInvokableAttribute");
            feature.AddKnownType(@"SystemImplementation.CountWordStatefulOperator,GrainImplementation", @"SystemImplementation.CountWordStatefulOperator");
            feature.AddKnownType(@"GrainImplementation.StatefulStreamOperator,GrainImplementation", @"GrainImplementation.StatefulStreamOperator");
            feature.AddKnownType(@"SystemImplementation.CountWordStatelessOperator,GrainImplementation", @"SystemImplementation.CountWordStatelessOperator");
            feature.AddKnownType(@"SystemImplementation.StatelessStreamOperator,GrainImplementation", @"SystemImplementation.StatelessStreamOperator");
            feature.AddKnownType(@"SystemImplementation.ErrorDetector,GrainImplementation", @"SystemImplementation.ErrorDetector");
            feature.AddKnownType(@"SystemImplementation.PartitionFunction,GrainImplementation", @"SystemImplementation.PartitionFunction");
            feature.AddKnownType(@"SystemImplementation.SentenceGenerator,GrainImplementation", @"SystemImplementation.SentenceGenerator");
            feature.AddKnownType(@"SystemImplementation.TestStatelessOperator,GrainImplementation", @"SystemImplementation.TestStatelessOperator");
            feature.AddKnownType(@"SystemImplementation.TopologyManager,GrainImplementation", @"SystemImplementation.TopologyManager");
            feature.AddKnownType(@"GrainImplementation.BatchCoodinator,GrainImplementation", @"GrainImplementation.BatchCoodinator");
            feature.AddKnownType(@"GrainImplementation.BatchTracker,GrainImplementation", @"GrainImplementation.BatchTracker");
            feature.AddKnownType(@"GrainImplementation.StreamSource,GrainImplementation", @"GrainImplementation.StreamSource");
            feature.AddKnownType(@"Utils.Constants,Utils", @"Utils.Constants");
            feature.AddKnownType(@"Utils.Functions,Utils", @"Utils.Functions");
            feature.AddKnownType(@"Utils.PrettyConsole,Utils", @"Utils.PrettyConsole");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
